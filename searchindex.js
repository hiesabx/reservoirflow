Search.setIndex({"alltitles": {"API": [[1, "module-reservoirflow"]], "About Us": [[0, "about-us"]], "Access Nomenclature": [[480, "access-nomenclature"]], "Access Units and Factors": [[491, "access-units-and-factors"]], "Accessing FACTORS Dictionary": [[491, "accessing-factors-dictionary"]], "Accessing NOMENCLATURE Dictionary": [[480, "accessing-nomenclature-dictionary"]], "Accessing UNITS Dictionary": [[491, "accessing-units-dictionary"]], "Add wells": [[484, "add-wells"]], "Are You a Reservoir Engineer? \ud83d\ude0e\ud83d\udee2": [[439, "are-you-a-reservoir-engineer"], [449, "are-you-a-reservoir-engineer"]], "Ask a Question \u2753": [[438, "ask-a-question"]], "Backend": [[3, "backend"]], "Backlog \ud83d\udccb": [[469, "backlog"]], "BlackOil": [[175, "blackoil"]], "Blog \ud83d\uddd2": [[431, "blog"]], "Books\ud83d\udcda": [[473, "books"]], "Build a model": [[486, "build-a-model"], [489, "build-a-model"]], "Capabilities": [[430, "capabilities"]], "Cells id": [[487, "cells-id"]], "Citing ReservoirFlow \ud83d\udcc3": [[475, "citing-reservoirflow"]], "Code of Conduct": [[468, "code-of-conduct"]], "Collaboration \ud83e\udd1d": [[457, "collaboration"]], "Collaborators": [[457, "collaborators"], [463, null]], "Commenting Guidelines \u2696": [[434, "commenting-guidelines"]], "Comments \ud83d\udcac": [[0, "comments"], [1, "comments"], [2, "comments"], [3, "comments"], [6, "comments"], [10, "comments"], [14, "comments"], [18, "comments"], [22, "comments"], [23, "comments"], [32, "comments"], [41, "comments"], [54, "comments"], [63, "comments"], [72, "comments"], [73, "comments"], [82, "comments"], [91, "comments"], [100, "comments"], [174, "comments"], [175, "comments"], [210, "comments"], [224, "comments"], [238, "comments"], [252, "comments"], [253, "comments"], [260, "comments"], [267, "comments"], [274, "comments"], [275, "comments"], [276, "comments"], [279, "comments"], [280, "comments"], [285, "comments"], [289, "comments"], [293, "comments"], [297, "comments"], [301, "comments"], [305, "comments"], [309, "comments"], [313, "comments"], [317, "comments"], [318, "comments"], [322, "comments"], [327, "comments"], [328, "comments"], [337, "comments"], [341, "comments"], [345, "comments"], [348, "comments"], [349, "comments"], [363, "comments"], [368, "comments"], [394, "comments"], [395, "comments"], [402, "comments"], [409, "comments"], [423, "comments"], [430, "comments"], [432, "comments"], [433, "comments"], [436, "comments"], [438, "comments"], [439, "comments"], [441, "comments"], [442, "comments"], [444, "comments"], [445, "comments"], [446, "comments"], [448, "comments"], [449, "comments"], [450, "comments"], [452, "comments"], [455, "comments"], [458, "comments"], [460, "comments"], [461, "comments"], [462, "comments"], [464, "comments"], [466, "comments"], [468, "comments"], [469, "comments"], [471, "comments"], [472, "comments"], [477, "comments"], [478, "comments"], [479, "comments"], [480, "comments"], [481, "comments"], [483, "comments"], [484, "comments"], [485, "comments"], [486, "comments"], [487, "comments"], [488, "comments"], [489, "comments"], [491, "comments"], [493, "comments"]], "Community": [[435, "community"]], "Community Topics \ud83d\udc4f": [[440, "community-topics"]], "Companies": [[476, "companies"]], "Companies \ud83d\udcbc": [[459, "companies"]], "Company 1 Sponsor": [[458, "company-1-sponsor"]], "Compile the model": [[484, "compile-the-model"], [489, "compile-the-model"]], "Compiler": [[275, "compiler"]], "Compositional": [[210, "compositional"]], "Contact": [[454, "contact"]], "Contents": [[435, "contents"], [454, "contents"], [474, "contents"], [495, "contents"]], "Contribute": [[468, "contribute"]], "Contribution \ud83e\uddba": [[468, "contribution"]], "Contributors": [[455, "contributors"]], "Create 1D Model": [[487, "create-1d-model"]], "Create a Model": [[483, "create-a-model"]], "Create a reservoir simulation model": [[484, "create-a-reservoir-simulation-model"]], "Custom Scalers": [[489, "custom-scalers"]], "D1P1": [[280, "d1p1"]], "D1P2": [[285, "d1p2"]], "D1P3": [[289, "d1p3"]], "D2P1": [[293, "d2p1"]], "D2P2": [[297, "d2p2"]], "D2P3": [[301, "d2p3"]], "D3P1": [[305, "d3p1"]], "D3P2": [[309, "d3p2"]], "D3P3": [[313, "d3p3"]], "Dedication": [[455, "dedication"]], "DeepONet": [[318, "deeponet"]], "Define a regular cartesian grid": [[484, "define-a-regular-cartesian-grid"]], "Define a single phase compressible fluid": [[484, "define-a-single-phase-compressible-fluid"]], "Define boundary conditions": [[484, "define-boundary-conditions"]], "Definitions": [[479, "definitions"]], "Developers and Researchers": [[476, "developers-and-researchers"]], "Development \ud83d\udc68\u200d\ud83d\udcbb": [[470, "development"]], "Different Solutions for 1-Dimensional-1-Phase Problem": [[483, "different-solutions-for-1-dimensional-1-phase-problem"]], "Directional": [[395, "directional"]], "Disclaimer": [[454, "disclaimer"]], "Dummy": [[253, "dummy"]], "Equations \ud83e\uddfe": [[477, "equations"]], "Event 001 \ud83d\udcc6": [[436, "event-001"]], "Events \ud83d\udcc5": [[437, "events"]], "External \ud83c\udf10": [[433, "external"]], "Extras": [[435, null], [474, null], [495, null]], "FDM": [[328, "fdm"]], "FEM": [[337, "fem"]], "FVM": [[341, "fvm"]], "Factors": [[493, "factors"]], "Five Spot Pattern Single Phase": [[484, "five-spot-pattern-single-phase"]], "Fluid": [[23, "fluid"]], "Forum \ud83d\udd25": [[443, "forum"]], "Funding": [[476, "funding"]], "General": [[479, "general"]], "General Discussion \ud83d\udcad": [[444, "general-discussion"]], "Getting Started \ud83d\udc24": [[478, "getting-started"]], "Glossary \ud83d\udcc7": [[479, "glossary"]], "Grid": [[73, "grid"]], "Home": [[454, "home"]], "How Can I Support This Project?": [[476, "how-can-i-support-this-project"]], "Import Convention": [[454, "import-convention"]], "Import reservoirflow": [[483, "import-reservoirflow"], [484, "import-reservoirflow"], [486, "import-reservoirflow"], [488, "import-reservoirflow"], [489, "import-reservoirflow"]], "Improving Current Modules": [[469, "improving-current-modules"]], "Indices and tables": [[454, "indices-and-tables"]], "Individuals \ud83d\udcaa": [[463, "individuals"]], "Injection wells": [[484, "injection-wells"]], "Installation": [[454, "installation"], [478, "installation"]], "Installation in Virtual Environment": [[478, "installation-in-virtual-environment"]], "Introduce Yourself \ud83d\udc4b": [[445, "introduce-yourself"]], "Introduction": [[462, "introduction"], [483, "introduction"], [484, "introduction"], [485, "introduction"], [486, "introduction"], [487, "introduction"], [488, "introduction"], [489, "introduction"]], "IrregularCartesian": [[82, "irregularcartesian"]], "JAX": [[6, "jax"]], "Learn Scientific Computing": [[485, "learn-scientific-computing"]], "License": [[454, "license"]], "Load Repository": [[468, "load-repository"]], "Make a Suggestion \ud83d\udca1": [[446, "make-a-suggestion"]], "Mathematics": [[479, "mathematics"]], "MinMax": [[260, "minmax"]], "Model": [[224, "model"]], "MultiCell": [[402, "multicell"]], "MultiPhase": [[32, "multiphase"]], "New Modules": [[469, "new-modules"]], "News \ud83d\udd14": [[447, "news"]], "Newsletter 1 \ud83d\udcf0": [[448, "newsletter-1"]], "Nomenclature \ud83c\udff7": [[481, "nomenclature"]], "NumPy": [[10, "numpy"]], "PINN": [[322, "pinn"]], "PINNs are Neurical Solutions \ud83d\udd8b\ufe0f": [[461, "pinns-are-neurical-solutions"]], "Papers \ud83d\udcc4": [[473, "papers"]], "Performance \ud83d\ude80": [[433, "performance"]], "Philosophy of ReservoirFlow": [[0, "philosophy-of-reservoirflow"]], "Prerequisites:": [[483, "prerequisites"]], "Production well": [[484, "production-well"]], "PyTorch": [[14, "pytorch"]], "Python": [[479, "python"]], "R&D": [[474, "r-d"]], "Radial": [[91, "radial"]], "References \ud83d\udce6": [[473, "references"], [491, "references"], [493, "references"]], "RegularCartesian": [[100, "regularcartesian"]], "Release Note v0.1.0": [[455, "release-note-v0-1-0"]], "Release Notes": [[456, "release-notes"]], "Request a Topic \ud83e\udd1a": [[441, "request-a-topic"], [450, "request-a-topic"]], "ReservoirFlow": [[1, "reservoirflow"], [479, "reservoirflow"]], "ReservoirFlow Paper \ud83d\udcc4": [[475, "reservoirflow-paper"]], "Run the model with 40 time steps": [[484, "run-the-model-with-40-time-steps"]], "Save simulation run as gif": [[484, "save-simulation-run-as-gif"]], "Scaler": [[267, "scaler"]], "Scaling Differential Equations": [[462, "scaling-differential-equations"]], "See Also": [[481, null], [493, null]], "Show results as a pandas DataFrame": [[484, "show-results-as-a-pandas-dataframe"]], "Show results as pandas data frame": [[489, "show-results-as-pandas-data-frame"]], "Simple Example": [[489, "simple-example"]], "Simulation Run": [[486, "simulation-run"], [489, "simulation-run"]], "SingleCell": [[409, "singlecell"]], "SinglePhase": [[41, "singlephase"]], "Solution": [[276, "solution"]], "Sponsors": [[454, "sponsors"], [495, "sponsors"]], "Sponsorship": [[476, "sponsorship"]], "Sprint 0001 \u26f3": [[471, "sprint-0001"]], "Sprints \ud83c\udfaf": [[472, "sprints"]], "Support Us": [[476, "support-us"]], "Table": [[481, "table"]], "Team": [[0, "team"]], "Teams \ud83d\udc6f": [[465, "teams"]], "TensorFlow": [[18, "tensorflow"]], "Thermal": [[238, "thermal"]], "ThreePhase": [[54, "threephase"]], "Todo": [[100, "id1"]], "Topics \ud83d\udc4f": [[451, "topics"]], "Tutorials \ud83d\udc68\u200d\ud83c\udfeb": [[490, "tutorials"]], "TwoPhase": [[63, "twophase"]], "Understand Compiling": [[486, "understand-compiling"]], "Understand grids Module": [[487, "understand-grids-module"]], "Understand profme Module": [[488, "understand-profme-module"]], "Understand scalers Module": [[489, "understand-scalers-module"]], "Units": [[493, "units"]], "Units & Factors \ud83d\udcd0": [[493, "units-factors"]], "Universities": [[476, "universities"]], "Universities \ud83c\udf93": [[467, "universities"]], "University 1 Sponsor": [[466, "university-1-sponsor"]], "User Guide": [[495, "user-guide"]], "Users": [[476, "users"]], "Version": [[454, "version"]], "Visualize the simulation run in 3D show": [[484, "visualize-the-simulation-run-in-3d-show"]], "Well": [[423, "well"]], "Why do we need ReservoirFlow? \ud83e\udd37\u200d\u2642\ufe0f": [[442, "why-do-we-need-reservoirflow"], [452, "why-do-we-need-reservoirflow"]], "Zakariya Abugrin Author": [[460, "zakariya-abugrin-author"]], "analytical": [[279, "module-reservoirflow.solutions.analytical"], [279, "id1"]], "backends": [[2, "module-reservoirflow.backends"], [2, "id1"]], "blog01 \ud83d\udcdd": [[432, "blog01"]], "fluids": [[22, "module-reservoirflow.fluids"], [22, "id1"]], "grids": [[72, "module-reservoirflow.grids"], [72, "id1"]], "helpers": [[349, "module-reservoirflow.utils.helpers"], [349, "id1"]], "models": [[174, "module-reservoirflow.models"], [174, "id1"]], "neurical": [[317, "module-reservoirflow.solutions.neurical"], [317, "id1"]], "numerical": [[327, "module-reservoirflow.solutions.numerical"], [327, "id1"]], "profme": [[363, "module-reservoirflow.utils.profme"], [363, "id1"]], "pyvista": [[368, "module-reservoirflow.utils.pyvista"], [368, "id1"]], "reservoirflow.backends": [[469, "reservoirflow-backends"]], "reservoirflow.backends.Backend.ones": [[4, "reservoirflow-backends-backend-ones"]], "reservoirflow.backends.Backend.transpose": [[5, "reservoirflow-backends-backend-transpose"]], "reservoirflow.backends.JAX.name": [[7, "reservoirflow-backends-jax-name"]], "reservoirflow.backends.JAX.ones": [[8, "reservoirflow-backends-jax-ones"]], "reservoirflow.backends.JAX.transpose": [[9, "reservoirflow-backends-jax-transpose"]], "reservoirflow.backends.NumPy.name": [[11, "reservoirflow-backends-numpy-name"]], "reservoirflow.backends.NumPy.ones": [[12, "reservoirflow-backends-numpy-ones"]], "reservoirflow.backends.NumPy.transpose": [[13, "reservoirflow-backends-numpy-transpose"]], "reservoirflow.backends.PyTorch.name": [[15, "reservoirflow-backends-pytorch-name"]], "reservoirflow.backends.PyTorch.ones": [[16, "reservoirflow-backends-pytorch-ones"]], "reservoirflow.backends.PyTorch.transpose": [[17, "reservoirflow-backends-pytorch-transpose"]], "reservoirflow.backends.TensorFlow.name": [[19, "reservoirflow-backends-tensorflow-name"]], "reservoirflow.backends.TensorFlow.ones": [[20, "reservoirflow-backends-tensorflow-ones"]], "reservoirflow.backends.TensorFlow.transpose": [[21, "reservoirflow-backends-tensorflow-transpose"]], "reservoirflow.fluids": [[469, "reservoirflow-fluids"]], "reservoirflow.fluids.Fluid.allow_synonyms": [[24, "reservoirflow-fluids-fluid-allow-synonyms"]], "reservoirflow.fluids.Fluid.factors": [[25, "reservoirflow-fluids-fluid-factors"]], "reservoirflow.fluids.Fluid.name": [[26, "reservoirflow-fluids-fluid-name"]], "reservoirflow.fluids.Fluid.report": [[27, "reservoirflow-fluids-fluid-report"]], "reservoirflow.fluids.Fluid.set_comp": [[28, "reservoirflow-fluids-fluid-set-comp"]], "reservoirflow.fluids.Fluid.set_units": [[29, "reservoirflow-fluids-fluid-set-units"]], "reservoirflow.fluids.Fluid.unit": [[30, "reservoirflow-fluids-fluid-unit"]], "reservoirflow.fluids.Fluid.units": [[31, "reservoirflow-fluids-fluid-units"]], "reservoirflow.fluids.MultiPhase.allow_synonyms": [[33, "reservoirflow-fluids-multiphase-allow-synonyms"]], "reservoirflow.fluids.MultiPhase.factors": [[34, "reservoirflow-fluids-multiphase-factors"]], "reservoirflow.fluids.MultiPhase.name": [[35, "reservoirflow-fluids-multiphase-name"]], "reservoirflow.fluids.MultiPhase.report": [[36, "reservoirflow-fluids-multiphase-report"]], "reservoirflow.fluids.MultiPhase.set_comp": [[37, "reservoirflow-fluids-multiphase-set-comp"]], "reservoirflow.fluids.MultiPhase.set_units": [[38, "reservoirflow-fluids-multiphase-set-units"]], "reservoirflow.fluids.MultiPhase.unit": [[39, "reservoirflow-fluids-multiphase-unit"]], "reservoirflow.fluids.MultiPhase.units": [[40, "reservoirflow-fluids-multiphase-units"]], "reservoirflow.fluids.SinglePhase.allow_synonyms": [[42, "reservoirflow-fluids-singlephase-allow-synonyms"]], "reservoirflow.fluids.SinglePhase.factors": [[43, "reservoirflow-fluids-singlephase-factors"]], "reservoirflow.fluids.SinglePhase.name": [[44, "reservoirflow-fluids-singlephase-name"]], "reservoirflow.fluids.SinglePhase.report": [[45, "reservoirflow-fluids-singlephase-report"]], "reservoirflow.fluids.SinglePhase.set_B": [[46, "reservoirflow-fluids-singlephase-set-b"]], "reservoirflow.fluids.SinglePhase.set_comp": [[47, "reservoirflow-fluids-singlephase-set-comp"]], "reservoirflow.fluids.SinglePhase.set_mu": [[48, "reservoirflow-fluids-singlephase-set-mu"]], "reservoirflow.fluids.SinglePhase.set_props": [[49, "reservoirflow-fluids-singlephase-set-props"]], "reservoirflow.fluids.SinglePhase.set_rho": [[50, "reservoirflow-fluids-singlephase-set-rho"]], "reservoirflow.fluids.SinglePhase.set_units": [[51, "reservoirflow-fluids-singlephase-set-units"]], "reservoirflow.fluids.SinglePhase.unit": [[52, "reservoirflow-fluids-singlephase-unit"]], "reservoirflow.fluids.SinglePhase.units": [[53, "reservoirflow-fluids-singlephase-units"]], "reservoirflow.fluids.ThreePhase.allow_synonyms": [[55, "reservoirflow-fluids-threephase-allow-synonyms"]], "reservoirflow.fluids.ThreePhase.factors": [[56, "reservoirflow-fluids-threephase-factors"]], "reservoirflow.fluids.ThreePhase.name": [[57, "reservoirflow-fluids-threephase-name"]], "reservoirflow.fluids.ThreePhase.report": [[58, "reservoirflow-fluids-threephase-report"]], "reservoirflow.fluids.ThreePhase.set_comp": [[59, "reservoirflow-fluids-threephase-set-comp"]], "reservoirflow.fluids.ThreePhase.set_units": [[60, "reservoirflow-fluids-threephase-set-units"]], "reservoirflow.fluids.ThreePhase.unit": [[61, "reservoirflow-fluids-threephase-unit"]], "reservoirflow.fluids.ThreePhase.units": [[62, "reservoirflow-fluids-threephase-units"]], "reservoirflow.fluids.TwoPhase.allow_synonyms": [[64, "reservoirflow-fluids-twophase-allow-synonyms"]], "reservoirflow.fluids.TwoPhase.factors": [[65, "reservoirflow-fluids-twophase-factors"]], "reservoirflow.fluids.TwoPhase.name": [[66, "reservoirflow-fluids-twophase-name"]], "reservoirflow.fluids.TwoPhase.report": [[67, "reservoirflow-fluids-twophase-report"]], "reservoirflow.fluids.TwoPhase.set_comp": [[68, "reservoirflow-fluids-twophase-set-comp"]], "reservoirflow.fluids.TwoPhase.set_units": [[69, "reservoirflow-fluids-twophase-set-units"]], "reservoirflow.fluids.TwoPhase.unit": [[70, "reservoirflow-fluids-twophase-unit"]], "reservoirflow.fluids.TwoPhase.units": [[71, "reservoirflow-fluids-twophase-units"]], "reservoirflow.grids": [[469, "reservoirflow-grids"]], "reservoirflow.grids.Grid.allow_synonyms": [[74, "reservoirflow-grids-grid-allow-synonyms"]], "reservoirflow.grids.Grid.factors": [[75, "reservoirflow-grids-grid-factors"]], "reservoirflow.grids.Grid.name": [[76, "reservoirflow-grids-grid-name"]], "reservoirflow.grids.Grid.report": [[77, "reservoirflow-grids-grid-report"]], "reservoirflow.grids.Grid.set_comp": [[78, "reservoirflow-grids-grid-set-comp"]], "reservoirflow.grids.Grid.set_units": [[79, "reservoirflow-grids-grid-set-units"]], "reservoirflow.grids.Grid.unit": [[80, "reservoirflow-grids-grid-unit"]], "reservoirflow.grids.Grid.units": [[81, "reservoirflow-grids-grid-units"]], "reservoirflow.grids.IrregularCartesian.allow_synonyms": [[83, "reservoirflow-grids-irregularcartesian-allow-synonyms"]], "reservoirflow.grids.IrregularCartesian.factors": [[84, "reservoirflow-grids-irregularcartesian-factors"]], "reservoirflow.grids.IrregularCartesian.name": [[85, "reservoirflow-grids-irregularcartesian-name"]], "reservoirflow.grids.IrregularCartesian.report": [[86, "reservoirflow-grids-irregularcartesian-report"]], "reservoirflow.grids.IrregularCartesian.set_comp": [[87, "reservoirflow-grids-irregularcartesian-set-comp"]], "reservoirflow.grids.IrregularCartesian.set_units": [[88, "reservoirflow-grids-irregularcartesian-set-units"]], "reservoirflow.grids.IrregularCartesian.unit": [[89, "reservoirflow-grids-irregularcartesian-unit"]], "reservoirflow.grids.IrregularCartesian.units": [[90, "reservoirflow-grids-irregularcartesian-units"]], "reservoirflow.grids.Radial.allow_synonyms": [[92, "reservoirflow-grids-radial-allow-synonyms"]], "reservoirflow.grids.Radial.factors": [[93, "reservoirflow-grids-radial-factors"]], "reservoirflow.grids.Radial.name": [[94, "reservoirflow-grids-radial-name"]], "reservoirflow.grids.Radial.report": [[95, "reservoirflow-grids-radial-report"]], "reservoirflow.grids.Radial.set_comp": [[96, "reservoirflow-grids-radial-set-comp"]], "reservoirflow.grids.Radial.set_units": [[97, "reservoirflow-grids-radial-set-units"]], "reservoirflow.grids.Radial.unit": [[98, "reservoirflow-grids-radial-unit"]], "reservoirflow.grids.Radial.units": [[99, "reservoirflow-grids-radial-units"]], "reservoirflow.grids.RegularCartesian.allow_synonyms": [[101, "reservoirflow-grids-regularcartesian-allow-synonyms"]], "reservoirflow.grids.RegularCartesian.extract_boundaries": [[102, "reservoirflow-grids-regularcartesian-extract-boundaries"]], "reservoirflow.grids.RegularCartesian.factors": [[103, "reservoirflow-grids-regularcartesian-factors"]], "reservoirflow.grids.RegularCartesian.get_D": [[104, "reservoirflow-grids-regularcartesian-get-d"]], "reservoirflow.grids.RegularCartesian.get_Vt": [[105, "reservoirflow-grids-regularcartesian-get-vt"]], "reservoirflow.grids.RegularCartesian.get_boundaries": [[106, "reservoirflow-grids-regularcartesian-get-boundaries"]], "reservoirflow.grids.RegularCartesian.get_cell_A": [[107, "reservoirflow-grids-regularcartesian-get-cell-a"]], "reservoirflow.grids.RegularCartesian.get_cell_Ax": [[108, "reservoirflow-grids-regularcartesian-get-cell-ax"]], "reservoirflow.grids.RegularCartesian.get_cell_Ay": [[109, "reservoirflow-grids-regularcartesian-get-cell-ay"]], "reservoirflow.grids.RegularCartesian.get_cell_Az": [[110, "reservoirflow-grids-regularcartesian-get-cell-az"]], "reservoirflow.grids.RegularCartesian.get_cell_G": [[111, "reservoirflow-grids-regularcartesian-get-cell-g"]], "reservoirflow.grids.RegularCartesian.get_cell_V": [[112, "reservoirflow-grids-regularcartesian-get-cell-v"]], "reservoirflow.grids.RegularCartesian.get_cell_boundaries": [[113, "reservoirflow-grids-regularcartesian-get-cell-boundaries"]], "reservoirflow.grids.RegularCartesian.get_cell_center": [[114, "reservoirflow-grids-regularcartesian-get-cell-center"]], "reservoirflow.grids.RegularCartesian.get_cell_coords": [[115, "reservoirflow-grids-regularcartesian-get-cell-coords"]], "reservoirflow.grids.RegularCartesian.get_cell_d": [[116, "reservoirflow-grids-regularcartesian-get-cell-d"]], "reservoirflow.grids.RegularCartesian.get_cell_dx": [[117, "reservoirflow-grids-regularcartesian-get-cell-dx"]], "reservoirflow.grids.RegularCartesian.get_cell_dy": [[118, "reservoirflow-grids-regularcartesian-get-cell-dy"]], "reservoirflow.grids.RegularCartesian.get_cell_dz": [[119, "reservoirflow-grids-regularcartesian-get-cell-dz"]], "reservoirflow.grids.RegularCartesian.get_cell_icoords": [[120, "reservoirflow-grids-regularcartesian-get-cell-icoords"]], "reservoirflow.grids.RegularCartesian.get_cell_id": [[121, "reservoirflow-grids-regularcartesian-get-cell-id"]], "reservoirflow.grids.RegularCartesian.get_cell_k": [[122, "reservoirflow-grids-regularcartesian-get-cell-k"]], "reservoirflow.grids.RegularCartesian.get_cell_kx": [[123, "reservoirflow-grids-regularcartesian-get-cell-kx"]], "reservoirflow.grids.RegularCartesian.get_cell_ky": [[124, "reservoirflow-grids-regularcartesian-get-cell-ky"]], "reservoirflow.grids.RegularCartesian.get_cell_kz": [[125, "reservoirflow-grids-regularcartesian-get-cell-kz"]], "reservoirflow.grids.RegularCartesian.get_cell_neighbors": [[126, "reservoirflow-grids-regularcartesian-get-cell-neighbors"]], "reservoirflow.grids.RegularCartesian.get_cells_A": [[127, "reservoirflow-grids-regularcartesian-get-cells-a"]], "reservoirflow.grids.RegularCartesian.get_cells_Ax": [[128, "reservoirflow-grids-regularcartesian-get-cells-ax"]], "reservoirflow.grids.RegularCartesian.get_cells_Ay": [[129, "reservoirflow-grids-regularcartesian-get-cells-ay"]], "reservoirflow.grids.RegularCartesian.get_cells_Az": [[130, "reservoirflow-grids-regularcartesian-get-cells-az"]], "reservoirflow.grids.RegularCartesian.get_cells_G": [[131, "reservoirflow-grids-regularcartesian-get-cells-g"]], "reservoirflow.grids.RegularCartesian.get_cells_G_diag_1": [[132, "reservoirflow-grids-regularcartesian-get-cells-g-diag-1"]], "reservoirflow.grids.RegularCartesian.get_cells_G_diag_2": [[133, "reservoirflow-grids-regularcartesian-get-cells-g-diag-2"]], "reservoirflow.grids.RegularCartesian.get_cells_G_diag_3": [[134, "reservoirflow-grids-regularcartesian-get-cells-g-diag-3"]], "reservoirflow.grids.RegularCartesian.get_cells_V": [[135, "reservoirflow-grids-regularcartesian-get-cells-v"]], "reservoirflow.grids.RegularCartesian.get_cells_center": [[136, "reservoirflow-grids-regularcartesian-get-cells-center"]], "reservoirflow.grids.RegularCartesian.get_cells_coords": [[137, "reservoirflow-grids-regularcartesian-get-cells-coords"]], "reservoirflow.grids.RegularCartesian.get_cells_d": [[138, "reservoirflow-grids-regularcartesian-get-cells-d"]], "reservoirflow.grids.RegularCartesian.get_cells_dx": [[139, "reservoirflow-grids-regularcartesian-get-cells-dx"]], "reservoirflow.grids.RegularCartesian.get_cells_dy": [[140, "reservoirflow-grids-regularcartesian-get-cells-dy"]], "reservoirflow.grids.RegularCartesian.get_cells_dz": [[141, "reservoirflow-grids-regularcartesian-get-cells-dz"]], "reservoirflow.grids.RegularCartesian.get_cells_i": [[142, "reservoirflow-grids-regularcartesian-get-cells-i"]], "reservoirflow.grids.RegularCartesian.get_cells_icoords": [[143, "reservoirflow-grids-regularcartesian-get-cells-icoords"]], "reservoirflow.grids.RegularCartesian.get_cells_id": [[144, "reservoirflow-grids-regularcartesian-get-cells-id"]], "reservoirflow.grids.RegularCartesian.get_cells_k": [[145, "reservoirflow-grids-regularcartesian-get-cells-k"]], "reservoirflow.grids.RegularCartesian.get_corners": [[146, "reservoirflow-grids-regularcartesian-get-corners"]], "reservoirflow.grids.RegularCartesian.get_fdir": [[147, "reservoirflow-grids-regularcartesian-get-fdir"]], "reservoirflow.grids.RegularCartesian.get_fshape": [[148, "reservoirflow-grids-regularcartesian-get-fshape"]], "reservoirflow.grids.RegularCartesian.get_n": [[149, "reservoirflow-grids-regularcartesian-get-n"]], "reservoirflow.grids.RegularCartesian.get_n_max": [[150, "reservoirflow-grids-regularcartesian-get-n-max"]], "reservoirflow.grids.RegularCartesian.get_ones": [[151, "reservoirflow-grids-regularcartesian-get-ones"]], "reservoirflow.grids.RegularCartesian.get_order": [[152, "reservoirflow-grids-regularcartesian-get-order"]], "reservoirflow.grids.RegularCartesian.get_prop": [[153, "reservoirflow-grids-regularcartesian-get-prop"]], "reservoirflow.grids.RegularCartesian.get_pyvista_grid": [[154, "reservoirflow-grids-regularcartesian-get-pyvista-grid"]], "reservoirflow.grids.RegularCartesian.get_shape": [[155, "reservoirflow-grids-regularcartesian-get-shape"]], "reservoirflow.grids.RegularCartesian.get_zeros": [[156, "reservoirflow-grids-regularcartesian-get-zeros"]], "reservoirflow.grids.RegularCartesian.is_anisotropic": [[157, "reservoirflow-grids-regularcartesian-is-anisotropic"]], "reservoirflow.grids.RegularCartesian.is_heterogeneous": [[158, "reservoirflow-grids-regularcartesian-is-heterogeneous"]], "reservoirflow.grids.RegularCartesian.is_homogeneous": [[159, "reservoirflow-grids-regularcartesian-is-homogeneous"]], "reservoirflow.grids.RegularCartesian.is_irregular": [[160, "reservoirflow-grids-regularcartesian-is-irregular"]], "reservoirflow.grids.RegularCartesian.is_isotropic": [[161, "reservoirflow-grids-regularcartesian-is-isotropic"]], "reservoirflow.grids.RegularCartesian.is_regular": [[162, "reservoirflow-grids-regularcartesian-is-regular"]], "reservoirflow.grids.RegularCartesian.name": [[163, "reservoirflow-grids-regularcartesian-name"]], "reservoirflow.grids.RegularCartesian.remove_boundaries": [[164, "reservoirflow-grids-regularcartesian-remove-boundaries"]], "reservoirflow.grids.RegularCartesian.report": [[165, "reservoirflow-grids-regularcartesian-report"]], "reservoirflow.grids.RegularCartesian.set_cell_value": [[166, "reservoirflow-grids-regularcartesian-set-cell-value"]], "reservoirflow.grids.RegularCartesian.set_comp": [[167, "reservoirflow-grids-regularcartesian-set-comp"]], "reservoirflow.grids.RegularCartesian.set_prop": [[168, "reservoirflow-grids-regularcartesian-set-prop"]], "reservoirflow.grids.RegularCartesian.set_props": [[169, "reservoirflow-grids-regularcartesian-set-props"]], "reservoirflow.grids.RegularCartesian.set_units": [[170, "reservoirflow-grids-regularcartesian-set-units"]], "reservoirflow.grids.RegularCartesian.show": [[171, "reservoirflow-grids-regularcartesian-show"]], "reservoirflow.grids.RegularCartesian.unit": [[172, "reservoirflow-grids-regularcartesian-unit"]], "reservoirflow.grids.RegularCartesian.units": [[173, "reservoirflow-grids-regularcartesian-units"]], "reservoirflow.models": [[469, "reservoirflow-models"]], "reservoirflow.models.BlackOil.allow_synonyms": [[176, "reservoirflow-models-blackoil-allow-synonyms"]], "reservoirflow.models.BlackOil.compile": [[177, "reservoirflow-models-blackoil-compile"]], "reservoirflow.models.BlackOil.copy": [[178, "reservoirflow-models-blackoil-copy"]], "reservoirflow.models.BlackOil.factors": [[179, "reservoirflow-models-blackoil-factors"]], "reservoirflow.models.BlackOil.get_alpha": [[180, "reservoirflow-models-blackoil-get-alpha"]], "reservoirflow.models.BlackOil.get_cell_trans": [[181, "reservoirflow-models-blackoil-get-cell-trans"]], "reservoirflow.models.BlackOil.get_cells_trans": [[182, "reservoirflow-models-blackoil-get-cells-trans"]], "reservoirflow.models.BlackOil.get_cells_trans_diag": [[183, "reservoirflow-models-blackoil-get-cells-trans-diag"]], "reservoirflow.models.BlackOil.get_centers": [[184, "reservoirflow-models-blackoil-get-centers"]], "reservoirflow.models.BlackOil.get_df": [[185, "reservoirflow-models-blackoil-get-df"]], "reservoirflow.models.BlackOil.get_domain": [[186, "reservoirflow-models-blackoil-get-domain"]], "reservoirflow.models.BlackOil.get_init_arrays": [[187, "reservoirflow-models-blackoil-get-init-arrays"]], "reservoirflow.models.BlackOil.get_shape": [[188, "reservoirflow-models-blackoil-get-shape"]], "reservoirflow.models.BlackOil.get_solutions": [[189, "reservoirflow-models-blackoil-get-solutions"]], "reservoirflow.models.BlackOil.get_time": [[190, "reservoirflow-models-blackoil-get-time"]], "reservoirflow.models.BlackOil.name": [[191, "reservoirflow-models-blackoil-name"]], "reservoirflow.models.BlackOil.plot": [[192, "reservoirflow-models-blackoil-plot"]], "reservoirflow.models.BlackOil.plot_grid": [[193, "reservoirflow-models-blackoil-plot-grid"]], "reservoirflow.models.BlackOil.report": [[194, "reservoirflow-models-blackoil-report"]], "reservoirflow.models.BlackOil.run": [[195, "reservoirflow-models-blackoil-run"]], "reservoirflow.models.BlackOil.save_gif": [[196, "reservoirflow-models-blackoil-save-gif"]], "reservoirflow.models.BlackOil.set_all_boundaries": [[197, "reservoirflow-models-blackoil-set-all-boundaries"]], "reservoirflow.models.BlackOil.set_boundaries": [[198, "reservoirflow-models-blackoil-set-boundaries"]], "reservoirflow.models.BlackOil.set_boundary": [[199, "reservoirflow-models-blackoil-set-boundary"]], "reservoirflow.models.BlackOil.set_comp": [[200, "reservoirflow-models-blackoil-set-comp"]], "reservoirflow.models.BlackOil.set_scalers": [[201, "reservoirflow-models-blackoil-set-scalers"]], "reservoirflow.models.BlackOil.set_solution": [[202, "reservoirflow-models-blackoil-set-solution"]], "reservoirflow.models.BlackOil.set_units": [[203, "reservoirflow-models-blackoil-set-units"]], "reservoirflow.models.BlackOil.set_well": [[204, "reservoirflow-models-blackoil-set-well"]], "reservoirflow.models.BlackOil.show": [[205, "reservoirflow-models-blackoil-show"]], "reservoirflow.models.BlackOil.solve": [[206, "reservoirflow-models-blackoil-solve"]], "reservoirflow.models.BlackOil.unit": [[207, "reservoirflow-models-blackoil-unit"]], "reservoirflow.models.BlackOil.units": [[208, "reservoirflow-models-blackoil-units"]], "reservoirflow.models.BlackOil.update_scalers": [[209, "reservoirflow-models-blackoil-update-scalers"]], "reservoirflow.models.Compositional.allow_synonyms": [[211, "reservoirflow-models-compositional-allow-synonyms"]], "reservoirflow.models.Compositional.compile": [[212, "reservoirflow-models-compositional-compile"]], "reservoirflow.models.Compositional.factors": [[213, "reservoirflow-models-compositional-factors"]], "reservoirflow.models.Compositional.get_solutions": [[214, "reservoirflow-models-compositional-get-solutions"]], "reservoirflow.models.Compositional.name": [[215, "reservoirflow-models-compositional-name"]], "reservoirflow.models.Compositional.report": [[216, "reservoirflow-models-compositional-report"]], "reservoirflow.models.Compositional.run": [[217, "reservoirflow-models-compositional-run"]], "reservoirflow.models.Compositional.set_comp": [[218, "reservoirflow-models-compositional-set-comp"]], "reservoirflow.models.Compositional.set_solution": [[219, "reservoirflow-models-compositional-set-solution"]], "reservoirflow.models.Compositional.set_units": [[220, "reservoirflow-models-compositional-set-units"]], "reservoirflow.models.Compositional.solve": [[221, "reservoirflow-models-compositional-solve"]], "reservoirflow.models.Compositional.unit": [[222, "reservoirflow-models-compositional-unit"]], "reservoirflow.models.Compositional.units": [[223, "reservoirflow-models-compositional-units"]], "reservoirflow.models.Model.allow_synonyms": [[225, "reservoirflow-models-model-allow-synonyms"]], "reservoirflow.models.Model.compile": [[226, "reservoirflow-models-model-compile"]], "reservoirflow.models.Model.factors": [[227, "reservoirflow-models-model-factors"]], "reservoirflow.models.Model.get_solutions": [[228, "reservoirflow-models-model-get-solutions"]], "reservoirflow.models.Model.name": [[229, "reservoirflow-models-model-name"]], "reservoirflow.models.Model.report": [[230, "reservoirflow-models-model-report"]], "reservoirflow.models.Model.run": [[231, "reservoirflow-models-model-run"]], "reservoirflow.models.Model.set_comp": [[232, "reservoirflow-models-model-set-comp"]], "reservoirflow.models.Model.set_solution": [[233, "reservoirflow-models-model-set-solution"]], "reservoirflow.models.Model.set_units": [[234, "reservoirflow-models-model-set-units"]], "reservoirflow.models.Model.solve": [[235, "reservoirflow-models-model-solve"]], "reservoirflow.models.Model.unit": [[236, "reservoirflow-models-model-unit"]], "reservoirflow.models.Model.units": [[237, "reservoirflow-models-model-units"]], "reservoirflow.models.Thermal.allow_synonyms": [[239, "reservoirflow-models-thermal-allow-synonyms"]], "reservoirflow.models.Thermal.compile": [[240, "reservoirflow-models-thermal-compile"]], "reservoirflow.models.Thermal.factors": [[241, "reservoirflow-models-thermal-factors"]], "reservoirflow.models.Thermal.get_solutions": [[242, "reservoirflow-models-thermal-get-solutions"]], "reservoirflow.models.Thermal.name": [[243, "reservoirflow-models-thermal-name"]], "reservoirflow.models.Thermal.report": [[244, "reservoirflow-models-thermal-report"]], "reservoirflow.models.Thermal.run": [[245, "reservoirflow-models-thermal-run"]], "reservoirflow.models.Thermal.set_comp": [[246, "reservoirflow-models-thermal-set-comp"]], "reservoirflow.models.Thermal.set_solution": [[247, "reservoirflow-models-thermal-set-solution"]], "reservoirflow.models.Thermal.set_units": [[248, "reservoirflow-models-thermal-set-units"]], "reservoirflow.models.Thermal.solve": [[249, "reservoirflow-models-thermal-solve"]], "reservoirflow.models.Thermal.unit": [[250, "reservoirflow-models-thermal-unit"]], "reservoirflow.models.Thermal.units": [[251, "reservoirflow-models-thermal-units"]], "reservoirflow.scalers.Dummy.fit": [[254, "reservoirflow-scalers-dummy-fit"]], "reservoirflow.scalers.Dummy.fit_transform": [[255, "reservoirflow-scalers-dummy-fit-transform"]], "reservoirflow.scalers.Dummy.inverse_transform": [[256, "reservoirflow-scalers-dummy-inverse-transform"]], "reservoirflow.scalers.Dummy.name": [[257, "reservoirflow-scalers-dummy-name"]], "reservoirflow.scalers.Dummy.set_output_range": [[258, "reservoirflow-scalers-dummy-set-output-range"]], "reservoirflow.scalers.Dummy.transform": [[259, "reservoirflow-scalers-dummy-transform"]], "reservoirflow.scalers.MinMax.fit": [[261, "reservoirflow-scalers-minmax-fit"]], "reservoirflow.scalers.MinMax.fit_transform": [[262, "reservoirflow-scalers-minmax-fit-transform"]], "reservoirflow.scalers.MinMax.inverse_transform": [[263, "reservoirflow-scalers-minmax-inverse-transform"]], "reservoirflow.scalers.MinMax.name": [[264, "reservoirflow-scalers-minmax-name"]], "reservoirflow.scalers.MinMax.set_output_range": [[265, "reservoirflow-scalers-minmax-set-output-range"]], "reservoirflow.scalers.MinMax.transform": [[266, "reservoirflow-scalers-minmax-transform"]], "reservoirflow.scalers.Scaler.fit": [[268, "reservoirflow-scalers-scaler-fit"]], "reservoirflow.scalers.Scaler.fit_transform": [[269, "reservoirflow-scalers-scaler-fit-transform"]], "reservoirflow.scalers.Scaler.inverse_transform": [[270, "reservoirflow-scalers-scaler-inverse-transform"]], "reservoirflow.scalers.Scaler.name": [[271, "reservoirflow-scalers-scaler-name"]], "reservoirflow.scalers.Scaler.set_output_range": [[272, "reservoirflow-scalers-scaler-set-output-range"]], "reservoirflow.scalers.Scaler.transform": [[273, "reservoirflow-scalers-scaler-transform"]], "reservoirflow.solutions": [[469, "reservoirflow-solutions"]], "reservoirflow.solutions.Solution.run": [[277, "reservoirflow-solutions-solution-run"]], "reservoirflow.solutions.Solution.solve": [[278, "reservoirflow-solutions-solution-solve"]], "reservoirflow.solutions.analytical.D1P1.calc_solution": [[281, "reservoirflow-solutions-analytical-d1p1-calc-solution"]], "reservoirflow.solutions.analytical.D1P1.name": [[282, "reservoirflow-solutions-analytical-d1p1-name"]], "reservoirflow.solutions.analytical.D1P1.run": [[283, "reservoirflow-solutions-analytical-d1p1-run"]], "reservoirflow.solutions.analytical.D1P1.solve": [[284, "reservoirflow-solutions-analytical-d1p1-solve"]], "reservoirflow.solutions.analytical.D1P2.name": [[286, "reservoirflow-solutions-analytical-d1p2-name"]], "reservoirflow.solutions.analytical.D1P2.run": [[287, "reservoirflow-solutions-analytical-d1p2-run"]], "reservoirflow.solutions.analytical.D1P2.solve": [[288, "reservoirflow-solutions-analytical-d1p2-solve"]], "reservoirflow.solutions.analytical.D1P3.name": [[290, "reservoirflow-solutions-analytical-d1p3-name"]], "reservoirflow.solutions.analytical.D1P3.run": [[291, "reservoirflow-solutions-analytical-d1p3-run"]], "reservoirflow.solutions.analytical.D1P3.solve": [[292, "reservoirflow-solutions-analytical-d1p3-solve"]], "reservoirflow.solutions.analytical.D2P1.name": [[294, "reservoirflow-solutions-analytical-d2p1-name"]], "reservoirflow.solutions.analytical.D2P1.run": [[295, "reservoirflow-solutions-analytical-d2p1-run"]], "reservoirflow.solutions.analytical.D2P1.solve": [[296, "reservoirflow-solutions-analytical-d2p1-solve"]], "reservoirflow.solutions.analytical.D2P2.name": [[298, "reservoirflow-solutions-analytical-d2p2-name"]], "reservoirflow.solutions.analytical.D2P2.run": [[299, "reservoirflow-solutions-analytical-d2p2-run"]], "reservoirflow.solutions.analytical.D2P2.solve": [[300, "reservoirflow-solutions-analytical-d2p2-solve"]], "reservoirflow.solutions.analytical.D2P3.name": [[302, "reservoirflow-solutions-analytical-d2p3-name"]], "reservoirflow.solutions.analytical.D2P3.run": [[303, "reservoirflow-solutions-analytical-d2p3-run"]], "reservoirflow.solutions.analytical.D2P3.solve": [[304, "reservoirflow-solutions-analytical-d2p3-solve"]], "reservoirflow.solutions.analytical.D3P1.name": [[306, "reservoirflow-solutions-analytical-d3p1-name"]], "reservoirflow.solutions.analytical.D3P1.run": [[307, "reservoirflow-solutions-analytical-d3p1-run"]], "reservoirflow.solutions.analytical.D3P1.solve": [[308, "reservoirflow-solutions-analytical-d3p1-solve"]], "reservoirflow.solutions.analytical.D3P2.name": [[310, "reservoirflow-solutions-analytical-d3p2-name"]], "reservoirflow.solutions.analytical.D3P2.run": [[311, "reservoirflow-solutions-analytical-d3p2-run"]], "reservoirflow.solutions.analytical.D3P2.solve": [[312, "reservoirflow-solutions-analytical-d3p2-solve"]], "reservoirflow.solutions.analytical.D3P3.name": [[314, "reservoirflow-solutions-analytical-d3p3-name"]], "reservoirflow.solutions.analytical.D3P3.run": [[315, "reservoirflow-solutions-analytical-d3p3-run"]], "reservoirflow.solutions.analytical.D3P3.solve": [[316, "reservoirflow-solutions-analytical-d3p3-solve"]], "reservoirflow.solutions.neurical.DeepONet.name": [[319, "reservoirflow-solutions-neurical-deeponet-name"]], "reservoirflow.solutions.neurical.DeepONet.run": [[320, "reservoirflow-solutions-neurical-deeponet-run"]], "reservoirflow.solutions.neurical.DeepONet.solve": [[321, "reservoirflow-solutions-neurical-deeponet-solve"]], "reservoirflow.solutions.neurical.PINN.fit": [[323, "reservoirflow-solutions-neurical-pinn-fit"]], "reservoirflow.solutions.neurical.PINN.name": [[324, "reservoirflow-solutions-neurical-pinn-name"]], "reservoirflow.solutions.neurical.PINN.run": [[325, "reservoirflow-solutions-neurical-pinn-run"]], "reservoirflow.solutions.neurical.PINN.solve": [[326, "reservoirflow-solutions-neurical-pinn-solve"]], "reservoirflow.solutions.numerical.FDM.check_MB": [[329, "reservoirflow-solutions-numerical-fdm-check-mb"]], "reservoirflow.solutions.numerical.FDM.get_cell_eq": [[330, "reservoirflow-solutions-numerical-fdm-get-cell-eq"]], "reservoirflow.solutions.numerical.FDM.get_cells_eq": [[331, "reservoirflow-solutions-numerical-fdm-get-cells-eq"]], "reservoirflow.solutions.numerical.FDM.get_matrices_symb": [[332, "reservoirflow-solutions-numerical-fdm-get-matrices-symb"]], "reservoirflow.solutions.numerical.FDM.get_matrices_vect": [[333, "reservoirflow-solutions-numerical-fdm-get-matrices-vect"]], "reservoirflow.solutions.numerical.FDM.name": [[334, "reservoirflow-solutions-numerical-fdm-name"]], "reservoirflow.solutions.numerical.FDM.run": [[335, "reservoirflow-solutions-numerical-fdm-run"]], "reservoirflow.solutions.numerical.FDM.solve": [[336, "reservoirflow-solutions-numerical-fdm-solve"]], "reservoirflow.solutions.numerical.FEM.name": [[338, "reservoirflow-solutions-numerical-fem-name"]], "reservoirflow.solutions.numerical.FEM.run": [[339, "reservoirflow-solutions-numerical-fem-run"]], "reservoirflow.solutions.numerical.FEM.solve": [[340, "reservoirflow-solutions-numerical-fem-solve"]], "reservoirflow.solutions.numerical.FVM.name": [[342, "reservoirflow-solutions-numerical-fvm-name"]], "reservoirflow.solutions.numerical.FVM.run": [[343, "reservoirflow-solutions-numerical-fvm-run"]], "reservoirflow.solutions.numerical.FVM.solve": [[344, "reservoirflow-solutions-numerical-fvm-solve"]], "reservoirflow.solutions.numerical.solvers.get_dsolver": [[346, "reservoirflow-solutions-numerical-solvers-get-dsolver"]], "reservoirflow.solutions.numerical.solvers.get_isolver": [[347, "reservoirflow-solutions-numerical-solvers-get-isolver"]], "reservoirflow.utils": [[469, "reservoirflow-utils"]], "reservoirflow.utils.helpers.fshape_warn": [[350, "reservoirflow-utils-helpers-fshape-warn"]], "reservoirflow.utils.helpers.get_boundary_str": [[351, "reservoirflow-utils-helpers-get-boundary-str"]], "reservoirflow.utils.helpers.get_fshape_str": [[352, "reservoirflow-utils-helpers-get-fshape-str"]], "reservoirflow.utils.helpers.get_points_str": [[353, "reservoirflow-utils-helpers-get-points-str"]], "reservoirflow.utils.helpers.get_verbose_str": [[354, "reservoirflow-utils-helpers-get-verbose-str"]], "reservoirflow.utils.helpers.intersection": [[355, "reservoirflow-utils-helpers-intersection"]], "reservoirflow.utils.helpers.isin": [[356, "reservoirflow-utils-helpers-isin"]], "reservoirflow.utils.helpers.ispoints": [[357, "reservoirflow-utils-helpers-ispoints"]], "reservoirflow.utils.helpers.issametype": [[358, "reservoirflow-utils-helpers-issametype"]], "reservoirflow.utils.helpers.lru_cache": [[359, "reservoirflow-utils-helpers-lru-cache"]], "reservoirflow.utils.helpers.reformat": [[360, "reservoirflow-utils-helpers-reformat"]], "reservoirflow.utils.helpers.remove_diag": [[361, "reservoirflow-utils-helpers-remove-diag"]], "reservoirflow.utils.helpers.shape_error": [[362, "reservoirflow-utils-helpers-shape-error"]], "reservoirflow.utils.profme.cProfiler": [[364, "reservoirflow-utils-profme-cprofiler"]], "reservoirflow.utils.profme.lProfiler": [[365, "reservoirflow-utils-profme-lprofiler"]], "reservoirflow.utils.profme.profile": [[366, "reservoirflow-utils-profme-profile"]], "reservoirflow.utils.profme.timeit": [[367, "reservoirflow-utils-profme-timeit"]], "reservoirflow.utils.pyvista.add_desc": [[369, "reservoirflow-utils-pyvista-add-desc"]], "reservoirflow.utils.pyvista.add_grid_labels": [[370, "reservoirflow-utils-pyvista-add-grid-labels"]], "reservoirflow.utils.pyvista.add_ruler": [[371, "reservoirflow-utils-pyvista-add-ruler"]], "reservoirflow.utils.pyvista.add_title": [[372, "reservoirflow-utils-pyvista-add-title"]], "reservoirflow.utils.pyvista.add_wells": [[373, "reservoirflow-utils-pyvista-add-wells"]], "reservoirflow.utils.pyvista.align_camera": [[374, "reservoirflow-utils-pyvista-align-camera"]], "reservoirflow.utils.pyvista.decide_widget": [[375, "reservoirflow-utils-pyvista-decide-widget"]], "reservoirflow.utils.pyvista.get_annotations": [[376, "reservoirflow-utils-pyvista-get-annotations"]], "reservoirflow.utils.pyvista.get_cbar_dict": [[377, "reservoirflow-utils-pyvista-get-cbar-dict"]], "reservoirflow.utils.pyvista.get_cdir": [[378, "reservoirflow-utils-pyvista-get-cdir"]], "reservoirflow.utils.pyvista.get_colormap": [[379, "reservoirflow-utils-pyvista-get-colormap"]], "reservoirflow.utils.pyvista.get_grid_plotter": [[380, "reservoirflow-utils-pyvista-get-grid-plotter"]], "reservoirflow.utils.pyvista.get_limits_fmt": [[381, "reservoirflow-utils-pyvista-get-limits-fmt"]], "reservoirflow.utils.pyvista.get_model_plotter": [[382, "reservoirflow-utils-pyvista-get-model-plotter"]], "reservoirflow.utils.pyvista.get_model_values": [[383, "reservoirflow-utils-pyvista-get-model-values"]], "reservoirflow.utils.pyvista.get_text_locs": [[384, "reservoirflow-utils-pyvista-get-text-locs"]], "reservoirflow.utils.pyvista.get_window_size": [[385, "reservoirflow-utils-pyvista-get-window-size"]], "reservoirflow.utils.pyvista.save_gif": [[386, "reservoirflow-utils-pyvista-save-gif"]], "reservoirflow.utils.pyvista.set_background_color": [[387, "reservoirflow-utils-pyvista-set-background-color"]], "reservoirflow.utils.pyvista.set_mode": [[388, "reservoirflow-utils-pyvista-set-mode"]], "reservoirflow.utils.pyvista.set_plotter_backend": [[389, "reservoirflow-utils-pyvista-set-plotter-backend"]], "reservoirflow.utils.pyvista.set_plotter_config": [[390, "reservoirflow-utils-pyvista-set-plotter-config"]], "reservoirflow.utils.pyvista.set_text_color": [[391, "reservoirflow-utils-pyvista-set-text-color"]], "reservoirflow.utils.pyvista.show_grid": [[392, "reservoirflow-utils-pyvista-show-grid"]], "reservoirflow.utils.pyvista.show_model": [[393, "reservoirflow-utils-pyvista-show-model"]], "reservoirflow.wells": [[469, "reservoirflow-wells"]], "reservoirflow.wells.Directional.factors": [[396, "reservoirflow-wells-directional-factors"]], "reservoirflow.wells.Directional.name": [[397, "reservoirflow-wells-directional-name"]], "reservoirflow.wells.Directional.report": [[398, "reservoirflow-wells-directional-report"]], "reservoirflow.wells.Directional.set_units": [[399, "reservoirflow-wells-directional-set-units"]], "reservoirflow.wells.Directional.unit": [[400, "reservoirflow-wells-directional-unit"]], "reservoirflow.wells.Directional.units": [[401, "reservoirflow-wells-directional-units"]], "reservoirflow.wells.MultiCell.factors": [[403, "reservoirflow-wells-multicell-factors"]], "reservoirflow.wells.MultiCell.name": [[404, "reservoirflow-wells-multicell-name"]], "reservoirflow.wells.MultiCell.report": [[405, "reservoirflow-wells-multicell-report"]], "reservoirflow.wells.MultiCell.set_units": [[406, "reservoirflow-wells-multicell-set-units"]], "reservoirflow.wells.MultiCell.unit": [[407, "reservoirflow-wells-multicell-unit"]], "reservoirflow.wells.MultiCell.units": [[408, "reservoirflow-wells-multicell-units"]], "reservoirflow.wells.SingleCell.allow_synonyms": [[410, "reservoirflow-wells-singlecell-allow-synonyms"]], "reservoirflow.wells.SingleCell.factors": [[411, "reservoirflow-wells-singlecell-factors"]], "reservoirflow.wells.SingleCell.name": [[412, "reservoirflow-wells-singlecell-name"]], "reservoirflow.wells.SingleCell.report": [[413, "reservoirflow-wells-singlecell-report"]], "reservoirflow.wells.SingleCell.set_cell_id": [[414, "reservoirflow-wells-singlecell-set-cell-id"]], "reservoirflow.wells.SingleCell.set_constrain": [[415, "reservoirflow-wells-singlecell-set-constrain"]], "reservoirflow.wells.SingleCell.set_props": [[416, "reservoirflow-wells-singlecell-set-props"]], "reservoirflow.wells.SingleCell.set_q": [[417, "reservoirflow-wells-singlecell-set-q"]], "reservoirflow.wells.SingleCell.set_r": [[418, "reservoirflow-wells-singlecell-set-r"]], "reservoirflow.wells.SingleCell.set_s": [[419, "reservoirflow-wells-singlecell-set-s"]], "reservoirflow.wells.SingleCell.set_units": [[420, "reservoirflow-wells-singlecell-set-units"]], "reservoirflow.wells.SingleCell.unit": [[421, "reservoirflow-wells-singlecell-unit"]], "reservoirflow.wells.SingleCell.units": [[422, "reservoirflow-wells-singlecell-units"]], "reservoirflow.wells.Well.factors": [[424, "reservoirflow-wells-well-factors"]], "reservoirflow.wells.Well.name": [[425, "reservoirflow-wells-well-name"]], "reservoirflow.wells.Well.report": [[426, "reservoirflow-wells-well-report"]], "reservoirflow.wells.Well.set_units": [[427, "reservoirflow-wells-well-set-units"]], "reservoirflow.wells.Well.unit": [[428, "reservoirflow-wells-well-unit"]], "reservoirflow.wells.Well.units": [[429, "reservoirflow-wells-well-units"]], "scalers": [[252, "module-reservoirflow.scalers"], [252, "id1"]], "solutions": [[274, "module-reservoirflow.solutions"], [274, "id1"]], "solvers": [[345, "module-reservoirflow.solutions.numerical.solvers"], [345, "id1"]], "tcolab_0001 \u270f": [[464, "tcolab-0001"]], "utils": [[348, "module-reservoirflow.utils"], [348, "id1"]], "wells": [[394, "module-reservoirflow.wells"], [394, "id1"]]}, "docnames": ["about_us", "api/API", "api/reservoirflow.backends", "api/reservoirflow.backends.Backend", "api/reservoirflow.backends.Backend.ones", "api/reservoirflow.backends.Backend.transpose", "api/reservoirflow.backends.JAX", "api/reservoirflow.backends.JAX.name", "api/reservoirflow.backends.JAX.ones", "api/reservoirflow.backends.JAX.transpose", "api/reservoirflow.backends.NumPy", "api/reservoirflow.backends.NumPy.name", "api/reservoirflow.backends.NumPy.ones", "api/reservoirflow.backends.NumPy.transpose", "api/reservoirflow.backends.PyTorch", "api/reservoirflow.backends.PyTorch.name", "api/reservoirflow.backends.PyTorch.ones", "api/reservoirflow.backends.PyTorch.transpose", "api/reservoirflow.backends.TensorFlow", "api/reservoirflow.backends.TensorFlow.name", "api/reservoirflow.backends.TensorFlow.ones", "api/reservoirflow.backends.TensorFlow.transpose", "api/reservoirflow.fluids", "api/reservoirflow.fluids.Fluid", "api/reservoirflow.fluids.Fluid.allow_synonyms", "api/reservoirflow.fluids.Fluid.factors", "api/reservoirflow.fluids.Fluid.name", "api/reservoirflow.fluids.Fluid.report", "api/reservoirflow.fluids.Fluid.set_comp", "api/reservoirflow.fluids.Fluid.set_units", "api/reservoirflow.fluids.Fluid.unit", "api/reservoirflow.fluids.Fluid.units", "api/reservoirflow.fluids.MultiPhase", "api/reservoirflow.fluids.MultiPhase.allow_synonyms", "api/reservoirflow.fluids.MultiPhase.factors", "api/reservoirflow.fluids.MultiPhase.name", "api/reservoirflow.fluids.MultiPhase.report", "api/reservoirflow.fluids.MultiPhase.set_comp", "api/reservoirflow.fluids.MultiPhase.set_units", "api/reservoirflow.fluids.MultiPhase.unit", "api/reservoirflow.fluids.MultiPhase.units", "api/reservoirflow.fluids.SinglePhase", "api/reservoirflow.fluids.SinglePhase.allow_synonyms", "api/reservoirflow.fluids.SinglePhase.factors", "api/reservoirflow.fluids.SinglePhase.name", "api/reservoirflow.fluids.SinglePhase.report", "api/reservoirflow.fluids.SinglePhase.set_B", "api/reservoirflow.fluids.SinglePhase.set_comp", "api/reservoirflow.fluids.SinglePhase.set_mu", "api/reservoirflow.fluids.SinglePhase.set_props", "api/reservoirflow.fluids.SinglePhase.set_rho", "api/reservoirflow.fluids.SinglePhase.set_units", "api/reservoirflow.fluids.SinglePhase.unit", "api/reservoirflow.fluids.SinglePhase.units", "api/reservoirflow.fluids.ThreePhase", "api/reservoirflow.fluids.ThreePhase.allow_synonyms", "api/reservoirflow.fluids.ThreePhase.factors", "api/reservoirflow.fluids.ThreePhase.name", "api/reservoirflow.fluids.ThreePhase.report", "api/reservoirflow.fluids.ThreePhase.set_comp", "api/reservoirflow.fluids.ThreePhase.set_units", "api/reservoirflow.fluids.ThreePhase.unit", "api/reservoirflow.fluids.ThreePhase.units", "api/reservoirflow.fluids.TwoPhase", "api/reservoirflow.fluids.TwoPhase.allow_synonyms", "api/reservoirflow.fluids.TwoPhase.factors", "api/reservoirflow.fluids.TwoPhase.name", "api/reservoirflow.fluids.TwoPhase.report", "api/reservoirflow.fluids.TwoPhase.set_comp", "api/reservoirflow.fluids.TwoPhase.set_units", "api/reservoirflow.fluids.TwoPhase.unit", "api/reservoirflow.fluids.TwoPhase.units", "api/reservoirflow.grids", "api/reservoirflow.grids.Grid", "api/reservoirflow.grids.Grid.allow_synonyms", "api/reservoirflow.grids.Grid.factors", "api/reservoirflow.grids.Grid.name", "api/reservoirflow.grids.Grid.report", "api/reservoirflow.grids.Grid.set_comp", "api/reservoirflow.grids.Grid.set_units", "api/reservoirflow.grids.Grid.unit", "api/reservoirflow.grids.Grid.units", "api/reservoirflow.grids.IrregularCartesian", "api/reservoirflow.grids.IrregularCartesian.allow_synonyms", "api/reservoirflow.grids.IrregularCartesian.factors", "api/reservoirflow.grids.IrregularCartesian.name", "api/reservoirflow.grids.IrregularCartesian.report", "api/reservoirflow.grids.IrregularCartesian.set_comp", "api/reservoirflow.grids.IrregularCartesian.set_units", "api/reservoirflow.grids.IrregularCartesian.unit", "api/reservoirflow.grids.IrregularCartesian.units", "api/reservoirflow.grids.Radial", "api/reservoirflow.grids.Radial.allow_synonyms", "api/reservoirflow.grids.Radial.factors", "api/reservoirflow.grids.Radial.name", "api/reservoirflow.grids.Radial.report", "api/reservoirflow.grids.Radial.set_comp", "api/reservoirflow.grids.Radial.set_units", "api/reservoirflow.grids.Radial.unit", "api/reservoirflow.grids.Radial.units", "api/reservoirflow.grids.RegularCartesian", "api/reservoirflow.grids.RegularCartesian.allow_synonyms", "api/reservoirflow.grids.RegularCartesian.extract_boundaries", "api/reservoirflow.grids.RegularCartesian.factors", "api/reservoirflow.grids.RegularCartesian.get_D", "api/reservoirflow.grids.RegularCartesian.get_Vt", "api/reservoirflow.grids.RegularCartesian.get_boundaries", "api/reservoirflow.grids.RegularCartesian.get_cell_A", "api/reservoirflow.grids.RegularCartesian.get_cell_Ax", "api/reservoirflow.grids.RegularCartesian.get_cell_Ay", "api/reservoirflow.grids.RegularCartesian.get_cell_Az", "api/reservoirflow.grids.RegularCartesian.get_cell_G", "api/reservoirflow.grids.RegularCartesian.get_cell_V", "api/reservoirflow.grids.RegularCartesian.get_cell_boundaries", "api/reservoirflow.grids.RegularCartesian.get_cell_center", "api/reservoirflow.grids.RegularCartesian.get_cell_coords", "api/reservoirflow.grids.RegularCartesian.get_cell_d", "api/reservoirflow.grids.RegularCartesian.get_cell_dx", "api/reservoirflow.grids.RegularCartesian.get_cell_dy", "api/reservoirflow.grids.RegularCartesian.get_cell_dz", "api/reservoirflow.grids.RegularCartesian.get_cell_icoords", "api/reservoirflow.grids.RegularCartesian.get_cell_id", "api/reservoirflow.grids.RegularCartesian.get_cell_k", "api/reservoirflow.grids.RegularCartesian.get_cell_kx", "api/reservoirflow.grids.RegularCartesian.get_cell_ky", "api/reservoirflow.grids.RegularCartesian.get_cell_kz", "api/reservoirflow.grids.RegularCartesian.get_cell_neighbors", "api/reservoirflow.grids.RegularCartesian.get_cells_A", "api/reservoirflow.grids.RegularCartesian.get_cells_Ax", "api/reservoirflow.grids.RegularCartesian.get_cells_Ay", "api/reservoirflow.grids.RegularCartesian.get_cells_Az", "api/reservoirflow.grids.RegularCartesian.get_cells_G", "api/reservoirflow.grids.RegularCartesian.get_cells_G_diag_1", "api/reservoirflow.grids.RegularCartesian.get_cells_G_diag_2", "api/reservoirflow.grids.RegularCartesian.get_cells_G_diag_3", "api/reservoirflow.grids.RegularCartesian.get_cells_V", "api/reservoirflow.grids.RegularCartesian.get_cells_center", "api/reservoirflow.grids.RegularCartesian.get_cells_coords", "api/reservoirflow.grids.RegularCartesian.get_cells_d", "api/reservoirflow.grids.RegularCartesian.get_cells_dx", "api/reservoirflow.grids.RegularCartesian.get_cells_dy", "api/reservoirflow.grids.RegularCartesian.get_cells_dz", "api/reservoirflow.grids.RegularCartesian.get_cells_i", "api/reservoirflow.grids.RegularCartesian.get_cells_icoords", "api/reservoirflow.grids.RegularCartesian.get_cells_id", "api/reservoirflow.grids.RegularCartesian.get_cells_k", "api/reservoirflow.grids.RegularCartesian.get_corners", "api/reservoirflow.grids.RegularCartesian.get_fdir", "api/reservoirflow.grids.RegularCartesian.get_fshape", "api/reservoirflow.grids.RegularCartesian.get_n", "api/reservoirflow.grids.RegularCartesian.get_n_max", "api/reservoirflow.grids.RegularCartesian.get_ones", "api/reservoirflow.grids.RegularCartesian.get_order", "api/reservoirflow.grids.RegularCartesian.get_prop", "api/reservoirflow.grids.RegularCartesian.get_pyvista_grid", "api/reservoirflow.grids.RegularCartesian.get_shape", "api/reservoirflow.grids.RegularCartesian.get_zeros", "api/reservoirflow.grids.RegularCartesian.is_anisotropic", "api/reservoirflow.grids.RegularCartesian.is_heterogeneous", "api/reservoirflow.grids.RegularCartesian.is_homogeneous", "api/reservoirflow.grids.RegularCartesian.is_irregular", "api/reservoirflow.grids.RegularCartesian.is_isotropic", "api/reservoirflow.grids.RegularCartesian.is_regular", "api/reservoirflow.grids.RegularCartesian.name", "api/reservoirflow.grids.RegularCartesian.remove_boundaries", "api/reservoirflow.grids.RegularCartesian.report", "api/reservoirflow.grids.RegularCartesian.set_cell_value", "api/reservoirflow.grids.RegularCartesian.set_comp", "api/reservoirflow.grids.RegularCartesian.set_prop", "api/reservoirflow.grids.RegularCartesian.set_props", "api/reservoirflow.grids.RegularCartesian.set_units", "api/reservoirflow.grids.RegularCartesian.show", "api/reservoirflow.grids.RegularCartesian.unit", "api/reservoirflow.grids.RegularCartesian.units", "api/reservoirflow.models", "api/reservoirflow.models.BlackOil", "api/reservoirflow.models.BlackOil.allow_synonyms", "api/reservoirflow.models.BlackOil.compile", "api/reservoirflow.models.BlackOil.copy", "api/reservoirflow.models.BlackOil.factors", "api/reservoirflow.models.BlackOil.get_alpha", "api/reservoirflow.models.BlackOil.get_cell_trans", "api/reservoirflow.models.BlackOil.get_cells_trans", "api/reservoirflow.models.BlackOil.get_cells_trans_diag", "api/reservoirflow.models.BlackOil.get_centers", "api/reservoirflow.models.BlackOil.get_df", "api/reservoirflow.models.BlackOil.get_domain", "api/reservoirflow.models.BlackOil.get_init_arrays", "api/reservoirflow.models.BlackOil.get_shape", "api/reservoirflow.models.BlackOil.get_solutions", "api/reservoirflow.models.BlackOil.get_time", "api/reservoirflow.models.BlackOil.name", "api/reservoirflow.models.BlackOil.plot", "api/reservoirflow.models.BlackOil.plot_grid", "api/reservoirflow.models.BlackOil.report", "api/reservoirflow.models.BlackOil.run", "api/reservoirflow.models.BlackOil.save_gif", "api/reservoirflow.models.BlackOil.set_all_boundaries", "api/reservoirflow.models.BlackOil.set_boundaries", "api/reservoirflow.models.BlackOil.set_boundary", "api/reservoirflow.models.BlackOil.set_comp", "api/reservoirflow.models.BlackOil.set_scalers", "api/reservoirflow.models.BlackOil.set_solution", "api/reservoirflow.models.BlackOil.set_units", "api/reservoirflow.models.BlackOil.set_well", "api/reservoirflow.models.BlackOil.show", "api/reservoirflow.models.BlackOil.solve", "api/reservoirflow.models.BlackOil.unit", "api/reservoirflow.models.BlackOil.units", "api/reservoirflow.models.BlackOil.update_scalers", "api/reservoirflow.models.Compositional", "api/reservoirflow.models.Compositional.allow_synonyms", "api/reservoirflow.models.Compositional.compile", "api/reservoirflow.models.Compositional.factors", "api/reservoirflow.models.Compositional.get_solutions", "api/reservoirflow.models.Compositional.name", "api/reservoirflow.models.Compositional.report", "api/reservoirflow.models.Compositional.run", "api/reservoirflow.models.Compositional.set_comp", "api/reservoirflow.models.Compositional.set_solution", "api/reservoirflow.models.Compositional.set_units", "api/reservoirflow.models.Compositional.solve", "api/reservoirflow.models.Compositional.unit", "api/reservoirflow.models.Compositional.units", "api/reservoirflow.models.Model", "api/reservoirflow.models.Model.allow_synonyms", "api/reservoirflow.models.Model.compile", "api/reservoirflow.models.Model.factors", "api/reservoirflow.models.Model.get_solutions", "api/reservoirflow.models.Model.name", "api/reservoirflow.models.Model.report", "api/reservoirflow.models.Model.run", "api/reservoirflow.models.Model.set_comp", "api/reservoirflow.models.Model.set_solution", "api/reservoirflow.models.Model.set_units", "api/reservoirflow.models.Model.solve", "api/reservoirflow.models.Model.unit", "api/reservoirflow.models.Model.units", "api/reservoirflow.models.Thermal", "api/reservoirflow.models.Thermal.allow_synonyms", "api/reservoirflow.models.Thermal.compile", "api/reservoirflow.models.Thermal.factors", "api/reservoirflow.models.Thermal.get_solutions", "api/reservoirflow.models.Thermal.name", "api/reservoirflow.models.Thermal.report", "api/reservoirflow.models.Thermal.run", "api/reservoirflow.models.Thermal.set_comp", "api/reservoirflow.models.Thermal.set_solution", "api/reservoirflow.models.Thermal.set_units", "api/reservoirflow.models.Thermal.solve", "api/reservoirflow.models.Thermal.unit", "api/reservoirflow.models.Thermal.units", "api/reservoirflow.scalers", "api/reservoirflow.scalers.Dummy", "api/reservoirflow.scalers.Dummy.fit", "api/reservoirflow.scalers.Dummy.fit_transform", "api/reservoirflow.scalers.Dummy.inverse_transform", "api/reservoirflow.scalers.Dummy.name", "api/reservoirflow.scalers.Dummy.set_output_range", "api/reservoirflow.scalers.Dummy.transform", "api/reservoirflow.scalers.MinMax", "api/reservoirflow.scalers.MinMax.fit", "api/reservoirflow.scalers.MinMax.fit_transform", "api/reservoirflow.scalers.MinMax.inverse_transform", "api/reservoirflow.scalers.MinMax.name", "api/reservoirflow.scalers.MinMax.set_output_range", "api/reservoirflow.scalers.MinMax.transform", "api/reservoirflow.scalers.Scaler", "api/reservoirflow.scalers.Scaler.fit", "api/reservoirflow.scalers.Scaler.fit_transform", "api/reservoirflow.scalers.Scaler.inverse_transform", "api/reservoirflow.scalers.Scaler.name", "api/reservoirflow.scalers.Scaler.set_output_range", "api/reservoirflow.scalers.Scaler.transform", "api/reservoirflow.solutions", "api/reservoirflow.solutions.Compiler", "api/reservoirflow.solutions.Solution", "api/reservoirflow.solutions.Solution.run", "api/reservoirflow.solutions.Solution.solve", "api/reservoirflow.solutions.analytical", "api/reservoirflow.solutions.analytical.D1P1", "api/reservoirflow.solutions.analytical.D1P1.calc_solution", "api/reservoirflow.solutions.analytical.D1P1.name", "api/reservoirflow.solutions.analytical.D1P1.run", "api/reservoirflow.solutions.analytical.D1P1.solve", "api/reservoirflow.solutions.analytical.D1P2", "api/reservoirflow.solutions.analytical.D1P2.name", "api/reservoirflow.solutions.analytical.D1P2.run", "api/reservoirflow.solutions.analytical.D1P2.solve", "api/reservoirflow.solutions.analytical.D1P3", "api/reservoirflow.solutions.analytical.D1P3.name", "api/reservoirflow.solutions.analytical.D1P3.run", "api/reservoirflow.solutions.analytical.D1P3.solve", "api/reservoirflow.solutions.analytical.D2P1", "api/reservoirflow.solutions.analytical.D2P1.name", "api/reservoirflow.solutions.analytical.D2P1.run", "api/reservoirflow.solutions.analytical.D2P1.solve", "api/reservoirflow.solutions.analytical.D2P2", "api/reservoirflow.solutions.analytical.D2P2.name", "api/reservoirflow.solutions.analytical.D2P2.run", "api/reservoirflow.solutions.analytical.D2P2.solve", "api/reservoirflow.solutions.analytical.D2P3", "api/reservoirflow.solutions.analytical.D2P3.name", "api/reservoirflow.solutions.analytical.D2P3.run", "api/reservoirflow.solutions.analytical.D2P3.solve", "api/reservoirflow.solutions.analytical.D3P1", "api/reservoirflow.solutions.analytical.D3P1.name", "api/reservoirflow.solutions.analytical.D3P1.run", "api/reservoirflow.solutions.analytical.D3P1.solve", "api/reservoirflow.solutions.analytical.D3P2", "api/reservoirflow.solutions.analytical.D3P2.name", "api/reservoirflow.solutions.analytical.D3P2.run", "api/reservoirflow.solutions.analytical.D3P2.solve", "api/reservoirflow.solutions.analytical.D3P3", "api/reservoirflow.solutions.analytical.D3P3.name", "api/reservoirflow.solutions.analytical.D3P3.run", "api/reservoirflow.solutions.analytical.D3P3.solve", "api/reservoirflow.solutions.neurical", "api/reservoirflow.solutions.neurical.DeepONet", "api/reservoirflow.solutions.neurical.DeepONet.name", "api/reservoirflow.solutions.neurical.DeepONet.run", "api/reservoirflow.solutions.neurical.DeepONet.solve", "api/reservoirflow.solutions.neurical.PINN", "api/reservoirflow.solutions.neurical.PINN.fit", "api/reservoirflow.solutions.neurical.PINN.name", "api/reservoirflow.solutions.neurical.PINN.run", "api/reservoirflow.solutions.neurical.PINN.solve", "api/reservoirflow.solutions.numerical", "api/reservoirflow.solutions.numerical.FDM", "api/reservoirflow.solutions.numerical.FDM.check_MB", "api/reservoirflow.solutions.numerical.FDM.get_cell_eq", "api/reservoirflow.solutions.numerical.FDM.get_cells_eq", "api/reservoirflow.solutions.numerical.FDM.get_matrices_symb", "api/reservoirflow.solutions.numerical.FDM.get_matrices_vect", "api/reservoirflow.solutions.numerical.FDM.name", "api/reservoirflow.solutions.numerical.FDM.run", "api/reservoirflow.solutions.numerical.FDM.solve", "api/reservoirflow.solutions.numerical.FEM", "api/reservoirflow.solutions.numerical.FEM.name", "api/reservoirflow.solutions.numerical.FEM.run", "api/reservoirflow.solutions.numerical.FEM.solve", "api/reservoirflow.solutions.numerical.FVM", "api/reservoirflow.solutions.numerical.FVM.name", "api/reservoirflow.solutions.numerical.FVM.run", "api/reservoirflow.solutions.numerical.FVM.solve", "api/reservoirflow.solutions.numerical.solvers", "api/reservoirflow.solutions.numerical.solvers.get_dsolver", "api/reservoirflow.solutions.numerical.solvers.get_isolver", "api/reservoirflow.utils", "api/reservoirflow.utils.helpers", "api/reservoirflow.utils.helpers.fshape_warn", "api/reservoirflow.utils.helpers.get_boundary_str", "api/reservoirflow.utils.helpers.get_fshape_str", "api/reservoirflow.utils.helpers.get_points_str", "api/reservoirflow.utils.helpers.get_verbose_str", "api/reservoirflow.utils.helpers.intersection", "api/reservoirflow.utils.helpers.isin", "api/reservoirflow.utils.helpers.ispoints", "api/reservoirflow.utils.helpers.issametype", "api/reservoirflow.utils.helpers.lru_cache", "api/reservoirflow.utils.helpers.reformat", "api/reservoirflow.utils.helpers.remove_diag", "api/reservoirflow.utils.helpers.shape_error", "api/reservoirflow.utils.profme", "api/reservoirflow.utils.profme.cProfiler", "api/reservoirflow.utils.profme.lProfiler", "api/reservoirflow.utils.profme.profile", "api/reservoirflow.utils.profme.timeit", "api/reservoirflow.utils.pyvista", "api/reservoirflow.utils.pyvista.add_desc", "api/reservoirflow.utils.pyvista.add_grid_labels", "api/reservoirflow.utils.pyvista.add_ruler", "api/reservoirflow.utils.pyvista.add_title", "api/reservoirflow.utils.pyvista.add_wells", "api/reservoirflow.utils.pyvista.align_camera", "api/reservoirflow.utils.pyvista.decide_widget", "api/reservoirflow.utils.pyvista.get_annotations", "api/reservoirflow.utils.pyvista.get_cbar_dict", "api/reservoirflow.utils.pyvista.get_cdir", "api/reservoirflow.utils.pyvista.get_colormap", "api/reservoirflow.utils.pyvista.get_grid_plotter", "api/reservoirflow.utils.pyvista.get_limits_fmt", "api/reservoirflow.utils.pyvista.get_model_plotter", "api/reservoirflow.utils.pyvista.get_model_values", "api/reservoirflow.utils.pyvista.get_text_locs", "api/reservoirflow.utils.pyvista.get_window_size", "api/reservoirflow.utils.pyvista.save_gif", "api/reservoirflow.utils.pyvista.set_background_color", "api/reservoirflow.utils.pyvista.set_mode", "api/reservoirflow.utils.pyvista.set_plotter_backend", "api/reservoirflow.utils.pyvista.set_plotter_config", "api/reservoirflow.utils.pyvista.set_text_color", "api/reservoirflow.utils.pyvista.show_grid", "api/reservoirflow.utils.pyvista.show_model", "api/reservoirflow.wells", "api/reservoirflow.wells.Directional", "api/reservoirflow.wells.Directional.factors", "api/reservoirflow.wells.Directional.name", "api/reservoirflow.wells.Directional.report", "api/reservoirflow.wells.Directional.set_units", "api/reservoirflow.wells.Directional.unit", "api/reservoirflow.wells.Directional.units", "api/reservoirflow.wells.MultiCell", "api/reservoirflow.wells.MultiCell.factors", "api/reservoirflow.wells.MultiCell.name", "api/reservoirflow.wells.MultiCell.report", "api/reservoirflow.wells.MultiCell.set_units", "api/reservoirflow.wells.MultiCell.unit", "api/reservoirflow.wells.MultiCell.units", "api/reservoirflow.wells.SingleCell", "api/reservoirflow.wells.SingleCell.allow_synonyms", "api/reservoirflow.wells.SingleCell.factors", "api/reservoirflow.wells.SingleCell.name", "api/reservoirflow.wells.SingleCell.report", "api/reservoirflow.wells.SingleCell.set_cell_id", "api/reservoirflow.wells.SingleCell.set_constrain", "api/reservoirflow.wells.SingleCell.set_props", "api/reservoirflow.wells.SingleCell.set_q", "api/reservoirflow.wells.SingleCell.set_r", "api/reservoirflow.wells.SingleCell.set_s", "api/reservoirflow.wells.SingleCell.set_units", "api/reservoirflow.wells.SingleCell.unit", "api/reservoirflow.wells.SingleCell.units", "api/reservoirflow.wells.Well", "api/reservoirflow.wells.Well.factors", "api/reservoirflow.wells.Well.name", "api/reservoirflow.wells.Well.report", "api/reservoirflow.wells.Well.set_units", "api/reservoirflow.wells.Well.unit", "api/reservoirflow.wells.Well.units", "capabilities", "community/blog/blog", "community/blog/blog01", "community/blog/external", "community/commenting_guidelines", "community/community", "community/events/event001", "community/events/events", "community/forum/ask_a_question", "community/forum/community_topics/are_you_a_reservoir_engineer", "community/forum/community_topics/community_topics", "community/forum/community_topics/request_a_topic", "community/forum/community_topics/why_do_we_need_reservoirflow", "community/forum/forum", "community/forum/general_discussion", "community/forum/introduce_yourself", "community/forum/make_a_suggestion", "community/news/news", "community/news/newsletter_20250501", "community/topics/are_you_a_reservoir_engineer", "community/topics/request_a_topic", "community/topics/topics", "community/topics/why_do_we_need_reservoirflow", "generate_api", "index", "release_notes/release_note_v0.1.0", "release_notes/release_notes", "research_development/collaboration/collaboration", "research_development/collaboration/companies/ccolab_0001/ccolab_0001", "research_development/collaboration/companies/companies", "research_development/collaboration/individuals/icolab_0001/icolab_0001", "research_development/collaboration/individuals/icolab_0001/pinns_are_neurical_solutions", "research_development/collaboration/individuals/icolab_0001/scaling_differential_equations", "research_development/collaboration/individuals/individuals", "research_development/collaboration/teams/tcolab_0001/tcolab_0001", "research_development/collaboration/teams/teams", "research_development/collaboration/universities/ucolab_0001/ucolab_0001", "research_development/collaboration/universities/universities", "research_development/contribution", "research_development/development/backlog", "research_development/development/development", "research_development/development/sprints/sprint001", "research_development/development/sprints/sprints", "research_development/references/references", "research_development/research_development", "research_development/reservoirflow_paper", "support_us", "user_guide/equations/equations", "user_guide/getting_started/getting_started", "user_guide/glossary/glossary", "user_guide/nomenclature/access_nomenclature", "user_guide/nomenclature/nomenclature", "user_guide/nomenclature/nomenclature_table", "user_guide/tutorials/tutorial_different_solutions_1D1P", "user_guide/tutorials/tutorial_five_spot_single_phase", "user_guide/tutorials/tutorial_learn_scientific_computing", "user_guide/tutorials/tutorial_understand_compiling", "user_guide/tutorials/tutorial_understand_grids_module", "user_guide/tutorials/tutorial_understand_profme", "user_guide/tutorials/tutorial_understand_scalers_module", "user_guide/tutorials/tutorials", "user_guide/units_factors/access_units_factors", "user_guide/units_factors/factors_table", "user_guide/units_factors/units_factors", "user_guide/units_factors/units_table", "user_guide/user_guide"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["about_us.rst", "api/API.rst", "api/reservoirflow.backends.rst", "api/reservoirflow.backends.Backend.rst", "api/reservoirflow.backends.Backend.ones.rst", "api/reservoirflow.backends.Backend.transpose.rst", "api/reservoirflow.backends.JAX.rst", "api/reservoirflow.backends.JAX.name.rst", "api/reservoirflow.backends.JAX.ones.rst", "api/reservoirflow.backends.JAX.transpose.rst", "api/reservoirflow.backends.NumPy.rst", "api/reservoirflow.backends.NumPy.name.rst", "api/reservoirflow.backends.NumPy.ones.rst", "api/reservoirflow.backends.NumPy.transpose.rst", "api/reservoirflow.backends.PyTorch.rst", "api/reservoirflow.backends.PyTorch.name.rst", "api/reservoirflow.backends.PyTorch.ones.rst", "api/reservoirflow.backends.PyTorch.transpose.rst", "api/reservoirflow.backends.TensorFlow.rst", "api/reservoirflow.backends.TensorFlow.name.rst", "api/reservoirflow.backends.TensorFlow.ones.rst", "api/reservoirflow.backends.TensorFlow.transpose.rst", "api/reservoirflow.fluids.rst", "api/reservoirflow.fluids.Fluid.rst", "api/reservoirflow.fluids.Fluid.allow_synonyms.rst", "api/reservoirflow.fluids.Fluid.factors.rst", "api/reservoirflow.fluids.Fluid.name.rst", "api/reservoirflow.fluids.Fluid.report.rst", "api/reservoirflow.fluids.Fluid.set_comp.rst", "api/reservoirflow.fluids.Fluid.set_units.rst", "api/reservoirflow.fluids.Fluid.unit.rst", "api/reservoirflow.fluids.Fluid.units.rst", "api/reservoirflow.fluids.MultiPhase.rst", "api/reservoirflow.fluids.MultiPhase.allow_synonyms.rst", "api/reservoirflow.fluids.MultiPhase.factors.rst", "api/reservoirflow.fluids.MultiPhase.name.rst", "api/reservoirflow.fluids.MultiPhase.report.rst", "api/reservoirflow.fluids.MultiPhase.set_comp.rst", "api/reservoirflow.fluids.MultiPhase.set_units.rst", "api/reservoirflow.fluids.MultiPhase.unit.rst", "api/reservoirflow.fluids.MultiPhase.units.rst", "api/reservoirflow.fluids.SinglePhase.rst", "api/reservoirflow.fluids.SinglePhase.allow_synonyms.rst", "api/reservoirflow.fluids.SinglePhase.factors.rst", "api/reservoirflow.fluids.SinglePhase.name.rst", "api/reservoirflow.fluids.SinglePhase.report.rst", "api/reservoirflow.fluids.SinglePhase.set_B.rst", "api/reservoirflow.fluids.SinglePhase.set_comp.rst", "api/reservoirflow.fluids.SinglePhase.set_mu.rst", "api/reservoirflow.fluids.SinglePhase.set_props.rst", "api/reservoirflow.fluids.SinglePhase.set_rho.rst", "api/reservoirflow.fluids.SinglePhase.set_units.rst", "api/reservoirflow.fluids.SinglePhase.unit.rst", "api/reservoirflow.fluids.SinglePhase.units.rst", "api/reservoirflow.fluids.ThreePhase.rst", "api/reservoirflow.fluids.ThreePhase.allow_synonyms.rst", "api/reservoirflow.fluids.ThreePhase.factors.rst", "api/reservoirflow.fluids.ThreePhase.name.rst", "api/reservoirflow.fluids.ThreePhase.report.rst", "api/reservoirflow.fluids.ThreePhase.set_comp.rst", "api/reservoirflow.fluids.ThreePhase.set_units.rst", "api/reservoirflow.fluids.ThreePhase.unit.rst", "api/reservoirflow.fluids.ThreePhase.units.rst", "api/reservoirflow.fluids.TwoPhase.rst", "api/reservoirflow.fluids.TwoPhase.allow_synonyms.rst", "api/reservoirflow.fluids.TwoPhase.factors.rst", "api/reservoirflow.fluids.TwoPhase.name.rst", "api/reservoirflow.fluids.TwoPhase.report.rst", "api/reservoirflow.fluids.TwoPhase.set_comp.rst", "api/reservoirflow.fluids.TwoPhase.set_units.rst", "api/reservoirflow.fluids.TwoPhase.unit.rst", "api/reservoirflow.fluids.TwoPhase.units.rst", "api/reservoirflow.grids.rst", "api/reservoirflow.grids.Grid.rst", "api/reservoirflow.grids.Grid.allow_synonyms.rst", "api/reservoirflow.grids.Grid.factors.rst", "api/reservoirflow.grids.Grid.name.rst", "api/reservoirflow.grids.Grid.report.rst", "api/reservoirflow.grids.Grid.set_comp.rst", "api/reservoirflow.grids.Grid.set_units.rst", "api/reservoirflow.grids.Grid.unit.rst", "api/reservoirflow.grids.Grid.units.rst", "api/reservoirflow.grids.IrregularCartesian.rst", "api/reservoirflow.grids.IrregularCartesian.allow_synonyms.rst", "api/reservoirflow.grids.IrregularCartesian.factors.rst", "api/reservoirflow.grids.IrregularCartesian.name.rst", "api/reservoirflow.grids.IrregularCartesian.report.rst", "api/reservoirflow.grids.IrregularCartesian.set_comp.rst", "api/reservoirflow.grids.IrregularCartesian.set_units.rst", "api/reservoirflow.grids.IrregularCartesian.unit.rst", "api/reservoirflow.grids.IrregularCartesian.units.rst", "api/reservoirflow.grids.Radial.rst", "api/reservoirflow.grids.Radial.allow_synonyms.rst", "api/reservoirflow.grids.Radial.factors.rst", "api/reservoirflow.grids.Radial.name.rst", "api/reservoirflow.grids.Radial.report.rst", "api/reservoirflow.grids.Radial.set_comp.rst", "api/reservoirflow.grids.Radial.set_units.rst", "api/reservoirflow.grids.Radial.unit.rst", "api/reservoirflow.grids.Radial.units.rst", "api/reservoirflow.grids.RegularCartesian.rst", "api/reservoirflow.grids.RegularCartesian.allow_synonyms.rst", "api/reservoirflow.grids.RegularCartesian.extract_boundaries.rst", "api/reservoirflow.grids.RegularCartesian.factors.rst", "api/reservoirflow.grids.RegularCartesian.get_D.rst", "api/reservoirflow.grids.RegularCartesian.get_Vt.rst", "api/reservoirflow.grids.RegularCartesian.get_boundaries.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_A.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_Ax.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_Ay.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_Az.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_G.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_V.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_boundaries.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_center.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_coords.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_d.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_dx.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_dy.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_dz.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_icoords.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_id.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_k.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_kx.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_ky.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_kz.rst", "api/reservoirflow.grids.RegularCartesian.get_cell_neighbors.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_A.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_Ax.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_Ay.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_Az.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_G.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_G_diag_1.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_G_diag_2.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_G_diag_3.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_V.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_center.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_coords.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_d.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_dx.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_dy.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_dz.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_i.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_icoords.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_id.rst", "api/reservoirflow.grids.RegularCartesian.get_cells_k.rst", "api/reservoirflow.grids.RegularCartesian.get_corners.rst", "api/reservoirflow.grids.RegularCartesian.get_fdir.rst", "api/reservoirflow.grids.RegularCartesian.get_fshape.rst", "api/reservoirflow.grids.RegularCartesian.get_n.rst", "api/reservoirflow.grids.RegularCartesian.get_n_max.rst", "api/reservoirflow.grids.RegularCartesian.get_ones.rst", "api/reservoirflow.grids.RegularCartesian.get_order.rst", "api/reservoirflow.grids.RegularCartesian.get_prop.rst", "api/reservoirflow.grids.RegularCartesian.get_pyvista_grid.rst", "api/reservoirflow.grids.RegularCartesian.get_shape.rst", "api/reservoirflow.grids.RegularCartesian.get_zeros.rst", "api/reservoirflow.grids.RegularCartesian.is_anisotropic.rst", "api/reservoirflow.grids.RegularCartesian.is_heterogeneous.rst", "api/reservoirflow.grids.RegularCartesian.is_homogeneous.rst", "api/reservoirflow.grids.RegularCartesian.is_irregular.rst", "api/reservoirflow.grids.RegularCartesian.is_isotropic.rst", "api/reservoirflow.grids.RegularCartesian.is_regular.rst", "api/reservoirflow.grids.RegularCartesian.name.rst", "api/reservoirflow.grids.RegularCartesian.remove_boundaries.rst", "api/reservoirflow.grids.RegularCartesian.report.rst", "api/reservoirflow.grids.RegularCartesian.set_cell_value.rst", "api/reservoirflow.grids.RegularCartesian.set_comp.rst", "api/reservoirflow.grids.RegularCartesian.set_prop.rst", "api/reservoirflow.grids.RegularCartesian.set_props.rst", "api/reservoirflow.grids.RegularCartesian.set_units.rst", "api/reservoirflow.grids.RegularCartesian.show.rst", "api/reservoirflow.grids.RegularCartesian.unit.rst", "api/reservoirflow.grids.RegularCartesian.units.rst", "api/reservoirflow.models.rst", "api/reservoirflow.models.BlackOil.rst", "api/reservoirflow.models.BlackOil.allow_synonyms.rst", "api/reservoirflow.models.BlackOil.compile.rst", "api/reservoirflow.models.BlackOil.copy.rst", "api/reservoirflow.models.BlackOil.factors.rst", "api/reservoirflow.models.BlackOil.get_alpha.rst", "api/reservoirflow.models.BlackOil.get_cell_trans.rst", "api/reservoirflow.models.BlackOil.get_cells_trans.rst", "api/reservoirflow.models.BlackOil.get_cells_trans_diag.rst", "api/reservoirflow.models.BlackOil.get_centers.rst", "api/reservoirflow.models.BlackOil.get_df.rst", "api/reservoirflow.models.BlackOil.get_domain.rst", "api/reservoirflow.models.BlackOil.get_init_arrays.rst", "api/reservoirflow.models.BlackOil.get_shape.rst", "api/reservoirflow.models.BlackOil.get_solutions.rst", "api/reservoirflow.models.BlackOil.get_time.rst", "api/reservoirflow.models.BlackOil.name.rst", "api/reservoirflow.models.BlackOil.plot.rst", "api/reservoirflow.models.BlackOil.plot_grid.rst", "api/reservoirflow.models.BlackOil.report.rst", "api/reservoirflow.models.BlackOil.run.rst", "api/reservoirflow.models.BlackOil.save_gif.rst", "api/reservoirflow.models.BlackOil.set_all_boundaries.rst", "api/reservoirflow.models.BlackOil.set_boundaries.rst", "api/reservoirflow.models.BlackOil.set_boundary.rst", "api/reservoirflow.models.BlackOil.set_comp.rst", "api/reservoirflow.models.BlackOil.set_scalers.rst", "api/reservoirflow.models.BlackOil.set_solution.rst", "api/reservoirflow.models.BlackOil.set_units.rst", "api/reservoirflow.models.BlackOil.set_well.rst", "api/reservoirflow.models.BlackOil.show.rst", "api/reservoirflow.models.BlackOil.solve.rst", "api/reservoirflow.models.BlackOil.unit.rst", "api/reservoirflow.models.BlackOil.units.rst", "api/reservoirflow.models.BlackOil.update_scalers.rst", "api/reservoirflow.models.Compositional.rst", "api/reservoirflow.models.Compositional.allow_synonyms.rst", "api/reservoirflow.models.Compositional.compile.rst", "api/reservoirflow.models.Compositional.factors.rst", "api/reservoirflow.models.Compositional.get_solutions.rst", "api/reservoirflow.models.Compositional.name.rst", "api/reservoirflow.models.Compositional.report.rst", "api/reservoirflow.models.Compositional.run.rst", "api/reservoirflow.models.Compositional.set_comp.rst", "api/reservoirflow.models.Compositional.set_solution.rst", "api/reservoirflow.models.Compositional.set_units.rst", "api/reservoirflow.models.Compositional.solve.rst", "api/reservoirflow.models.Compositional.unit.rst", "api/reservoirflow.models.Compositional.units.rst", "api/reservoirflow.models.Model.rst", "api/reservoirflow.models.Model.allow_synonyms.rst", "api/reservoirflow.models.Model.compile.rst", "api/reservoirflow.models.Model.factors.rst", "api/reservoirflow.models.Model.get_solutions.rst", "api/reservoirflow.models.Model.name.rst", "api/reservoirflow.models.Model.report.rst", "api/reservoirflow.models.Model.run.rst", "api/reservoirflow.models.Model.set_comp.rst", "api/reservoirflow.models.Model.set_solution.rst", "api/reservoirflow.models.Model.set_units.rst", "api/reservoirflow.models.Model.solve.rst", "api/reservoirflow.models.Model.unit.rst", "api/reservoirflow.models.Model.units.rst", "api/reservoirflow.models.Thermal.rst", "api/reservoirflow.models.Thermal.allow_synonyms.rst", "api/reservoirflow.models.Thermal.compile.rst", "api/reservoirflow.models.Thermal.factors.rst", "api/reservoirflow.models.Thermal.get_solutions.rst", "api/reservoirflow.models.Thermal.name.rst", "api/reservoirflow.models.Thermal.report.rst", "api/reservoirflow.models.Thermal.run.rst", "api/reservoirflow.models.Thermal.set_comp.rst", "api/reservoirflow.models.Thermal.set_solution.rst", "api/reservoirflow.models.Thermal.set_units.rst", "api/reservoirflow.models.Thermal.solve.rst", "api/reservoirflow.models.Thermal.unit.rst", "api/reservoirflow.models.Thermal.units.rst", "api/reservoirflow.scalers.rst", "api/reservoirflow.scalers.Dummy.rst", "api/reservoirflow.scalers.Dummy.fit.rst", "api/reservoirflow.scalers.Dummy.fit_transform.rst", "api/reservoirflow.scalers.Dummy.inverse_transform.rst", "api/reservoirflow.scalers.Dummy.name.rst", "api/reservoirflow.scalers.Dummy.set_output_range.rst", "api/reservoirflow.scalers.Dummy.transform.rst", "api/reservoirflow.scalers.MinMax.rst", "api/reservoirflow.scalers.MinMax.fit.rst", "api/reservoirflow.scalers.MinMax.fit_transform.rst", "api/reservoirflow.scalers.MinMax.inverse_transform.rst", "api/reservoirflow.scalers.MinMax.name.rst", "api/reservoirflow.scalers.MinMax.set_output_range.rst", "api/reservoirflow.scalers.MinMax.transform.rst", "api/reservoirflow.scalers.Scaler.rst", "api/reservoirflow.scalers.Scaler.fit.rst", "api/reservoirflow.scalers.Scaler.fit_transform.rst", "api/reservoirflow.scalers.Scaler.inverse_transform.rst", "api/reservoirflow.scalers.Scaler.name.rst", "api/reservoirflow.scalers.Scaler.set_output_range.rst", "api/reservoirflow.scalers.Scaler.transform.rst", "api/reservoirflow.solutions.rst", "api/reservoirflow.solutions.Compiler.rst", "api/reservoirflow.solutions.Solution.rst", "api/reservoirflow.solutions.Solution.run.rst", "api/reservoirflow.solutions.Solution.solve.rst", "api/reservoirflow.solutions.analytical.rst", "api/reservoirflow.solutions.analytical.D1P1.rst", "api/reservoirflow.solutions.analytical.D1P1.calc_solution.rst", "api/reservoirflow.solutions.analytical.D1P1.name.rst", "api/reservoirflow.solutions.analytical.D1P1.run.rst", "api/reservoirflow.solutions.analytical.D1P1.solve.rst", "api/reservoirflow.solutions.analytical.D1P2.rst", "api/reservoirflow.solutions.analytical.D1P2.name.rst", "api/reservoirflow.solutions.analytical.D1P2.run.rst", "api/reservoirflow.solutions.analytical.D1P2.solve.rst", "api/reservoirflow.solutions.analytical.D1P3.rst", "api/reservoirflow.solutions.analytical.D1P3.name.rst", "api/reservoirflow.solutions.analytical.D1P3.run.rst", "api/reservoirflow.solutions.analytical.D1P3.solve.rst", "api/reservoirflow.solutions.analytical.D2P1.rst", "api/reservoirflow.solutions.analytical.D2P1.name.rst", "api/reservoirflow.solutions.analytical.D2P1.run.rst", "api/reservoirflow.solutions.analytical.D2P1.solve.rst", "api/reservoirflow.solutions.analytical.D2P2.rst", "api/reservoirflow.solutions.analytical.D2P2.name.rst", "api/reservoirflow.solutions.analytical.D2P2.run.rst", "api/reservoirflow.solutions.analytical.D2P2.solve.rst", "api/reservoirflow.solutions.analytical.D2P3.rst", "api/reservoirflow.solutions.analytical.D2P3.name.rst", "api/reservoirflow.solutions.analytical.D2P3.run.rst", "api/reservoirflow.solutions.analytical.D2P3.solve.rst", "api/reservoirflow.solutions.analytical.D3P1.rst", "api/reservoirflow.solutions.analytical.D3P1.name.rst", "api/reservoirflow.solutions.analytical.D3P1.run.rst", "api/reservoirflow.solutions.analytical.D3P1.solve.rst", "api/reservoirflow.solutions.analytical.D3P2.rst", "api/reservoirflow.solutions.analytical.D3P2.name.rst", "api/reservoirflow.solutions.analytical.D3P2.run.rst", "api/reservoirflow.solutions.analytical.D3P2.solve.rst", "api/reservoirflow.solutions.analytical.D3P3.rst", "api/reservoirflow.solutions.analytical.D3P3.name.rst", "api/reservoirflow.solutions.analytical.D3P3.run.rst", "api/reservoirflow.solutions.analytical.D3P3.solve.rst", "api/reservoirflow.solutions.neurical.rst", "api/reservoirflow.solutions.neurical.DeepONet.rst", "api/reservoirflow.solutions.neurical.DeepONet.name.rst", "api/reservoirflow.solutions.neurical.DeepONet.run.rst", "api/reservoirflow.solutions.neurical.DeepONet.solve.rst", "api/reservoirflow.solutions.neurical.PINN.rst", "api/reservoirflow.solutions.neurical.PINN.fit.rst", "api/reservoirflow.solutions.neurical.PINN.name.rst", "api/reservoirflow.solutions.neurical.PINN.run.rst", "api/reservoirflow.solutions.neurical.PINN.solve.rst", "api/reservoirflow.solutions.numerical.rst", "api/reservoirflow.solutions.numerical.FDM.rst", "api/reservoirflow.solutions.numerical.FDM.check_MB.rst", "api/reservoirflow.solutions.numerical.FDM.get_cell_eq.rst", "api/reservoirflow.solutions.numerical.FDM.get_cells_eq.rst", "api/reservoirflow.solutions.numerical.FDM.get_matrices_symb.rst", "api/reservoirflow.solutions.numerical.FDM.get_matrices_vect.rst", "api/reservoirflow.solutions.numerical.FDM.name.rst", "api/reservoirflow.solutions.numerical.FDM.run.rst", "api/reservoirflow.solutions.numerical.FDM.solve.rst", "api/reservoirflow.solutions.numerical.FEM.rst", "api/reservoirflow.solutions.numerical.FEM.name.rst", "api/reservoirflow.solutions.numerical.FEM.run.rst", "api/reservoirflow.solutions.numerical.FEM.solve.rst", "api/reservoirflow.solutions.numerical.FVM.rst", "api/reservoirflow.solutions.numerical.FVM.name.rst", "api/reservoirflow.solutions.numerical.FVM.run.rst", "api/reservoirflow.solutions.numerical.FVM.solve.rst", "api/reservoirflow.solutions.numerical.solvers.rst", "api/reservoirflow.solutions.numerical.solvers.get_dsolver.rst", "api/reservoirflow.solutions.numerical.solvers.get_isolver.rst", "api/reservoirflow.utils.rst", "api/reservoirflow.utils.helpers.rst", "api/reservoirflow.utils.helpers.fshape_warn.rst", "api/reservoirflow.utils.helpers.get_boundary_str.rst", "api/reservoirflow.utils.helpers.get_fshape_str.rst", "api/reservoirflow.utils.helpers.get_points_str.rst", "api/reservoirflow.utils.helpers.get_verbose_str.rst", "api/reservoirflow.utils.helpers.intersection.rst", "api/reservoirflow.utils.helpers.isin.rst", "api/reservoirflow.utils.helpers.ispoints.rst", "api/reservoirflow.utils.helpers.issametype.rst", "api/reservoirflow.utils.helpers.lru_cache.rst", "api/reservoirflow.utils.helpers.reformat.rst", "api/reservoirflow.utils.helpers.remove_diag.rst", "api/reservoirflow.utils.helpers.shape_error.rst", "api/reservoirflow.utils.profme.rst", "api/reservoirflow.utils.profme.cProfiler.rst", "api/reservoirflow.utils.profme.lProfiler.rst", "api/reservoirflow.utils.profme.profile.rst", "api/reservoirflow.utils.profme.timeit.rst", "api/reservoirflow.utils.pyvista.rst", "api/reservoirflow.utils.pyvista.add_desc.rst", "api/reservoirflow.utils.pyvista.add_grid_labels.rst", "api/reservoirflow.utils.pyvista.add_ruler.rst", "api/reservoirflow.utils.pyvista.add_title.rst", "api/reservoirflow.utils.pyvista.add_wells.rst", "api/reservoirflow.utils.pyvista.align_camera.rst", "api/reservoirflow.utils.pyvista.decide_widget.rst", "api/reservoirflow.utils.pyvista.get_annotations.rst", "api/reservoirflow.utils.pyvista.get_cbar_dict.rst", "api/reservoirflow.utils.pyvista.get_cdir.rst", "api/reservoirflow.utils.pyvista.get_colormap.rst", "api/reservoirflow.utils.pyvista.get_grid_plotter.rst", "api/reservoirflow.utils.pyvista.get_limits_fmt.rst", "api/reservoirflow.utils.pyvista.get_model_plotter.rst", "api/reservoirflow.utils.pyvista.get_model_values.rst", "api/reservoirflow.utils.pyvista.get_text_locs.rst", "api/reservoirflow.utils.pyvista.get_window_size.rst", "api/reservoirflow.utils.pyvista.save_gif.rst", "api/reservoirflow.utils.pyvista.set_background_color.rst", "api/reservoirflow.utils.pyvista.set_mode.rst", "api/reservoirflow.utils.pyvista.set_plotter_backend.rst", "api/reservoirflow.utils.pyvista.set_plotter_config.rst", "api/reservoirflow.utils.pyvista.set_text_color.rst", "api/reservoirflow.utils.pyvista.show_grid.rst", "api/reservoirflow.utils.pyvista.show_model.rst", "api/reservoirflow.wells.rst", "api/reservoirflow.wells.Directional.rst", "api/reservoirflow.wells.Directional.factors.rst", "api/reservoirflow.wells.Directional.name.rst", "api/reservoirflow.wells.Directional.report.rst", "api/reservoirflow.wells.Directional.set_units.rst", "api/reservoirflow.wells.Directional.unit.rst", "api/reservoirflow.wells.Directional.units.rst", "api/reservoirflow.wells.MultiCell.rst", "api/reservoirflow.wells.MultiCell.factors.rst", "api/reservoirflow.wells.MultiCell.name.rst", "api/reservoirflow.wells.MultiCell.report.rst", "api/reservoirflow.wells.MultiCell.set_units.rst", "api/reservoirflow.wells.MultiCell.unit.rst", "api/reservoirflow.wells.MultiCell.units.rst", "api/reservoirflow.wells.SingleCell.rst", "api/reservoirflow.wells.SingleCell.allow_synonyms.rst", "api/reservoirflow.wells.SingleCell.factors.rst", "api/reservoirflow.wells.SingleCell.name.rst", "api/reservoirflow.wells.SingleCell.report.rst", "api/reservoirflow.wells.SingleCell.set_cell_id.rst", "api/reservoirflow.wells.SingleCell.set_constrain.rst", "api/reservoirflow.wells.SingleCell.set_props.rst", "api/reservoirflow.wells.SingleCell.set_q.rst", "api/reservoirflow.wells.SingleCell.set_r.rst", "api/reservoirflow.wells.SingleCell.set_s.rst", "api/reservoirflow.wells.SingleCell.set_units.rst", "api/reservoirflow.wells.SingleCell.unit.rst", "api/reservoirflow.wells.SingleCell.units.rst", "api/reservoirflow.wells.Well.rst", "api/reservoirflow.wells.Well.factors.rst", "api/reservoirflow.wells.Well.name.rst", "api/reservoirflow.wells.Well.report.rst", "api/reservoirflow.wells.Well.set_units.rst", "api/reservoirflow.wells.Well.unit.rst", "api/reservoirflow.wells.Well.units.rst", "capabilities.md", "community/blog/blog.rst", "community/blog/blog01.rst", "community/blog/external.rst", "community/commenting_guidelines.rst", "community/community.rst", "community/events/event001.rst", "community/events/events.rst", "community/forum/ask_a_question.rst", "community/forum/community_topics/are_you_a_reservoir_engineer.rst", "community/forum/community_topics/community_topics.rst", "community/forum/community_topics/request_a_topic.rst", "community/forum/community_topics/why_do_we_need_reservoirflow.rst", "community/forum/forum.rst", "community/forum/general_discussion.rst", "community/forum/introduce_yourself.rst", "community/forum/make_a_suggestion.rst", "community/news/news.rst", "community/news/newsletter_20250501.rst", "community/topics/are_you_a_reservoir_engineer.rst", "community/topics/request_a_topic.rst", "community/topics/topics.rst", "community/topics/why_do_we_need_reservoirflow.rst", "generate_api.rst", "index.rst", "release_notes/release_note_v0.1.0.md", "release_notes/release_notes.rst", "research_development/collaboration/collaboration.rst", "research_development/collaboration/companies/ccolab_0001/ccolab_0001.rst", "research_development/collaboration/companies/companies.rst", "research_development/collaboration/individuals/icolab_0001/icolab_0001.rst", "research_development/collaboration/individuals/icolab_0001/pinns_are_neurical_solutions.rst", "research_development/collaboration/individuals/icolab_0001/scaling_differential_equations.ipynb", "research_development/collaboration/individuals/individuals.rst", "research_development/collaboration/teams/tcolab_0001/tcolab_0001.rst", "research_development/collaboration/teams/teams.rst", "research_development/collaboration/universities/ucolab_0001/ucolab_0001.rst", "research_development/collaboration/universities/universities.rst", "research_development/contribution.md", "research_development/development/backlog.rst", "research_development/development/development.rst", "research_development/development/sprints/sprint001.rst", "research_development/development/sprints/sprints.rst", "research_development/references/references.rst", "research_development/research_development.rst", "research_development/reservoirflow_paper.rst", "support_us.md", "user_guide/equations/equations.rst", "user_guide/getting_started/getting_started.md", "user_guide/glossary/glossary.rst", "user_guide/nomenclature/access_nomenclature.ipynb", "user_guide/nomenclature/nomenclature.rst", "user_guide/nomenclature/nomenclature_table.rst", "user_guide/tutorials/tutorial_different_solutions_1D1P.ipynb", "user_guide/tutorials/tutorial_five_spot_single_phase.ipynb", "user_guide/tutorials/tutorial_learn_scientific_computing.ipynb", "user_guide/tutorials/tutorial_understand_compiling.ipynb", "user_guide/tutorials/tutorial_understand_grids_module.ipynb", "user_guide/tutorials/tutorial_understand_profme.ipynb", "user_guide/tutorials/tutorial_understand_scalers_module.ipynb", "user_guide/tutorials/tutorials.rst", "user_guide/units_factors/access_units_factors.ipynb", "user_guide/units_factors/factors_table.rst", "user_guide/units_factors/units_factors.rst", "user_guide/units_factors/units_table.rst", "user_guide/user_guide.rst"], "indexentries": {"abc": [[479, "term-ABC", true]], "add_desc() (in module reservoirflow.utils.pyvista)": [[369, "reservoirflow.utils.pyvista.add_desc", false]], "add_grid_labels() (in module reservoirflow.utils.pyvista)": [[370, "reservoirflow.utils.pyvista.add_grid_labels", false]], "add_ruler() (in module reservoirflow.utils.pyvista)": [[371, "reservoirflow.utils.pyvista.add_ruler", false]], "add_title() (in module reservoirflow.utils.pyvista)": [[372, "reservoirflow.utils.pyvista.add_title", false]], "add_wells() (in module reservoirflow.utils.pyvista)": [[373, "reservoirflow.utils.pyvista.add_wells", false]], "align_camera() (in module reservoirflow.utils.pyvista)": [[374, "reservoirflow.utils.pyvista.align_camera", false]], "allow_synonyms() (reservoirflow.fluids.fluid method)": [[24, "reservoirflow.fluids.Fluid.allow_synonyms", false]], "allow_synonyms() (reservoirflow.fluids.multiphase method)": [[33, "reservoirflow.fluids.MultiPhase.allow_synonyms", false]], "allow_synonyms() (reservoirflow.fluids.singlephase method)": [[42, "reservoirflow.fluids.SinglePhase.allow_synonyms", false]], "allow_synonyms() (reservoirflow.fluids.threephase method)": [[55, "reservoirflow.fluids.ThreePhase.allow_synonyms", false]], "allow_synonyms() (reservoirflow.fluids.twophase method)": [[64, "reservoirflow.fluids.TwoPhase.allow_synonyms", false]], "allow_synonyms() (reservoirflow.grids.grid method)": [[74, "reservoirflow.grids.Grid.allow_synonyms", false]], "allow_synonyms() (reservoirflow.grids.irregularcartesian method)": [[83, "reservoirflow.grids.IrregularCartesian.allow_synonyms", false]], "allow_synonyms() (reservoirflow.grids.radial method)": [[92, "reservoirflow.grids.Radial.allow_synonyms", false]], "allow_synonyms() (reservoirflow.grids.regularcartesian method)": [[101, "reservoirflow.grids.RegularCartesian.allow_synonyms", false]], "allow_synonyms() (reservoirflow.models.blackoil method)": [[176, "reservoirflow.models.BlackOil.allow_synonyms", false]], "allow_synonyms() (reservoirflow.models.compositional method)": [[211, "reservoirflow.models.Compositional.allow_synonyms", false]], "allow_synonyms() (reservoirflow.models.model method)": [[225, "reservoirflow.models.Model.allow_synonyms", false]], "allow_synonyms() (reservoirflow.models.thermal method)": [[239, "reservoirflow.models.Thermal.allow_synonyms", false]], "allow_synonyms() (reservoirflow.wells.singlecell method)": [[410, "reservoirflow.wells.SingleCell.allow_synonyms", false]], "angle": [[479, "term-angle", true]], "backend (class in reservoirflow.backends)": [[3, "reservoirflow.backends.Backend", false]], "blackoil (class in reservoirflow.models)": [[175, "reservoirflow.models.BlackOil", false]], "calc_solution() (reservoirflow.solutions.analytical.d1p1 method)": [[281, "reservoirflow.solutions.analytical.D1P1.calc_solution", false]], "check_mb() (reservoirflow.solutions.numerical.fdm method)": [[329, "reservoirflow.solutions.numerical.FDM.check_MB", false]], "compile() (reservoirflow.models.blackoil method)": [[177, "reservoirflow.models.BlackOil.compile", false]], "compile() (reservoirflow.models.compositional method)": [[212, "reservoirflow.models.Compositional.compile", false]], "compile() (reservoirflow.models.model method)": [[226, "reservoirflow.models.Model.compile", false]], "compile() (reservoirflow.models.thermal method)": [[240, "reservoirflow.models.Thermal.compile", false]], "compiler (class in reservoirflow.solutions)": [[275, "reservoirflow.solutions.Compiler", false]], "compositional (class in reservoirflow.models)": [[210, "reservoirflow.models.Compositional", false]], "compressibility": [[479, "term-compressibility", true]], "compressibility factor": [[479, "term-compressibility-factor", true]], "copy() (reservoirflow.models.blackoil method)": [[178, "reservoirflow.models.BlackOil.copy", false]], "cprofiler() (in module reservoirflow.utils.profme)": [[364, "reservoirflow.utils.profme.cProfiler", false]], "d1p1 (class in reservoirflow.solutions.analytical)": [[280, "reservoirflow.solutions.analytical.D1P1", false]], "d1p2 (class in reservoirflow.solutions.analytical)": [[285, "reservoirflow.solutions.analytical.D1P2", false]], "d1p3 (class in reservoirflow.solutions.analytical)": [[289, "reservoirflow.solutions.analytical.D1P3", false]], "d2p1 (class in reservoirflow.solutions.analytical)": [[293, "reservoirflow.solutions.analytical.D2P1", false]], "d2p2 (class in reservoirflow.solutions.analytical)": [[297, "reservoirflow.solutions.analytical.D2P2", false]], "d2p3 (class in reservoirflow.solutions.analytical)": [[301, "reservoirflow.solutions.analytical.D2P3", false]], "d3p1 (class in reservoirflow.solutions.analytical)": [[305, "reservoirflow.solutions.analytical.D3P1", false]], "d3p2 (class in reservoirflow.solutions.analytical)": [[309, "reservoirflow.solutions.analytical.D3P2", false]], "d3p3 (class in reservoirflow.solutions.analytical)": [[313, "reservoirflow.solutions.analytical.D3P3", false]], "decide_widget() (in module reservoirflow.utils.pyvista)": [[375, "reservoirflow.utils.pyvista.decide_widget", false]], "deeponet (class in reservoirflow.solutions.neurical)": [[318, "reservoirflow.solutions.neurical.DeepONet", false]], "density": [[479, "term-density", true]], "directional (class in reservoirflow.wells)": [[395, "reservoirflow.wells.Directional", false]], "dtype": [[479, "term-dtype", true]], "dummy (class in reservoirflow.scalers)": [[253, "reservoirflow.scalers.Dummy", false]], "error": [[479, "term-error", true]], "extract_boundaries() (reservoirflow.grids.regularcartesian method)": [[102, "reservoirflow.grids.RegularCartesian.extract_boundaries", false]], "factors (reservoirflow.fluids.fluid attribute)": [[25, "reservoirflow.fluids.Fluid.factors", false]], "factors (reservoirflow.fluids.multiphase attribute)": [[34, "reservoirflow.fluids.MultiPhase.factors", false]], "factors (reservoirflow.fluids.singlephase attribute)": [[43, "reservoirflow.fluids.SinglePhase.factors", false]], "factors (reservoirflow.fluids.threephase attribute)": [[56, "reservoirflow.fluids.ThreePhase.factors", false]], "factors (reservoirflow.fluids.twophase attribute)": [[65, "reservoirflow.fluids.TwoPhase.factors", false]], "factors (reservoirflow.grids.grid attribute)": [[75, "reservoirflow.grids.Grid.factors", false]], "factors (reservoirflow.grids.irregularcartesian attribute)": [[84, "reservoirflow.grids.IrregularCartesian.factors", false]], "factors (reservoirflow.grids.radial attribute)": [[93, "reservoirflow.grids.Radial.factors", false]], "factors (reservoirflow.grids.regularcartesian attribute)": [[103, "reservoirflow.grids.RegularCartesian.factors", false]], "factors (reservoirflow.models.blackoil attribute)": [[179, "reservoirflow.models.BlackOil.factors", false]], "factors (reservoirflow.models.compositional attribute)": [[213, "reservoirflow.models.Compositional.factors", false]], "factors (reservoirflow.models.model attribute)": [[227, "reservoirflow.models.Model.factors", false]], "factors (reservoirflow.models.thermal attribute)": [[241, "reservoirflow.models.Thermal.factors", false]], "factors (reservoirflow.wells.directional attribute)": [[396, "reservoirflow.wells.Directional.factors", false]], "factors (reservoirflow.wells.multicell attribute)": [[403, "reservoirflow.wells.MultiCell.factors", false]], "factors (reservoirflow.wells.singlecell attribute)": [[411, "reservoirflow.wells.SingleCell.factors", false]], "factors (reservoirflow.wells.well attribute)": [[424, "reservoirflow.wells.Well.factors", false]], "fdm": [[479, "term-FDM", true]], "fdm (class in reservoirflow.solutions.numerical)": [[328, "reservoirflow.solutions.numerical.FDM", false]], "fem": [[479, "term-FEM", true]], "fem (class in reservoirflow.solutions.numerical)": [[337, "reservoirflow.solutions.numerical.FEM", false]], "fit() (reservoirflow.scalers.dummy method)": [[254, "reservoirflow.scalers.Dummy.fit", false]], "fit() (reservoirflow.scalers.minmax method)": [[261, "reservoirflow.scalers.MinMax.fit", false]], "fit() (reservoirflow.scalers.scaler method)": [[268, "reservoirflow.scalers.Scaler.fit", false]], "fit() (reservoirflow.solutions.neurical.pinn method)": [[323, "reservoirflow.solutions.neurical.PINN.fit", false]], "fit_transform() (reservoirflow.scalers.dummy method)": [[255, "reservoirflow.scalers.Dummy.fit_transform", false]], "fit_transform() (reservoirflow.scalers.minmax method)": [[262, "reservoirflow.scalers.MinMax.fit_transform", false]], "fit_transform() (reservoirflow.scalers.scaler method)": [[269, "reservoirflow.scalers.Scaler.fit_transform", false]], "flow rate": [[479, "term-flow-rate", true]], "fluid (class in reservoirflow.fluids)": [[23, "reservoirflow.fluids.Fluid", false]], "formation volume factor": [[479, "term-formation-volume-factor", true]], "fshape_warn() (in module reservoirflow.utils.helpers)": [[350, "reservoirflow.utils.helpers.fshape_warn", false]], "fshpae": [[479, "term-fshpae", true]], "fvm": [[479, "term-FVM", true]], "fvm (class in reservoirflow.solutions.numerical)": [[341, "reservoirflow.solutions.numerical.FVM", false]], "gas oil ratio": [[479, "term-gas-oil-ratio", true]], "get_alpha() (reservoirflow.models.blackoil method)": [[180, "reservoirflow.models.BlackOil.get_alpha", false]], "get_annotations() (in module reservoirflow.utils.pyvista)": [[376, "reservoirflow.utils.pyvista.get_annotations", false]], "get_boundaries() (reservoirflow.grids.regularcartesian method)": [[106, "reservoirflow.grids.RegularCartesian.get_boundaries", false]], "get_boundary_str() (in module reservoirflow.utils.helpers)": [[351, "reservoirflow.utils.helpers.get_boundary_str", false]], "get_cbar_dict() (in module reservoirflow.utils.pyvista)": [[377, "reservoirflow.utils.pyvista.get_cbar_dict", false]], "get_cdir() (in module reservoirflow.utils.pyvista)": [[378, "reservoirflow.utils.pyvista.get_cdir", false]], "get_cell_a() (reservoirflow.grids.regularcartesian method)": [[107, "reservoirflow.grids.RegularCartesian.get_cell_A", false]], "get_cell_ax() (reservoirflow.grids.regularcartesian method)": [[108, "reservoirflow.grids.RegularCartesian.get_cell_Ax", false]], "get_cell_ay() (reservoirflow.grids.regularcartesian method)": [[109, "reservoirflow.grids.RegularCartesian.get_cell_Ay", false]], "get_cell_az() (reservoirflow.grids.regularcartesian method)": [[110, "reservoirflow.grids.RegularCartesian.get_cell_Az", false]], "get_cell_boundaries() (reservoirflow.grids.regularcartesian method)": [[113, "reservoirflow.grids.RegularCartesian.get_cell_boundaries", false]], "get_cell_center() (reservoirflow.grids.regularcartesian method)": [[114, "reservoirflow.grids.RegularCartesian.get_cell_center", false]], "get_cell_coords() (reservoirflow.grids.regularcartesian method)": [[115, "reservoirflow.grids.RegularCartesian.get_cell_coords", false]], "get_cell_d() (reservoirflow.grids.regularcartesian method)": [[116, "reservoirflow.grids.RegularCartesian.get_cell_d", false]], "get_cell_dx() (reservoirflow.grids.regularcartesian method)": [[117, "reservoirflow.grids.RegularCartesian.get_cell_dx", false]], "get_cell_dy() (reservoirflow.grids.regularcartesian method)": [[118, "reservoirflow.grids.RegularCartesian.get_cell_dy", false]], "get_cell_dz() (reservoirflow.grids.regularcartesian method)": [[119, "reservoirflow.grids.RegularCartesian.get_cell_dz", false]], "get_cell_eq() (reservoirflow.solutions.numerical.fdm method)": [[330, "reservoirflow.solutions.numerical.FDM.get_cell_eq", false]], "get_cell_g() (reservoirflow.grids.regularcartesian method)": [[111, "reservoirflow.grids.RegularCartesian.get_cell_G", false]], "get_cell_icoords() (reservoirflow.grids.regularcartesian method)": [[120, "reservoirflow.grids.RegularCartesian.get_cell_icoords", false]], "get_cell_id() (reservoirflow.grids.regularcartesian method)": [[121, "reservoirflow.grids.RegularCartesian.get_cell_id", false]], "get_cell_k() (reservoirflow.grids.regularcartesian method)": [[122, "reservoirflow.grids.RegularCartesian.get_cell_k", false]], "get_cell_kx() (reservoirflow.grids.regularcartesian method)": [[123, "reservoirflow.grids.RegularCartesian.get_cell_kx", false]], "get_cell_ky() (reservoirflow.grids.regularcartesian method)": [[124, "reservoirflow.grids.RegularCartesian.get_cell_ky", false]], "get_cell_kz() (reservoirflow.grids.regularcartesian method)": [[125, "reservoirflow.grids.RegularCartesian.get_cell_kz", false]], "get_cell_neighbors() (reservoirflow.grids.regularcartesian method)": [[126, "reservoirflow.grids.RegularCartesian.get_cell_neighbors", false]], "get_cell_trans() (reservoirflow.models.blackoil method)": [[181, "reservoirflow.models.BlackOil.get_cell_trans", false]], "get_cell_v() (reservoirflow.grids.regularcartesian method)": [[112, "reservoirflow.grids.RegularCartesian.get_cell_V", false]], "get_cells_a() (reservoirflow.grids.regularcartesian method)": [[127, "reservoirflow.grids.RegularCartesian.get_cells_A", false]], "get_cells_ax() (reservoirflow.grids.regularcartesian method)": [[128, "reservoirflow.grids.RegularCartesian.get_cells_Ax", false]], "get_cells_ay() (reservoirflow.grids.regularcartesian method)": [[129, "reservoirflow.grids.RegularCartesian.get_cells_Ay", false]], "get_cells_az() (reservoirflow.grids.regularcartesian method)": [[130, "reservoirflow.grids.RegularCartesian.get_cells_Az", false]], "get_cells_center() (reservoirflow.grids.regularcartesian method)": [[136, "reservoirflow.grids.RegularCartesian.get_cells_center", false]], "get_cells_coords() (reservoirflow.grids.regularcartesian method)": [[137, "reservoirflow.grids.RegularCartesian.get_cells_coords", false]], "get_cells_d() (reservoirflow.grids.regularcartesian method)": [[138, "reservoirflow.grids.RegularCartesian.get_cells_d", false]], "get_cells_dx() (reservoirflow.grids.regularcartesian method)": [[139, "reservoirflow.grids.RegularCartesian.get_cells_dx", false]], "get_cells_dy() (reservoirflow.grids.regularcartesian method)": [[140, "reservoirflow.grids.RegularCartesian.get_cells_dy", false]], "get_cells_dz() (reservoirflow.grids.regularcartesian method)": [[141, "reservoirflow.grids.RegularCartesian.get_cells_dz", false]], "get_cells_eq() (reservoirflow.solutions.numerical.fdm method)": [[331, "reservoirflow.solutions.numerical.FDM.get_cells_eq", false]], "get_cells_g() (reservoirflow.grids.regularcartesian method)": [[131, "reservoirflow.grids.RegularCartesian.get_cells_G", false]], "get_cells_g_diag_1() (reservoirflow.grids.regularcartesian method)": [[132, "reservoirflow.grids.RegularCartesian.get_cells_G_diag_1", false]], "get_cells_g_diag_2() (reservoirflow.grids.regularcartesian method)": [[133, "reservoirflow.grids.RegularCartesian.get_cells_G_diag_2", false]], "get_cells_g_diag_3() (reservoirflow.grids.regularcartesian method)": [[134, "reservoirflow.grids.RegularCartesian.get_cells_G_diag_3", false]], "get_cells_i() (reservoirflow.grids.regularcartesian method)": [[142, "reservoirflow.grids.RegularCartesian.get_cells_i", false]], "get_cells_icoords() (reservoirflow.grids.regularcartesian method)": [[143, "reservoirflow.grids.RegularCartesian.get_cells_icoords", false]], "get_cells_id() (reservoirflow.grids.regularcartesian method)": [[144, "reservoirflow.grids.RegularCartesian.get_cells_id", false]], "get_cells_k() (reservoirflow.grids.regularcartesian method)": [[145, "reservoirflow.grids.RegularCartesian.get_cells_k", false]], "get_cells_trans() (reservoirflow.models.blackoil method)": [[182, "reservoirflow.models.BlackOil.get_cells_trans", false]], "get_cells_trans_diag() (reservoirflow.models.blackoil method)": [[183, "reservoirflow.models.BlackOil.get_cells_trans_diag", false]], "get_cells_v() (reservoirflow.grids.regularcartesian method)": [[135, "reservoirflow.grids.RegularCartesian.get_cells_V", false]], "get_centers() (reservoirflow.models.blackoil method)": [[184, "reservoirflow.models.BlackOil.get_centers", false]], "get_colormap() (in module reservoirflow.utils.pyvista)": [[379, "reservoirflow.utils.pyvista.get_colormap", false]], "get_corners() (reservoirflow.grids.regularcartesian method)": [[146, "reservoirflow.grids.RegularCartesian.get_corners", false]], "get_d() (reservoirflow.grids.regularcartesian method)": [[104, "reservoirflow.grids.RegularCartesian.get_D", false]], "get_df() (reservoirflow.models.blackoil method)": [[185, "reservoirflow.models.BlackOil.get_df", false]], "get_domain() (reservoirflow.models.blackoil method)": [[186, "reservoirflow.models.BlackOil.get_domain", false]], "get_dsolver() (in module reservoirflow.solutions.numerical.solvers)": [[346, "reservoirflow.solutions.numerical.solvers.get_dsolver", false]], "get_fdir() (reservoirflow.grids.regularcartesian method)": [[147, "reservoirflow.grids.RegularCartesian.get_fdir", false]], "get_fshape() (reservoirflow.grids.regularcartesian method)": [[148, "reservoirflow.grids.RegularCartesian.get_fshape", false]], "get_fshape_str() (in module reservoirflow.utils.helpers)": [[352, "reservoirflow.utils.helpers.get_fshape_str", false]], "get_grid_plotter() (in module reservoirflow.utils.pyvista)": [[380, "reservoirflow.utils.pyvista.get_grid_plotter", false]], "get_init_arrays() (reservoirflow.models.blackoil method)": [[187, "reservoirflow.models.BlackOil.get_init_arrays", false]], "get_isolver() (in module reservoirflow.solutions.numerical.solvers)": [[347, "reservoirflow.solutions.numerical.solvers.get_isolver", false]], "get_limits_fmt() (in module reservoirflow.utils.pyvista)": [[381, "reservoirflow.utils.pyvista.get_limits_fmt", false]], "get_matrices_symb() (reservoirflow.solutions.numerical.fdm method)": [[332, "reservoirflow.solutions.numerical.FDM.get_matrices_symb", false]], "get_matrices_vect() (reservoirflow.solutions.numerical.fdm method)": [[333, "reservoirflow.solutions.numerical.FDM.get_matrices_vect", false]], "get_model_plotter() (in module reservoirflow.utils.pyvista)": [[382, "reservoirflow.utils.pyvista.get_model_plotter", false]], "get_model_values() (in module reservoirflow.utils.pyvista)": [[383, "reservoirflow.utils.pyvista.get_model_values", false]], "get_n() (reservoirflow.grids.regularcartesian method)": [[149, "reservoirflow.grids.RegularCartesian.get_n", false]], "get_n_max() (reservoirflow.grids.regularcartesian method)": [[150, "reservoirflow.grids.RegularCartesian.get_n_max", false]], "get_ones() (reservoirflow.grids.regularcartesian method)": [[151, "reservoirflow.grids.RegularCartesian.get_ones", false]], "get_order() (reservoirflow.grids.regularcartesian method)": [[152, "reservoirflow.grids.RegularCartesian.get_order", false]], "get_points_str() (in module reservoirflow.utils.helpers)": [[353, "reservoirflow.utils.helpers.get_points_str", false]], "get_prop() (reservoirflow.grids.regularcartesian method)": [[153, "reservoirflow.grids.RegularCartesian.get_prop", false]], "get_pyvista_grid() (reservoirflow.grids.regularcartesian method)": [[154, "reservoirflow.grids.RegularCartesian.get_pyvista_grid", false]], "get_shape() (reservoirflow.grids.regularcartesian method)": [[155, "reservoirflow.grids.RegularCartesian.get_shape", false]], "get_shape() (reservoirflow.models.blackoil method)": [[188, "reservoirflow.models.BlackOil.get_shape", false]], "get_solutions() (reservoirflow.models.blackoil method)": [[189, "reservoirflow.models.BlackOil.get_solutions", false]], "get_solutions() (reservoirflow.models.compositional method)": [[214, "reservoirflow.models.Compositional.get_solutions", false]], "get_solutions() (reservoirflow.models.model method)": [[228, "reservoirflow.models.Model.get_solutions", false]], "get_solutions() (reservoirflow.models.thermal method)": [[242, "reservoirflow.models.Thermal.get_solutions", false]], "get_text_locs() (in module reservoirflow.utils.pyvista)": [[384, "reservoirflow.utils.pyvista.get_text_locs", false]], "get_time() (reservoirflow.models.blackoil method)": [[190, "reservoirflow.models.BlackOil.get_time", false]], "get_verbose_str() (in module reservoirflow.utils.helpers)": [[354, "reservoirflow.utils.helpers.get_verbose_str", false]], "get_vt() (reservoirflow.grids.regularcartesian method)": [[105, "reservoirflow.grids.RegularCartesian.get_Vt", false]], "get_window_size() (in module reservoirflow.utils.pyvista)": [[385, "reservoirflow.utils.pyvista.get_window_size", false]], "get_zeros() (reservoirflow.grids.regularcartesian method)": [[156, "reservoirflow.grids.RegularCartesian.get_zeros", false]], "gravitational acceleration": [[479, "term-gravitational-acceleration", true]], "gravity": [[479, "term-gravity", true]], "gravity conversion": [[479, "term-gravity-conversion", true]], "grid (class in reservoirflow.grids)": [[73, "reservoirflow.grids.Grid", false]], "intersection() (in module reservoirflow.utils.helpers)": [[355, "reservoirflow.utils.helpers.intersection", false]], "inverse_transform() (reservoirflow.scalers.dummy method)": [[256, "reservoirflow.scalers.Dummy.inverse_transform", false]], "inverse_transform() (reservoirflow.scalers.minmax method)": [[263, "reservoirflow.scalers.MinMax.inverse_transform", false]], "inverse_transform() (reservoirflow.scalers.scaler method)": [[270, "reservoirflow.scalers.Scaler.inverse_transform", false]], "irregularcartesian (class in reservoirflow.grids)": [[82, "reservoirflow.grids.IrregularCartesian", false]], "is_anisotropic (reservoirflow.grids.regularcartesian property)": [[157, "reservoirflow.grids.RegularCartesian.is_anisotropic", false]], "is_heterogeneous (reservoirflow.grids.regularcartesian property)": [[158, "reservoirflow.grids.RegularCartesian.is_heterogeneous", false]], "is_homogeneous (reservoirflow.grids.regularcartesian property)": [[159, "reservoirflow.grids.RegularCartesian.is_homogeneous", false]], "is_irregular (reservoirflow.grids.regularcartesian property)": [[160, "reservoirflow.grids.RegularCartesian.is_irregular", false]], "is_isotropic (reservoirflow.grids.regularcartesian property)": [[161, "reservoirflow.grids.RegularCartesian.is_isotropic", false]], "is_regular (reservoirflow.grids.regularcartesian property)": [[162, "reservoirflow.grids.RegularCartesian.is_regular", false]], "isin() (in module reservoirflow.utils.helpers)": [[356, "reservoirflow.utils.helpers.isin", false]], "ispoints() (in module reservoirflow.utils.helpers)": [[357, "reservoirflow.utils.helpers.ispoints", false]], "issametype() (in module reservoirflow.utils.helpers)": [[358, "reservoirflow.utils.helpers.issametype", false]], "jax (class in reservoirflow.backends)": [[6, "reservoirflow.backends.JAX", false]], "length": [[479, "term-length", true]], "lprofiler() (in module reservoirflow.utils.profme)": [[365, "reservoirflow.utils.profme.lProfiler", false]], "lru_cache() (in module reservoirflow.utils.helpers)": [[359, "reservoirflow.utils.helpers.lru_cache", false]], "mathephysineer": [[479, "term-mathephysineer", true]], "mathephysineering": [[479, "term-mathephysineering", true]], "minmax (class in reservoirflow.scalers)": [[260, "reservoirflow.scalers.MinMax", false]], "model (class in reservoirflow.models)": [[224, "reservoirflow.models.Model", false]], "module": [[1, "module-reservoirflow", false], [2, "module-reservoirflow.backends", false], [22, "module-reservoirflow.fluids", false], [72, "module-reservoirflow.grids", false], [174, "module-reservoirflow.models", false], [252, "module-reservoirflow.scalers", false], [274, "module-reservoirflow.solutions", false], [279, "module-reservoirflow.solutions.analytical", false], [317, "module-reservoirflow.solutions.neurical", false], [327, "module-reservoirflow.solutions.numerical", false], [345, "module-reservoirflow.solutions.numerical.solvers", false], [348, "module-reservoirflow.utils", false], [349, "module-reservoirflow.utils.helpers", false], [363, "module-reservoirflow.utils.profme", false], [368, "module-reservoirflow.utils.pyvista", false], [394, "module-reservoirflow.wells", false]], "multicell (class in reservoirflow.wells)": [[402, "reservoirflow.wells.MultiCell", false]], "multiphase (class in reservoirflow.fluids)": [[32, "reservoirflow.fluids.MultiPhase", false]], "name (reservoirflow.backends.jax attribute)": [[7, "reservoirflow.backends.JAX.name", false]], "name (reservoirflow.backends.numpy attribute)": [[11, "reservoirflow.backends.NumPy.name", false]], "name (reservoirflow.backends.pytorch attribute)": [[15, "reservoirflow.backends.PyTorch.name", false]], "name (reservoirflow.backends.tensorflow attribute)": [[19, "reservoirflow.backends.TensorFlow.name", false]], "name (reservoirflow.fluids.fluid attribute)": [[26, "reservoirflow.fluids.Fluid.name", false]], "name (reservoirflow.fluids.multiphase attribute)": [[35, "reservoirflow.fluids.MultiPhase.name", false]], "name (reservoirflow.fluids.singlephase attribute)": [[44, "reservoirflow.fluids.SinglePhase.name", false]], "name (reservoirflow.fluids.threephase attribute)": [[57, "reservoirflow.fluids.ThreePhase.name", false]], "name (reservoirflow.fluids.twophase attribute)": [[66, "reservoirflow.fluids.TwoPhase.name", false]], "name (reservoirflow.grids.grid attribute)": [[76, "reservoirflow.grids.Grid.name", false]], "name (reservoirflow.grids.irregularcartesian attribute)": [[85, "reservoirflow.grids.IrregularCartesian.name", false]], "name (reservoirflow.grids.radial attribute)": [[94, "reservoirflow.grids.Radial.name", false]], "name (reservoirflow.grids.regularcartesian attribute)": [[163, "reservoirflow.grids.RegularCartesian.name", false]], "name (reservoirflow.models.blackoil attribute)": [[191, "reservoirflow.models.BlackOil.name", false]], "name (reservoirflow.models.compositional attribute)": [[215, "reservoirflow.models.Compositional.name", false]], "name (reservoirflow.models.model attribute)": [[229, "reservoirflow.models.Model.name", false]], "name (reservoirflow.models.thermal attribute)": [[243, "reservoirflow.models.Thermal.name", false]], "name (reservoirflow.scalers.dummy attribute)": [[257, "reservoirflow.scalers.Dummy.name", false]], "name (reservoirflow.scalers.minmax attribute)": [[264, "reservoirflow.scalers.MinMax.name", false]], "name (reservoirflow.scalers.scaler attribute)": [[271, "reservoirflow.scalers.Scaler.name", false]], "name (reservoirflow.solutions.analytical.d1p1 attribute)": [[282, "reservoirflow.solutions.analytical.D1P1.name", false]], "name (reservoirflow.solutions.analytical.d1p2 attribute)": [[286, "reservoirflow.solutions.analytical.D1P2.name", false]], "name (reservoirflow.solutions.analytical.d1p3 attribute)": [[290, "reservoirflow.solutions.analytical.D1P3.name", false]], "name (reservoirflow.solutions.analytical.d2p1 attribute)": [[294, "reservoirflow.solutions.analytical.D2P1.name", false]], "name (reservoirflow.solutions.analytical.d2p2 attribute)": [[298, "reservoirflow.solutions.analytical.D2P2.name", false]], "name (reservoirflow.solutions.analytical.d2p3 attribute)": [[302, "reservoirflow.solutions.analytical.D2P3.name", false]], "name (reservoirflow.solutions.analytical.d3p1 attribute)": [[306, "reservoirflow.solutions.analytical.D3P1.name", false]], "name (reservoirflow.solutions.analytical.d3p2 attribute)": [[310, "reservoirflow.solutions.analytical.D3P2.name", false]], "name (reservoirflow.solutions.analytical.d3p3 attribute)": [[314, "reservoirflow.solutions.analytical.D3P3.name", false]], "name (reservoirflow.solutions.neurical.deeponet attribute)": [[319, "reservoirflow.solutions.neurical.DeepONet.name", false]], "name (reservoirflow.solutions.neurical.pinn attribute)": [[324, "reservoirflow.solutions.neurical.PINN.name", false]], "name (reservoirflow.solutions.numerical.fdm attribute)": [[334, "reservoirflow.solutions.numerical.FDM.name", false]], "name (reservoirflow.solutions.numerical.fem attribute)": [[338, "reservoirflow.solutions.numerical.FEM.name", false]], "name (reservoirflow.solutions.numerical.fvm attribute)": [[342, "reservoirflow.solutions.numerical.FVM.name", false]], "name (reservoirflow.wells.directional attribute)": [[397, "reservoirflow.wells.Directional.name", false]], "name (reservoirflow.wells.multicell attribute)": [[404, "reservoirflow.wells.MultiCell.name", false]], "name (reservoirflow.wells.singlecell attribute)": [[412, "reservoirflow.wells.SingleCell.name", false]], "name (reservoirflow.wells.well attribute)": [[425, "reservoirflow.wells.Well.name", false]], "numpy (class in reservoirflow.backends)": [[10, "reservoirflow.backends.NumPy", false]], "ones() (reservoirflow.backends.backend method)": [[4, "reservoirflow.backends.Backend.ones", false]], "ones() (reservoirflow.backends.jax method)": [[8, "reservoirflow.backends.JAX.ones", false]], "ones() (reservoirflow.backends.numpy method)": [[12, "reservoirflow.backends.NumPy.ones", false]], "ones() (reservoirflow.backends.pytorch method)": [[16, "reservoirflow.backends.PyTorch.ones", false]], "ones() (reservoirflow.backends.tensorflow method)": [[20, "reservoirflow.backends.TensorFlow.ones", false]], "pde": [[479, "term-PDE", true]], "permeability": [[479, "term-permeability", true]], "phase gravity": [[479, "term-phase-gravity", true]], "pinn (class in reservoirflow.solutions.neurical)": [[322, "reservoirflow.solutions.neurical.PINN", false]], "plot() (reservoirflow.models.blackoil method)": [[192, "reservoirflow.models.BlackOil.plot", false]], "plot_grid() (reservoirflow.models.blackoil method)": [[193, "reservoirflow.models.BlackOil.plot_grid", false]], "porosity": [[479, "term-porosity", true]], "potential": [[479, "term-potential", true]], "pressure": [[479, "term-pressure", true]], "profile() (in module reservoirflow.utils.profme)": [[366, "reservoirflow.utils.profme.profile", false]], "pytorch (class in reservoirflow.backends)": [[14, "reservoirflow.backends.PyTorch", false]], "radial (class in reservoirflow.grids)": [[91, "reservoirflow.grids.Radial", false]], "rate": [[479, "term-rate", true]], "reformat() (in module reservoirflow.utils.helpers)": [[360, "reservoirflow.utils.helpers.reformat", false]], "regularcartesian (class in reservoirflow.grids)": [[100, "reservoirflow.grids.RegularCartesian", false]], "relative permeability": [[479, "term-relative-permeability", true]], "remove_boundaries() (reservoirflow.grids.regularcartesian method)": [[164, "reservoirflow.grids.RegularCartesian.remove_boundaries", false]], "remove_diag() (in module reservoirflow.utils.helpers)": [[361, "reservoirflow.utils.helpers.remove_diag", false]], "report() (reservoirflow.fluids.fluid method)": [[27, "reservoirflow.fluids.Fluid.report", false]], "report() (reservoirflow.fluids.multiphase method)": [[36, "reservoirflow.fluids.MultiPhase.report", false]], "report() (reservoirflow.fluids.singlephase method)": [[45, "reservoirflow.fluids.SinglePhase.report", false]], "report() (reservoirflow.fluids.threephase method)": [[58, "reservoirflow.fluids.ThreePhase.report", false]], "report() (reservoirflow.fluids.twophase method)": [[67, "reservoirflow.fluids.TwoPhase.report", false]], "report() (reservoirflow.grids.grid method)": [[77, "reservoirflow.grids.Grid.report", false]], "report() (reservoirflow.grids.irregularcartesian method)": [[86, "reservoirflow.grids.IrregularCartesian.report", false]], "report() (reservoirflow.grids.radial method)": [[95, "reservoirflow.grids.Radial.report", false]], "report() (reservoirflow.grids.regularcartesian method)": [[165, "reservoirflow.grids.RegularCartesian.report", false]], "report() (reservoirflow.models.blackoil method)": [[194, "reservoirflow.models.BlackOil.report", false]], "report() (reservoirflow.models.compositional method)": [[216, "reservoirflow.models.Compositional.report", false]], "report() (reservoirflow.models.model method)": [[230, "reservoirflow.models.Model.report", false]], "report() (reservoirflow.models.thermal method)": [[244, "reservoirflow.models.Thermal.report", false]], "report() (reservoirflow.wells.directional method)": [[398, "reservoirflow.wells.Directional.report", false]], "report() (reservoirflow.wells.multicell method)": [[405, "reservoirflow.wells.MultiCell.report", false]], "report() (reservoirflow.wells.singlecell method)": [[413, "reservoirflow.wells.SingleCell.report", false]], "report() (reservoirflow.wells.well method)": [[426, "reservoirflow.wells.Well.report", false]], "reservoirflow": [[1, "module-reservoirflow", false]], "reservoirflow.backends": [[2, "module-reservoirflow.backends", false]], "reservoirflow.fluids": [[22, "module-reservoirflow.fluids", false]], "reservoirflow.grids": [[72, "module-reservoirflow.grids", false]], "reservoirflow.models": [[174, "module-reservoirflow.models", false]], "reservoirflow.scalers": [[252, "module-reservoirflow.scalers", false]], "reservoirflow.solutions": [[274, "module-reservoirflow.solutions", false]], "reservoirflow.solutions.analytical": [[279, "module-reservoirflow.solutions.analytical", false]], "reservoirflow.solutions.neurical": [[317, "module-reservoirflow.solutions.neurical", false]], "reservoirflow.solutions.numerical": [[327, "module-reservoirflow.solutions.numerical", false]], "reservoirflow.solutions.numerical.solvers": [[345, "module-reservoirflow.solutions.numerical.solvers", false]], "reservoirflow.utils": [[348, "module-reservoirflow.utils", false]], "reservoirflow.utils.helpers": [[349, "module-reservoirflow.utils.helpers", false]], "reservoirflow.utils.profme": [[363, "module-reservoirflow.utils.profme", false]], "reservoirflow.utils.pyvista": [[368, "module-reservoirflow.utils.pyvista", false]], "reservoirflow.wells": [[394, "module-reservoirflow.wells", false]], "run() (reservoirflow.models.blackoil method)": [[195, "reservoirflow.models.BlackOil.run", false]], "run() (reservoirflow.models.compositional method)": [[217, "reservoirflow.models.Compositional.run", false]], "run() (reservoirflow.models.model method)": [[231, "reservoirflow.models.Model.run", false]], "run() (reservoirflow.models.thermal method)": [[245, "reservoirflow.models.Thermal.run", false]], "run() (reservoirflow.solutions.analytical.d1p1 method)": [[283, "reservoirflow.solutions.analytical.D1P1.run", false]], "run() (reservoirflow.solutions.analytical.d1p2 method)": [[287, "reservoirflow.solutions.analytical.D1P2.run", false]], "run() (reservoirflow.solutions.analytical.d1p3 method)": [[291, "reservoirflow.solutions.analytical.D1P3.run", false]], "run() (reservoirflow.solutions.analytical.d2p1 method)": [[295, "reservoirflow.solutions.analytical.D2P1.run", false]], "run() (reservoirflow.solutions.analytical.d2p2 method)": [[299, "reservoirflow.solutions.analytical.D2P2.run", false]], "run() (reservoirflow.solutions.analytical.d2p3 method)": [[303, "reservoirflow.solutions.analytical.D2P3.run", false]], "run() (reservoirflow.solutions.analytical.d3p1 method)": [[307, "reservoirflow.solutions.analytical.D3P1.run", false]], "run() (reservoirflow.solutions.analytical.d3p2 method)": [[311, "reservoirflow.solutions.analytical.D3P2.run", false]], "run() (reservoirflow.solutions.analytical.d3p3 method)": [[315, "reservoirflow.solutions.analytical.D3P3.run", false]], "run() (reservoirflow.solutions.neurical.deeponet method)": [[320, "reservoirflow.solutions.neurical.DeepONet.run", false]], "run() (reservoirflow.solutions.neurical.pinn method)": [[325, "reservoirflow.solutions.neurical.PINN.run", false]], "run() (reservoirflow.solutions.numerical.fdm method)": [[335, "reservoirflow.solutions.numerical.FDM.run", false]], "run() (reservoirflow.solutions.numerical.fem method)": [[339, "reservoirflow.solutions.numerical.FEM.run", false]], "run() (reservoirflow.solutions.numerical.fvm method)": [[343, "reservoirflow.solutions.numerical.FVM.run", false]], "run() (reservoirflow.solutions.solution method)": [[277, "reservoirflow.solutions.Solution.run", false]], "saturation": [[479, "term-saturation", true]], "save_gif() (in module reservoirflow.utils.pyvista)": [[386, "reservoirflow.utils.pyvista.save_gif", false]], "save_gif() (reservoirflow.models.blackoil method)": [[196, "reservoirflow.models.BlackOil.save_gif", false]], "scaler (class in reservoirflow.scalers)": [[267, "reservoirflow.scalers.Scaler", false]], "set_all_boundaries() (reservoirflow.models.blackoil method)": [[197, "reservoirflow.models.BlackOil.set_all_boundaries", false]], "set_b() (reservoirflow.fluids.singlephase method)": [[46, "reservoirflow.fluids.SinglePhase.set_B", false]], "set_background_color() (in module reservoirflow.utils.pyvista)": [[387, "reservoirflow.utils.pyvista.set_background_color", false]], "set_boundaries() (reservoirflow.models.blackoil method)": [[198, "reservoirflow.models.BlackOil.set_boundaries", false]], "set_boundary() (reservoirflow.models.blackoil method)": [[199, "reservoirflow.models.BlackOil.set_boundary", false]], "set_cell_id() (reservoirflow.wells.singlecell method)": [[414, "reservoirflow.wells.SingleCell.set_cell_id", false]], "set_cell_value() (reservoirflow.grids.regularcartesian method)": [[166, "reservoirflow.grids.RegularCartesian.set_cell_value", false]], "set_comp() (reservoirflow.fluids.fluid method)": [[28, "reservoirflow.fluids.Fluid.set_comp", false]], "set_comp() (reservoirflow.fluids.multiphase method)": [[37, "reservoirflow.fluids.MultiPhase.set_comp", false]], "set_comp() (reservoirflow.fluids.singlephase method)": [[47, "reservoirflow.fluids.SinglePhase.set_comp", false]], "set_comp() (reservoirflow.fluids.threephase method)": [[59, "reservoirflow.fluids.ThreePhase.set_comp", false]], "set_comp() (reservoirflow.fluids.twophase method)": [[68, "reservoirflow.fluids.TwoPhase.set_comp", false]], "set_comp() (reservoirflow.grids.grid method)": [[78, "reservoirflow.grids.Grid.set_comp", false]], "set_comp() (reservoirflow.grids.irregularcartesian method)": [[87, "reservoirflow.grids.IrregularCartesian.set_comp", false]], "set_comp() (reservoirflow.grids.radial method)": [[96, "reservoirflow.grids.Radial.set_comp", false]], "set_comp() (reservoirflow.grids.regularcartesian method)": [[167, "reservoirflow.grids.RegularCartesian.set_comp", false]], "set_comp() (reservoirflow.models.blackoil method)": [[200, "reservoirflow.models.BlackOil.set_comp", false]], "set_comp() (reservoirflow.models.compositional method)": [[218, "reservoirflow.models.Compositional.set_comp", false]], "set_comp() (reservoirflow.models.model method)": [[232, "reservoirflow.models.Model.set_comp", false]], "set_comp() (reservoirflow.models.thermal method)": [[246, "reservoirflow.models.Thermal.set_comp", false]], "set_constrain() (reservoirflow.wells.singlecell method)": [[415, "reservoirflow.wells.SingleCell.set_constrain", false]], "set_mode() (in module reservoirflow.utils.pyvista)": [[388, "reservoirflow.utils.pyvista.set_mode", false]], "set_mu() (reservoirflow.fluids.singlephase method)": [[48, "reservoirflow.fluids.SinglePhase.set_mu", false]], "set_output_range() (reservoirflow.scalers.dummy method)": [[258, "reservoirflow.scalers.Dummy.set_output_range", false]], "set_output_range() (reservoirflow.scalers.minmax method)": [[265, "reservoirflow.scalers.MinMax.set_output_range", false]], "set_output_range() (reservoirflow.scalers.scaler method)": [[272, "reservoirflow.scalers.Scaler.set_output_range", false]], "set_plotter_backend() (in module reservoirflow.utils.pyvista)": [[389, "reservoirflow.utils.pyvista.set_plotter_backend", false]], "set_plotter_config() (in module reservoirflow.utils.pyvista)": [[390, "reservoirflow.utils.pyvista.set_plotter_config", false]], "set_prop() (reservoirflow.grids.regularcartesian method)": [[168, "reservoirflow.grids.RegularCartesian.set_prop", false]], "set_props() (reservoirflow.fluids.singlephase method)": [[49, "reservoirflow.fluids.SinglePhase.set_props", false]], "set_props() (reservoirflow.grids.regularcartesian method)": [[169, "reservoirflow.grids.RegularCartesian.set_props", false]], "set_props() (reservoirflow.wells.singlecell method)": [[416, "reservoirflow.wells.SingleCell.set_props", false]], "set_q() (reservoirflow.wells.singlecell method)": [[417, "reservoirflow.wells.SingleCell.set_q", false]], "set_r() (reservoirflow.wells.singlecell method)": [[418, "reservoirflow.wells.SingleCell.set_r", false]], "set_rho() (reservoirflow.fluids.singlephase method)": [[50, "reservoirflow.fluids.SinglePhase.set_rho", false]], "set_s() (reservoirflow.wells.singlecell method)": [[419, "reservoirflow.wells.SingleCell.set_s", false]], "set_scalers() (reservoirflow.models.blackoil method)": [[201, "reservoirflow.models.BlackOil.set_scalers", false]], "set_solution() (reservoirflow.models.blackoil method)": [[202, "reservoirflow.models.BlackOil.set_solution", false]], "set_solution() (reservoirflow.models.compositional method)": [[219, "reservoirflow.models.Compositional.set_solution", false]], "set_solution() (reservoirflow.models.model method)": [[233, "reservoirflow.models.Model.set_solution", false]], "set_solution() (reservoirflow.models.thermal method)": [[247, "reservoirflow.models.Thermal.set_solution", false]], "set_text_color() (in module reservoirflow.utils.pyvista)": [[391, "reservoirflow.utils.pyvista.set_text_color", false]], "set_units() (reservoirflow.fluids.fluid method)": [[29, "reservoirflow.fluids.Fluid.set_units", false]], "set_units() (reservoirflow.fluids.multiphase method)": [[38, "reservoirflow.fluids.MultiPhase.set_units", false]], "set_units() (reservoirflow.fluids.singlephase method)": [[51, "reservoirflow.fluids.SinglePhase.set_units", false]], "set_units() (reservoirflow.fluids.threephase method)": [[60, "reservoirflow.fluids.ThreePhase.set_units", false]], "set_units() (reservoirflow.fluids.twophase method)": [[69, "reservoirflow.fluids.TwoPhase.set_units", false]], "set_units() (reservoirflow.grids.grid method)": [[79, "reservoirflow.grids.Grid.set_units", false]], "set_units() (reservoirflow.grids.irregularcartesian method)": [[88, "reservoirflow.grids.IrregularCartesian.set_units", false]], "set_units() (reservoirflow.grids.radial method)": [[97, "reservoirflow.grids.Radial.set_units", false]], "set_units() (reservoirflow.grids.regularcartesian method)": [[170, "reservoirflow.grids.RegularCartesian.set_units", false]], "set_units() (reservoirflow.models.blackoil method)": [[203, "reservoirflow.models.BlackOil.set_units", false]], "set_units() (reservoirflow.models.compositional method)": [[220, "reservoirflow.models.Compositional.set_units", false]], "set_units() (reservoirflow.models.model method)": [[234, "reservoirflow.models.Model.set_units", false]], "set_units() (reservoirflow.models.thermal method)": [[248, "reservoirflow.models.Thermal.set_units", false]], "set_units() (reservoirflow.wells.directional method)": [[399, "reservoirflow.wells.Directional.set_units", false]], "set_units() (reservoirflow.wells.multicell method)": [[406, "reservoirflow.wells.MultiCell.set_units", false]], "set_units() (reservoirflow.wells.singlecell method)": [[420, "reservoirflow.wells.SingleCell.set_units", false]], "set_units() (reservoirflow.wells.well method)": [[427, "reservoirflow.wells.Well.set_units", false]], "set_well() (reservoirflow.models.blackoil method)": [[204, "reservoirflow.models.BlackOil.set_well", false]], "shape_error() (in module reservoirflow.utils.helpers)": [[362, "reservoirflow.utils.helpers.shape_error", false]], "show() (reservoirflow.grids.regularcartesian method)": [[171, "reservoirflow.grids.RegularCartesian.show", false]], "show() (reservoirflow.models.blackoil method)": [[205, "reservoirflow.models.BlackOil.show", false]], "show_grid() (in module reservoirflow.utils.pyvista)": [[392, "reservoirflow.utils.pyvista.show_grid", false]], "show_model() (in module reservoirflow.utils.pyvista)": [[393, "reservoirflow.utils.pyvista.show_model", false]], "singlecell (class in reservoirflow.wells)": [[409, "reservoirflow.wells.SingleCell", false]], "singlephase (class in reservoirflow.fluids)": [[41, "reservoirflow.fluids.SinglePhase", false]], "solution (class in reservoirflow.solutions)": [[276, "reservoirflow.solutions.Solution", false]], "solve() (reservoirflow.models.blackoil method)": [[206, "reservoirflow.models.BlackOil.solve", false]], "solve() (reservoirflow.models.compositional method)": [[221, "reservoirflow.models.Compositional.solve", false]], "solve() (reservoirflow.models.model method)": [[235, "reservoirflow.models.Model.solve", false]], "solve() (reservoirflow.models.thermal method)": [[249, "reservoirflow.models.Thermal.solve", false]], "solve() (reservoirflow.solutions.analytical.d1p1 method)": [[284, "reservoirflow.solutions.analytical.D1P1.solve", false]], "solve() (reservoirflow.solutions.analytical.d1p2 method)": [[288, "reservoirflow.solutions.analytical.D1P2.solve", false]], "solve() (reservoirflow.solutions.analytical.d1p3 method)": [[292, "reservoirflow.solutions.analytical.D1P3.solve", false]], "solve() (reservoirflow.solutions.analytical.d2p1 method)": [[296, "reservoirflow.solutions.analytical.D2P1.solve", false]], "solve() (reservoirflow.solutions.analytical.d2p2 method)": [[300, "reservoirflow.solutions.analytical.D2P2.solve", false]], "solve() (reservoirflow.solutions.analytical.d2p3 method)": [[304, "reservoirflow.solutions.analytical.D2P3.solve", false]], "solve() (reservoirflow.solutions.analytical.d3p1 method)": [[308, "reservoirflow.solutions.analytical.D3P1.solve", false]], "solve() (reservoirflow.solutions.analytical.d3p2 method)": [[312, "reservoirflow.solutions.analytical.D3P2.solve", false]], "solve() (reservoirflow.solutions.analytical.d3p3 method)": [[316, "reservoirflow.solutions.analytical.D3P3.solve", false]], "solve() (reservoirflow.solutions.neurical.deeponet method)": [[321, "reservoirflow.solutions.neurical.DeepONet.solve", false]], "solve() (reservoirflow.solutions.neurical.pinn method)": [[326, "reservoirflow.solutions.neurical.PINN.solve", false]], "solve() (reservoirflow.solutions.numerical.fdm method)": [[336, "reservoirflow.solutions.numerical.FDM.solve", false]], "solve() (reservoirflow.solutions.numerical.fem method)": [[340, "reservoirflow.solutions.numerical.FEM.solve", false]], "solve() (reservoirflow.solutions.numerical.fvm method)": [[344, "reservoirflow.solutions.numerical.FVM.solve", false]], "solve() (reservoirflow.solutions.solution method)": [[278, "reservoirflow.solutions.Solution.solve", false]], "temperature": [[479, "term-temperature", true]], "tensorflow (class in reservoirflow.backends)": [[18, "reservoirflow.backends.TensorFlow", false]], "thermal (class in reservoirflow.models)": [[238, "reservoirflow.models.Thermal", false]], "threephase (class in reservoirflow.fluids)": [[54, "reservoirflow.fluids.ThreePhase", false]], "time": [[479, "term-time", true]], "timeit() (in module reservoirflow.utils.profme)": [[367, "reservoirflow.utils.profme.timeit", false]], "transform() (reservoirflow.scalers.dummy method)": [[259, "reservoirflow.scalers.Dummy.transform", false]], "transform() (reservoirflow.scalers.minmax method)": [[266, "reservoirflow.scalers.MinMax.transform", false]], "transform() (reservoirflow.scalers.scaler method)": [[273, "reservoirflow.scalers.Scaler.transform", false]], "transmissibility": [[479, "term-transmissibility", true]], "transmissibility conversion": [[479, "term-transmissibility-conversion", true]], "transpose() (reservoirflow.backends.backend method)": [[5, "reservoirflow.backends.Backend.transpose", false]], "transpose() (reservoirflow.backends.jax method)": [[9, "reservoirflow.backends.JAX.transpose", false]], "transpose() (reservoirflow.backends.numpy method)": [[13, "reservoirflow.backends.NumPy.transpose", false]], "transpose() (reservoirflow.backends.pytorch method)": [[17, "reservoirflow.backends.PyTorch.transpose", false]], "transpose() (reservoirflow.backends.tensorflow method)": [[21, "reservoirflow.backends.TensorFlow.transpose", false]], "twophase (class in reservoirflow.fluids)": [[63, "reservoirflow.fluids.TwoPhase", false]], "unit (reservoirflow.fluids.fluid attribute)": [[30, "reservoirflow.fluids.Fluid.unit", false]], "unit (reservoirflow.fluids.multiphase attribute)": [[39, "reservoirflow.fluids.MultiPhase.unit", false]], "unit (reservoirflow.fluids.singlephase attribute)": [[52, "reservoirflow.fluids.SinglePhase.unit", false]], "unit (reservoirflow.fluids.threephase attribute)": [[61, "reservoirflow.fluids.ThreePhase.unit", false]], "unit (reservoirflow.fluids.twophase attribute)": [[70, "reservoirflow.fluids.TwoPhase.unit", false]], "unit (reservoirflow.grids.grid attribute)": [[80, "reservoirflow.grids.Grid.unit", false]], "unit (reservoirflow.grids.irregularcartesian attribute)": [[89, "reservoirflow.grids.IrregularCartesian.unit", false]], "unit (reservoirflow.grids.radial attribute)": [[98, "reservoirflow.grids.Radial.unit", false]], "unit (reservoirflow.grids.regularcartesian attribute)": [[172, "reservoirflow.grids.RegularCartesian.unit", false]], "unit (reservoirflow.models.blackoil attribute)": [[207, "reservoirflow.models.BlackOil.unit", false]], "unit (reservoirflow.models.compositional attribute)": [[222, "reservoirflow.models.Compositional.unit", false]], "unit (reservoirflow.models.model attribute)": [[236, "reservoirflow.models.Model.unit", false]], "unit (reservoirflow.models.thermal attribute)": [[250, "reservoirflow.models.Thermal.unit", false]], "unit (reservoirflow.wells.directional attribute)": [[400, "reservoirflow.wells.Directional.unit", false]], "unit (reservoirflow.wells.multicell attribute)": [[407, "reservoirflow.wells.MultiCell.unit", false]], "unit (reservoirflow.wells.singlecell attribute)": [[421, "reservoirflow.wells.SingleCell.unit", false]], "unit (reservoirflow.wells.well attribute)": [[428, "reservoirflow.wells.Well.unit", false]], "units (reservoirflow.fluids.fluid attribute)": [[31, "reservoirflow.fluids.Fluid.units", false]], "units (reservoirflow.fluids.multiphase attribute)": [[40, "reservoirflow.fluids.MultiPhase.units", false]], "units (reservoirflow.fluids.singlephase attribute)": [[53, "reservoirflow.fluids.SinglePhase.units", false]], "units (reservoirflow.fluids.threephase attribute)": [[62, "reservoirflow.fluids.ThreePhase.units", false]], "units (reservoirflow.fluids.twophase attribute)": [[71, "reservoirflow.fluids.TwoPhase.units", false]], "units (reservoirflow.grids.grid attribute)": [[81, "reservoirflow.grids.Grid.units", false]], "units (reservoirflow.grids.irregularcartesian attribute)": [[90, "reservoirflow.grids.IrregularCartesian.units", false]], "units (reservoirflow.grids.radial attribute)": [[99, "reservoirflow.grids.Radial.units", false]], "units (reservoirflow.grids.regularcartesian attribute)": [[173, "reservoirflow.grids.RegularCartesian.units", false]], "units (reservoirflow.models.blackoil attribute)": [[208, "reservoirflow.models.BlackOil.units", false]], "units (reservoirflow.models.compositional attribute)": [[223, "reservoirflow.models.Compositional.units", false]], "units (reservoirflow.models.model attribute)": [[237, "reservoirflow.models.Model.units", false]], "units (reservoirflow.models.thermal attribute)": [[251, "reservoirflow.models.Thermal.units", false]], "units (reservoirflow.wells.directional attribute)": [[401, "reservoirflow.wells.Directional.units", false]], "units (reservoirflow.wells.multicell attribute)": [[408, "reservoirflow.wells.MultiCell.units", false]], "units (reservoirflow.wells.singlecell attribute)": [[422, "reservoirflow.wells.SingleCell.units", false]], "units (reservoirflow.wells.well attribute)": [[429, "reservoirflow.wells.Well.units", false]], "update_scalers() (reservoirflow.models.blackoil method)": [[209, "reservoirflow.models.BlackOil.update_scalers", false]], "viscosity": [[479, "term-viscosity", true]], "volume": [[479, "term-volume", true]], "volume conversion": [[479, "term-volume-conversion", true]], "volumetric velocity": [[479, "term-volumetric-velocity", true]], "well (class in reservoirflow.wells)": [[423, "reservoirflow.wells.Well", false]]}, "objects": {"": [[1, 0, 0, "-", "reservoirflow"]], "reservoirflow": [[2, 0, 0, "-", "backends"], [22, 0, 0, "-", "fluids"], [72, 0, 0, "-", "grids"], [174, 0, 0, "-", "models"], [252, 0, 0, "-", "scalers"], [274, 0, 0, "-", "solutions"], [348, 0, 0, "-", "utils"], [394, 0, 0, "-", "wells"]], "reservoirflow.backends": [[3, 1, 1, "", "Backend"], [6, 1, 1, "", "JAX"], [10, 1, 1, "", "NumPy"], [14, 1, 1, "", "PyTorch"], [18, 1, 1, "", "TensorFlow"]], "reservoirflow.backends.Backend": [[4, 2, 1, "", "ones"], [5, 2, 1, "", "transpose"]], "reservoirflow.backends.JAX": [[7, 3, 1, "", "name"], [8, 2, 1, "", "ones"], [9, 2, 1, "", "transpose"]], "reservoirflow.backends.NumPy": [[11, 3, 1, "", "name"], [12, 2, 1, "", "ones"], [13, 2, 1, "", "transpose"]], "reservoirflow.backends.PyTorch": [[15, 3, 1, "", "name"], [16, 2, 1, "", "ones"], [17, 2, 1, "", "transpose"]], "reservoirflow.backends.TensorFlow": [[19, 3, 1, "", "name"], [20, 2, 1, "", "ones"], [21, 2, 1, "", "transpose"]], "reservoirflow.fluids": [[23, 1, 1, "", "Fluid"], [32, 1, 1, "", "MultiPhase"], [41, 1, 1, "", "SinglePhase"], [54, 1, 1, "", "ThreePhase"], [63, 1, 1, "", "TwoPhase"]], "reservoirflow.fluids.Fluid": [[24, 2, 1, "", "allow_synonyms"], [25, 3, 1, "", "factors"], [26, 3, 1, "", "name"], [27, 2, 1, "", "report"], [28, 2, 1, "", "set_comp"], [29, 2, 1, "", "set_units"], [30, 3, 1, "", "unit"], [31, 3, 1, "", "units"]], "reservoirflow.fluids.MultiPhase": [[33, 2, 1, "", "allow_synonyms"], [34, 3, 1, "", "factors"], [35, 3, 1, "", "name"], [36, 2, 1, "", "report"], [37, 2, 1, "", "set_comp"], [38, 2, 1, "", "set_units"], [39, 3, 1, "", "unit"], [40, 3, 1, "", "units"]], "reservoirflow.fluids.SinglePhase": [[42, 2, 1, "", "allow_synonyms"], [43, 3, 1, "", "factors"], [44, 3, 1, "", "name"], [45, 2, 1, "", "report"], [46, 2, 1, "", "set_B"], [47, 2, 1, "", "set_comp"], [48, 2, 1, "", "set_mu"], [49, 2, 1, "", "set_props"], [50, 2, 1, "", "set_rho"], [51, 2, 1, "", "set_units"], [52, 3, 1, "", "unit"], [53, 3, 1, "", "units"]], "reservoirflow.fluids.ThreePhase": [[55, 2, 1, "", "allow_synonyms"], [56, 3, 1, "", "factors"], [57, 3, 1, "", "name"], [58, 2, 1, "", "report"], [59, 2, 1, "", "set_comp"], [60, 2, 1, "", "set_units"], [61, 3, 1, "", "unit"], [62, 3, 1, "", "units"]], "reservoirflow.fluids.TwoPhase": [[64, 2, 1, "", "allow_synonyms"], [65, 3, 1, "", "factors"], [66, 3, 1, "", "name"], [67, 2, 1, "", "report"], [68, 2, 1, "", "set_comp"], [69, 2, 1, "", "set_units"], [70, 3, 1, "", "unit"], [71, 3, 1, "", "units"]], "reservoirflow.grids": [[73, 1, 1, "", "Grid"], [82, 1, 1, "", "IrregularCartesian"], [91, 1, 1, "", "Radial"], [100, 1, 1, "", "RegularCartesian"]], "reservoirflow.grids.Grid": [[74, 2, 1, "", "allow_synonyms"], [75, 3, 1, "", "factors"], [76, 3, 1, "", "name"], [77, 2, 1, "", "report"], [78, 2, 1, "", "set_comp"], [79, 2, 1, "", "set_units"], [80, 3, 1, "", "unit"], [81, 3, 1, "", "units"]], "reservoirflow.grids.IrregularCartesian": [[83, 2, 1, "", "allow_synonyms"], [84, 3, 1, "", "factors"], [85, 3, 1, "", "name"], [86, 2, 1, "", "report"], [87, 2, 1, "", "set_comp"], [88, 2, 1, "", "set_units"], [89, 3, 1, "", "unit"], [90, 3, 1, "", "units"]], "reservoirflow.grids.Radial": [[92, 2, 1, "", "allow_synonyms"], [93, 3, 1, "", "factors"], [94, 3, 1, "", "name"], [95, 2, 1, "", "report"], [96, 2, 1, "", "set_comp"], [97, 2, 1, "", "set_units"], [98, 3, 1, "", "unit"], [99, 3, 1, "", "units"]], "reservoirflow.grids.RegularCartesian": [[101, 2, 1, "", "allow_synonyms"], [102, 2, 1, "", "extract_boundaries"], [103, 3, 1, "", "factors"], [104, 2, 1, "", "get_D"], [105, 2, 1, "", "get_Vt"], [106, 2, 1, "", "get_boundaries"], [107, 2, 1, "", "get_cell_A"], [108, 2, 1, "", "get_cell_Ax"], [109, 2, 1, "", "get_cell_Ay"], [110, 2, 1, "", "get_cell_Az"], [111, 2, 1, "", "get_cell_G"], [112, 2, 1, "", "get_cell_V"], [113, 2, 1, "", "get_cell_boundaries"], [114, 2, 1, "", "get_cell_center"], [115, 2, 1, "", "get_cell_coords"], [116, 2, 1, "", "get_cell_d"], [117, 2, 1, "", "get_cell_dx"], [118, 2, 1, "", "get_cell_dy"], [119, 2, 1, "", "get_cell_dz"], [120, 2, 1, "", "get_cell_icoords"], [121, 2, 1, "", "get_cell_id"], [122, 2, 1, "", "get_cell_k"], [123, 2, 1, "", "get_cell_kx"], [124, 2, 1, "", "get_cell_ky"], [125, 2, 1, "", "get_cell_kz"], [126, 2, 1, "", "get_cell_neighbors"], [127, 2, 1, "", "get_cells_A"], [128, 2, 1, "", "get_cells_Ax"], [129, 2, 1, "", "get_cells_Ay"], [130, 2, 1, "", "get_cells_Az"], [131, 2, 1, "", "get_cells_G"], [132, 2, 1, "", "get_cells_G_diag_1"], [133, 2, 1, "", "get_cells_G_diag_2"], [134, 2, 1, "", "get_cells_G_diag_3"], [135, 2, 1, "", "get_cells_V"], [136, 2, 1, "", "get_cells_center"], [137, 2, 1, "", "get_cells_coords"], [138, 2, 1, "", "get_cells_d"], [139, 2, 1, "", "get_cells_dx"], [140, 2, 1, "", "get_cells_dy"], [141, 2, 1, "", "get_cells_dz"], [142, 2, 1, "", "get_cells_i"], [143, 2, 1, "", "get_cells_icoords"], [144, 2, 1, "", "get_cells_id"], [145, 2, 1, "", "get_cells_k"], [146, 2, 1, "", "get_corners"], [147, 2, 1, "", "get_fdir"], [148, 2, 1, "", "get_fshape"], [149, 2, 1, "", "get_n"], [150, 2, 1, "", "get_n_max"], [151, 2, 1, "", "get_ones"], [152, 2, 1, "", "get_order"], [153, 2, 1, "", "get_prop"], [154, 2, 1, "", "get_pyvista_grid"], [155, 2, 1, "", "get_shape"], [156, 2, 1, "", "get_zeros"], [157, 4, 1, "", "is_anisotropic"], [158, 4, 1, "", "is_heterogeneous"], [159, 4, 1, "", "is_homogeneous"], [160, 4, 1, "", "is_irregular"], [161, 4, 1, "", "is_isotropic"], [162, 4, 1, "", "is_regular"], [163, 3, 1, "", "name"], [164, 2, 1, "", "remove_boundaries"], [165, 2, 1, "", "report"], [166, 2, 1, "", "set_cell_value"], [167, 2, 1, "", "set_comp"], [168, 2, 1, "", "set_prop"], [169, 2, 1, "", "set_props"], [170, 2, 1, "", "set_units"], [171, 2, 1, "", "show"], [172, 3, 1, "", "unit"], [173, 3, 1, "", "units"]], "reservoirflow.models": [[175, 1, 1, "", "BlackOil"], [210, 1, 1, "", "Compositional"], [224, 1, 1, "", "Model"], [238, 1, 1, "", "Thermal"]], "reservoirflow.models.BlackOil": [[176, 2, 1, "", "allow_synonyms"], [177, 2, 1, "", "compile"], [178, 2, 1, "", "copy"], [179, 3, 1, "", "factors"], [180, 2, 1, "", "get_alpha"], [181, 2, 1, "", "get_cell_trans"], [182, 2, 1, "", "get_cells_trans"], [183, 2, 1, "", "get_cells_trans_diag"], [184, 2, 1, "", "get_centers"], [185, 2, 1, "", "get_df"], [186, 2, 1, "", "get_domain"], [187, 2, 1, "", "get_init_arrays"], [188, 2, 1, "", "get_shape"], [189, 2, 1, "", "get_solutions"], [190, 2, 1, "", "get_time"], [191, 3, 1, "", "name"], [192, 2, 1, "", "plot"], [193, 2, 1, "", "plot_grid"], [194, 2, 1, "", "report"], [195, 2, 1, "", "run"], [196, 2, 1, "", "save_gif"], [197, 2, 1, "", "set_all_boundaries"], [198, 2, 1, "", "set_boundaries"], [199, 2, 1, "", "set_boundary"], [200, 2, 1, "", "set_comp"], [201, 2, 1, "", "set_scalers"], [202, 2, 1, "", "set_solution"], [203, 2, 1, "", "set_units"], [204, 2, 1, "", "set_well"], [205, 2, 1, "", "show"], [206, 2, 1, "", "solve"], [207, 3, 1, "", "unit"], [208, 3, 1, "", "units"], [209, 2, 1, "", "update_scalers"]], "reservoirflow.models.Compositional": [[211, 2, 1, "", "allow_synonyms"], [212, 2, 1, "", "compile"], [213, 3, 1, "", "factors"], [214, 2, 1, "", "get_solutions"], [215, 3, 1, "", "name"], [216, 2, 1, "", "report"], [217, 2, 1, "", "run"], [218, 2, 1, "", "set_comp"], [219, 2, 1, "", "set_solution"], [220, 2, 1, "", "set_units"], [221, 2, 1, "", "solve"], [222, 3, 1, "", "unit"], [223, 3, 1, "", "units"]], "reservoirflow.models.Model": [[225, 2, 1, "", "allow_synonyms"], [226, 2, 1, "", "compile"], [227, 3, 1, "", "factors"], [228, 2, 1, "", "get_solutions"], [229, 3, 1, "", "name"], [230, 2, 1, "", "report"], [231, 2, 1, "", "run"], [232, 2, 1, "", "set_comp"], [233, 2, 1, "", "set_solution"], [234, 2, 1, "", "set_units"], [235, 2, 1, "", "solve"], [236, 3, 1, "", "unit"], [237, 3, 1, "", "units"]], "reservoirflow.models.Thermal": [[239, 2, 1, "", "allow_synonyms"], [240, 2, 1, "", "compile"], [241, 3, 1, "", "factors"], [242, 2, 1, "", "get_solutions"], [243, 3, 1, "", "name"], [244, 2, 1, "", "report"], [245, 2, 1, "", "run"], [246, 2, 1, "", "set_comp"], [247, 2, 1, "", "set_solution"], [248, 2, 1, "", "set_units"], [249, 2, 1, "", "solve"], [250, 3, 1, "", "unit"], [251, 3, 1, "", "units"]], "reservoirflow.scalers": [[253, 1, 1, "", "Dummy"], [260, 1, 1, "", "MinMax"], [267, 1, 1, "", "Scaler"]], "reservoirflow.scalers.Dummy": [[254, 2, 1, "", "fit"], [255, 2, 1, "", "fit_transform"], [256, 2, 1, "", "inverse_transform"], [257, 3, 1, "", "name"], [258, 2, 1, "", "set_output_range"], [259, 2, 1, "", "transform"]], "reservoirflow.scalers.MinMax": [[261, 2, 1, "", "fit"], [262, 2, 1, "", "fit_transform"], [263, 2, 1, "", "inverse_transform"], [264, 3, 1, "", "name"], [265, 2, 1, "", "set_output_range"], [266, 2, 1, "", "transform"]], "reservoirflow.scalers.Scaler": [[268, 2, 1, "", "fit"], [269, 2, 1, "", "fit_transform"], [270, 2, 1, "", "inverse_transform"], [271, 3, 1, "", "name"], [272, 2, 1, "", "set_output_range"], [273, 2, 1, "", "transform"]], "reservoirflow.solutions": [[275, 1, 1, "", "Compiler"], [276, 1, 1, "", "Solution"], [279, 0, 0, "-", "analytical"], [317, 0, 0, "-", "neurical"], [327, 0, 0, "-", "numerical"]], "reservoirflow.solutions.Solution": [[277, 2, 1, "", "run"], [278, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical": [[280, 1, 1, "", "D1P1"], [285, 1, 1, "", "D1P2"], [289, 1, 1, "", "D1P3"], [293, 1, 1, "", "D2P1"], [297, 1, 1, "", "D2P2"], [301, 1, 1, "", "D2P3"], [305, 1, 1, "", "D3P1"], [309, 1, 1, "", "D3P2"], [313, 1, 1, "", "D3P3"]], "reservoirflow.solutions.analytical.D1P1": [[281, 2, 1, "", "calc_solution"], [282, 3, 1, "", "name"], [283, 2, 1, "", "run"], [284, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D1P2": [[286, 3, 1, "", "name"], [287, 2, 1, "", "run"], [288, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D1P3": [[290, 3, 1, "", "name"], [291, 2, 1, "", "run"], [292, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D2P1": [[294, 3, 1, "", "name"], [295, 2, 1, "", "run"], [296, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D2P2": [[298, 3, 1, "", "name"], [299, 2, 1, "", "run"], [300, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D2P3": [[302, 3, 1, "", "name"], [303, 2, 1, "", "run"], [304, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D3P1": [[306, 3, 1, "", "name"], [307, 2, 1, "", "run"], [308, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D3P2": [[310, 3, 1, "", "name"], [311, 2, 1, "", "run"], [312, 2, 1, "", "solve"]], "reservoirflow.solutions.analytical.D3P3": [[314, 3, 1, "", "name"], [315, 2, 1, "", "run"], [316, 2, 1, "", "solve"]], "reservoirflow.solutions.neurical": [[318, 1, 1, "", "DeepONet"], [322, 1, 1, "", "PINN"]], "reservoirflow.solutions.neurical.DeepONet": [[319, 3, 1, "", "name"], [320, 2, 1, "", "run"], [321, 2, 1, "", "solve"]], "reservoirflow.solutions.neurical.PINN": [[323, 2, 1, "", "fit"], [324, 3, 1, "", "name"], [325, 2, 1, "", "run"], [326, 2, 1, "", "solve"]], "reservoirflow.solutions.numerical": [[328, 1, 1, "", "FDM"], [337, 1, 1, "", "FEM"], [341, 1, 1, "", "FVM"], [345, 0, 0, "-", "solvers"]], "reservoirflow.solutions.numerical.FDM": [[329, 2, 1, "", "check_MB"], [330, 2, 1, "", "get_cell_eq"], [331, 2, 1, "", "get_cells_eq"], [332, 2, 1, "", "get_matrices_symb"], [333, 2, 1, "", "get_matrices_vect"], [334, 3, 1, "", "name"], [335, 2, 1, "", "run"], [336, 2, 1, "", "solve"]], "reservoirflow.solutions.numerical.FEM": [[338, 3, 1, "", "name"], [339, 2, 1, "", "run"], [340, 2, 1, "", "solve"]], "reservoirflow.solutions.numerical.FVM": [[342, 3, 1, "", "name"], [343, 2, 1, "", "run"], [344, 2, 1, "", "solve"]], "reservoirflow.solutions.numerical.solvers": [[346, 5, 1, "", "get_dsolver"], [347, 5, 1, "", "get_isolver"]], "reservoirflow.utils": [[349, 0, 0, "-", "helpers"], [363, 0, 0, "-", "profme"], [368, 0, 0, "-", "pyvista"]], "reservoirflow.utils.helpers": [[350, 5, 1, "", "fshape_warn"], [351, 5, 1, "", "get_boundary_str"], [352, 5, 1, "", "get_fshape_str"], [353, 5, 1, "", "get_points_str"], [354, 5, 1, "", "get_verbose_str"], [355, 5, 1, "", "intersection"], [356, 5, 1, "", "isin"], [357, 5, 1, "", "ispoints"], [358, 5, 1, "", "issametype"], [359, 5, 1, "", "lru_cache"], [360, 5, 1, "", "reformat"], [361, 5, 1, "", "remove_diag"], [362, 5, 1, "", "shape_error"]], "reservoirflow.utils.profme": [[364, 5, 1, "", "cProfiler"], [365, 5, 1, "", "lProfiler"], [366, 5, 1, "", "profile"], [367, 5, 1, "", "timeit"]], "reservoirflow.utils.pyvista": [[369, 5, 1, "", "add_desc"], [370, 5, 1, "", "add_grid_labels"], [371, 5, 1, "", "add_ruler"], [372, 5, 1, "", "add_title"], [373, 5, 1, "", "add_wells"], [374, 5, 1, "", "align_camera"], [375, 5, 1, "", "decide_widget"], [376, 5, 1, "", "get_annotations"], [377, 5, 1, "", "get_cbar_dict"], [378, 5, 1, "", "get_cdir"], [379, 5, 1, "", "get_colormap"], [380, 5, 1, "", "get_grid_plotter"], [381, 5, 1, "", "get_limits_fmt"], [382, 5, 1, "", "get_model_plotter"], [383, 5, 1, "", "get_model_values"], [384, 5, 1, "", "get_text_locs"], [385, 5, 1, "", "get_window_size"], [386, 5, 1, "", "save_gif"], [387, 5, 1, "", "set_background_color"], [388, 5, 1, "", "set_mode"], [389, 5, 1, "", "set_plotter_backend"], [390, 5, 1, "", "set_plotter_config"], [391, 5, 1, "", "set_text_color"], [392, 5, 1, "", "show_grid"], [393, 5, 1, "", "show_model"]], "reservoirflow.wells": [[395, 1, 1, "", "Directional"], [402, 1, 1, "", "MultiCell"], [409, 1, 1, "", "SingleCell"], [423, 1, 1, "", "Well"]], "reservoirflow.wells.Directional": [[396, 3, 1, "", "factors"], [397, 3, 1, "", "name"], [398, 2, 1, "", "report"], [399, 2, 1, "", "set_units"], [400, 3, 1, "", "unit"], [401, 3, 1, "", "units"]], "reservoirflow.wells.MultiCell": [[403, 3, 1, "", "factors"], [404, 3, 1, "", "name"], [405, 2, 1, "", "report"], [406, 2, 1, "", "set_units"], [407, 3, 1, "", "unit"], [408, 3, 1, "", "units"]], "reservoirflow.wells.SingleCell": [[410, 2, 1, "", "allow_synonyms"], [411, 3, 1, "", "factors"], [412, 3, 1, "", "name"], [413, 2, 1, "", "report"], [414, 2, 1, "", "set_cell_id"], [415, 2, 1, "", "set_constrain"], [416, 2, 1, "", "set_props"], [417, 2, 1, "", "set_q"], [418, 2, 1, "", "set_r"], [419, 2, 1, "", "set_s"], [420, 2, 1, "", "set_units"], [421, 3, 1, "", "unit"], [422, 3, 1, "", "units"]], "reservoirflow.wells.Well": [[424, 3, 1, "", "factors"], [425, 3, 1, "", "name"], [426, 2, 1, "", "report"], [427, 2, 1, "", "set_units"], [428, 3, 1, "", "unit"], [429, 3, 1, "", "units"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "terms": {"": [175, 204, 409, 416, 419, 433, 455, 468, 473, 480, 481, 482, 483, 484, 486, 488, 489, 491, 493], "0": [25, 27, 34, 36, 41, 43, 45, 56, 58, 65, 67, 75, 77, 84, 86, 93, 95, 100, 103, 161, 165, 171, 179, 185, 194, 196, 198, 201, 205, 213, 216, 227, 230, 241, 244, 254, 255, 261, 262, 268, 269, 329, 359, 370, 386, 392, 393, 396, 398, 403, 405, 411, 413, 424, 426, 430, 454, 456, 480, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493], "000": 488, "000000": [486, 489], "000000000000": 486, "00021584": [25, 34, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 491, 492, 493], "001": [492, 493], "001127": [25, 34, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 491, 492, 493], "00303054": 483, "0036": 488, "008": 488, "008139": 489, "01": [454, 484], "01325134": 483, "019": 488, "02": 484, "02037886": 483, "0205196": 483, "025627": 488, "027": 488, "027146": 489, "03": 484, "032614": 489, "04": [484, 486], "047330": 489, "049147": 489, "05": [454, 484, 489], "05192067": 483, "05511461": 483, "055478": 489, "05557125": 483, "057379": 486, "06": 484, "06001966": 483, "06633939": 483, "06887271": 483, "07": [484, 492, 493], "070123": 489, "07218558": 483, "073776": 489, "08": 484, "08335228": 483, "08365124": 483, "0864": [492, 493], "08756958": 483, "08806601": 483, "08914832": 483, "09": [484, 488], "09005221": 483, "095694": 489, "09786664": 483, "0b1": 454, "0b3": [454, 483, 484, 485, 486, 487, 488, 489], "0rc1": 454, "0x0000022a8284a790": 483, "0x0000022afa20a250": 483, "0x22a8284a790": 483, "0x22a82c46f90": 483, "0x22afa20a250": 483, "0x7fd9ca7f3950": 486, "1": [31, 40, 41, 53, 62, 71, 81, 90, 99, 100, 104, 113, 126, 147, 171, 173, 175, 183, 185, 196, 197, 198, 199, 201, 205, 208, 223, 237, 251, 252, 254, 255, 261, 262, 268, 269, 279, 280, 281, 285, 289, 293, 305, 329, 335, 370, 374, 379, 386, 392, 393, 401, 408, 422, 429, 430, 454, 456, 480, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495], "10": [171, 196, 205, 283, 335, 377, 379, 386, 392, 393, 483, 484, 486, 487, 489], "100": [483, 489], "1000": [281, 483, 484, 489], "100000": 488, "100001": 488, "101": [483, 489], "1023": 483, "1024": 483, "1025607": 483, "10297094": 483, "103": 483, "10403": 483, "1047": 483, "106976": 489, "1071": 483, "1072": 483, "1094": 483, "10k": 385, "11": [454, 478, 483, 484, 486], "1100": 489, "1101": 489, "1142": 483, "116": 488, "11615115": 488, "1189": 483, "12": 484, "1211": 483, "1236": 483, "124604": 489, "125": 489, "128": [359, 489], "1283": 483, "12847793": 483, "12856474": 483, "13": [483, 484], "131": 489, "1330": 483, "135": 489, "135552": 489, "1377": 483, "14": [484, 489], "140": 488, "14010934": 488, "141": 489, "1415": 483, "1424": 483, "14464456": 483, "1470": 483, "148": 489, "15": [454, 484, 489], "1517": 483, "154729": 489, "155398": 489, "1563": 483, "157": 489, "157460": 489, "16": 484, "1609": 483, "161155": 489, "1619": 483, "162975": 489, "1654": 483, "167": 483, "168": 483, "169": 483, "17": 484, "170": [483, 489], "1700": 483, "171": 483, "172": 483, "17270485": 483, "173": 483, "174": [25, 34, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 483, 491, 492, 493], "1745": 483, "176": 483, "1790": 483, "17941868": 483, "18": 484, "182": 484, "1835": 483, "183842": 486, "186": 484, "187": 489, "1879": 483, "19": 484, "190252": 489, "1923": 483, "194812": 489, "1967": 483, "197": 484, "198": 484, "199": 484, "1d": [73, 82, 91, 100], "1d1p": [177, 212, 226, 240, 275, 483, 486], "1d2p": [177, 212, 226, 240, 275], "1e": [41, 484, 487, 488], "1k": 385, "1phase": 430, "2": [31, 40, 53, 62, 71, 81, 90, 99, 100, 169, 173, 197, 199, 208, 223, 237, 251, 279, 285, 293, 297, 301, 309, 335, 401, 408, 422, 429, 454, 480, 483, 484, 486, 487, 488, 489, 491, 493, 494, 495], "20": [171, 196, 205, 379, 386, 392, 393, 484, 489], "200": [484, 487, 489], "2000": 484, "200000000": 486, "2002": 473, "201": 484, "2010": 483, "2012": 486, "2012000000000": 486, "2013": [473, 491, 493], "2018": [486, 489], "2019": 473, "202": 484, "2020": 455, "2023": [432, 433, 480, 491], "2024": [0, 455, 461, 462], "2025": [439, 442, 448, 449, 452, 454, 455, 475, 483, 484, 485, 486, 487, 488, 489], "203": 484, "204": 484, "2044": 483, "205": 484, "2053": 483, "20673302": 483, "207": 484, "20774013": 483, "208": 484, "2095": 483, "21": [483, 484], "210": [484, 489], "21268178": 483, "213": 484, "213227": 489, "2138": 483, "216276": 489, "217": 484, "2179": 483, "218": 484, "22": 484, "222": 484, "2221": 483, "22391657": 483, "2262": 483, "227203": 486, "22754443": 483, "23": 484, "2302": 483, "2342": 483, "236949": 489, "2382": 483, "24": 484, "2421": 483, "24279323": 483, "2460": 483, "2498": 483, "249943": 489, "25": [484, 487, 489], "252582": 489, "252778": 489, "2536": 483, "255139": 489, "2573": 483, "25974855": 483, "26": 484, "2609": 483, "261660": 489, "2646": 483, "26575455": 483, "2681": 483, "27": [483, 484, 486, 487, 489], "270": [483, 486, 487], "2716": 483, "27426894": 483, "27499593": 483, "2751": 483, "27771411": 483, "2785": 483, "28": [484, 486], "2819": 483, "283514": 489, "2852": 483, "286692": 489, "287": 483, "2878587085651816e": 489, "2884": 483, "28942927": 483, "29": 484, "2916": 483, "2947": 483, "296354": 489, "2978": 483, "2d": [73, 82, 91, 100], "2k": 385, "3": [31, 40, 53, 62, 71, 73, 81, 82, 90, 91, 99, 100, 102, 106, 137, 142, 143, 144, 145, 153, 164, 173, 197, 199, 208, 223, 237, 251, 279, 289, 301, 305, 309, 313, 355, 356, 357, 359, 360, 374, 401, 408, 422, 429, 454, 455, 478, 483, 484, 486, 487, 488, 489, 491, 493, 494, 495], "30": [374, 484, 489], "300": [483, 486, 489], "3000": 484, "3009": 483, "302823": 489, "3038": 483, "3067": 483, "30826038": 483, "3096": 483, "31": 484, "310305": 486, "311663": 489, "3124": 483, "3152": 483, "3153": 489, "3179": 483, "32": [25, 34, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 484, 491, 492, 493], "3206": 483, "3218": 489, "3232": 483, "3257": 483, "32634094": 483, "3280299082651936e": 484, "3282": 483, "3299": 489, "33": 484, "33055675": 483, "3307": 483, "33257394": 483, "332658": 489, "3331": 483, "3354": 483, "33629191": 483, "3377": 483, "34": 484, "3400": 483, "3402": 489, "3422": 483, "343714": 489, "3443": 483, "3464": 483, "3485": 483, "349563": 489, "35": [484, 489], "350": [483, 486, 489], "3500": 484, "3505": 483, "35181742": 483, "3525": 483, "3536": 489, "3544": 483, "3563": 483, "3582": 483, "36": 484, "3600": 483, "3618": 483, "3635": 483, "36457992": 483, "3652": 483, "3669": 483, "3685": 483, "368821": 489, "37": 484, "3701": 483, "371": 488, "3710": 489, "3717": 483, "37292285": 483, "3732": 483, "3748": 483, "3762": 483, "3777": 483, "378": 473, "37895069": 483, "3791": 483, "379564": 489, "38": 484, "3806": 483, "38122968": 483, "3819": 483, "3833": 483, "3847": 483, "3860": 483, "3873": 483, "3886": 483, "3898": 486, "3899": 483, "39": 484, "3912": 483, "3925": 483, "3926": 486, "3937": 483, "3939": 489, "3947": 486, "3950": 483, "3962": 483, "3968": 486, "3975": 483, "3980": 483, "3981": 483, "3987": 483, "3989": [483, 486], "3993": 483, "3999": 483, "3d": [73, 82, 91, 100, 171, 368, 392], "4": [454, 484, 486, 487, 488, 489], "40": [171, 196, 205, 386, 392, 393, 483, 486, 487, 489], "400": 489, "4000": [198, 483, 486], "4004": 486, "4004000000000": 486, "413677": 489, "413930": 489, "41908228": 483, "42011218": 483, "4245": 489, "43": 483, "4357176": 483, "436768": 486, "43784254": 483, "43871032": 483, "44165879": 483, "446752": 489, "45": [171, 196, 205, 386, 392, 393, 488, 489], "45645378": 483, "457548": 489, "457846": 489, "46244395": 483, "46463971": 483, "4658": 489, "47004598": 483, "47260565": 483, "47882423": 483, "480963": 483, "48540819": 483, "49": 484, "49650699": 483, "4999950000": 488, "4k": 385, "5": [25, 34, 41, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 430, 455, 483, 484, 486, 487, 488, 489, 491, 492, 493], "50": [41, 484, 489], "500": 489, "51": 484, "516126": 489, "51614561": 483, "51759838": 483, "52": 484, "5221": 489, "5262": 489, "52751479": 483, "53": 484, "530464": 489, "5308": 489, "534475": 489, "5359": 489, "537647": 489, "538359": 489, "54": [484, 488], "541": 488, "5417": 489, "54338564": 483, "54516163": 483, "545659262": 488, "54663031": 483, "54830146": 483, "5484": 489, "55": 484, "5510491": 483, "5539152": 483, "55439906": 483, "5559": 489, "556180": 489, "5582216": 483, "56": 486, "5644": 489, "568536641": 488, "5737": 489, "5766415": 483, "5836": 489, "585": 468, "587875": 489, "59": 483, "5931": 489, "598989": 489, "5a28311061bf7ac55cdd": 366, "6": [483, 484, 486, 487, 488, 489], "60": 489, "600": [483, 486, 489], "6000": 489, "600586826583822e": 483, "60118203": 483, "602807272633072e": 483, "6028754": 483, "60756679": 483, "608107": 489, "609491": 489, "61369437": 483, "61458": [492, 493], "614583": [25, 34, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 491], "619775": 489, "62120047": 483, "628510": 489, "63098792": 483, "6350": 489, "6364357": 483, "648972": 489, "65464042": 483, "65616382": 483, "6616": 489, "663": [492, 493], "666351": 489, "67167978": 483, "67829707": 483, "6812": 489, "686": 473, "68835969": 483, "693933882052079e": 486, "6952": 489, "69556269": 483, "69696822": 483, "7": [171, 196, 205, 386, 392, 393, 483, 484, 486, 488, 489], "70": 489, "700": 489, "7049": 489, "707": 473, "708800": 489, "71073286": 483, "710814": 483, "7113": 489, "71263141": 483, "7153": 489, "7173": 489, "7177": 489, "7180": 489, "719752": 489, "723376": 489, "72397729": 483, "729618": 489, "73326543": 483, "73799048": 483, "74371464": 483, "74507944": 483, "748448": 489, "75081996": 483, "763578": 489, "76795192": 483, "76798032": 483, "77079009": 483, "77461681": 483, "77996359": 483, "78071827": 483, "781419": 489, "79351118": 483, "7960529": 483, "79798904": 483, "798192": 489, "8": [483, 484, 486, 489], "80": 489, "800": 489, "8008": 486, "8008000000000": 486, "80418455": 483, "80663": [492, 493], "80906523": 483, "809733": 489, "81227908": 483, "816978": 489, "82266071": 483, "82410116": 483, "8257": 489, "833281": 489, "844343": 489, "85": 486, "8522": 489, "85397407": 483, "86661095": 483, "8669566": 483, "869131": 489, "86923e": [492, 493], "8718": 489, "875955": 489, "879854": 489, "881558": 489, "8858": 489, "886682": 489, "8955": 489, "89928132": 483, "8k": 385, "9": [171, 196, 205, 386, 392, 393, 483, 484, 486, 489, 492, 493], "90": 489, "900": 489, "9020": 489, "9059": 489, "9080": 489, "9083": 489, "9086": 489, "90930155": 483, "910200": 489, "913463": 489, "9160523": 483, "92066447": 483, "927355": 489, "92932079": 483, "932972": 489, "934958": 489, "943214": 489, "944975": 489, "946600": 489, "955378": 489, "9604782": 483, "966863": 489, "967772": 489, "97744994": 483, "9780127999746": [473, 491, 493], "9780973061406": 473, "980": [492, 493], "980573": 489, "986372": 489, "992647": 486, "99488966": 483, "99580221": 483, "996614": 489, "998375": 489, "998988": 489, "999403": 489, "99999998": 483, "99999999": 483, "A": [0, 107, 127, 131, 332, 336, 430, 454, 473, 480, 481, 482, 484, 486, 489], "As": [274, 430, 455, 469, 476, 486, 489, 493], "But": 486, "By": [0, 168, 185, 201, 460, 484, 486, 489, 493], "For": [25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 142, 143, 144, 145, 153, 164, 168, 169, 172, 173, 175, 177, 179, 207, 208, 212, 213, 222, 223, 226, 227, 236, 237, 240, 241, 250, 251, 254, 255, 261, 262, 268, 269, 274, 279, 335, 347, 359, 360, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 439, 449, 454, 460, 468, 476, 478, 484, 486, 489, 491], "If": [0, 27, 36, 45, 58, 67, 77, 86, 95, 102, 113, 126, 137, 142, 143, 144, 145, 153, 164, 165, 168, 169, 171, 175, 192, 194, 196, 204, 205, 216, 230, 244, 260, 335, 336, 347, 356, 359, 360, 370, 375, 386, 390, 392, 393, 398, 405, 413, 426, 445, 447, 454, 455, 468, 476, 478, 484, 486, 487], "In": [100, 161, 168, 169, 171, 177, 196, 205, 212, 226, 240, 317, 379, 386, 392, 393, 439, 449, 454, 455, 461, 468, 476, 480, 483, 484, 485, 486, 487, 489, 491, 493], "It": [0, 185, 468], "NOT": 169, "Of": 486, "On": [454, 489], "Ones": [4, 8, 12, 16, 20], "That": 484, "The": [113, 126, 185, 196, 201, 274, 332, 364, 365, 386, 434, 442, 448, 452, 454, 455, 460, 480, 483, 484, 486, 488, 489, 491, 493], "Then": 489, "There": [196, 274, 386, 446, 455, 476, 484, 489], "These": [0, 100, 252, 274, 368, 440, 451, 469], "To": [0, 185, 201, 335, 454, 457, 460, 476, 484, 486, 489], "With": [0, 476], "_": 486, "__all__": 486, "__builtins__": 486, "__cached__": 486, "__doc__": [195, 206, 217, 221, 231, 235, 245, 249, 486], "__file__": 486, "__loader__": 486, "__name__": 486, "__package__": 486, "__path__": 486, "__spec__": 486, "__version__": [480, 483, 484, 485, 486, 487, 488, 489, 491], "__wrapped__": 359, "_autosummari": [171, 392], "_description_": [131, 178, 182, 329, 332, 333, 335, 336, 360, 486], "_lsprof": 488, "_summary_": [182, 333], "_type_": [178, 182, 332, 333, 357, 360], "a_desc": 489, "a_scal": 489, "ab": [2, 22, 72, 174, 252, 279, 317, 327, 394], "abbrevi": [454, 480, 481, 482, 483, 484, 486, 488, 489], "abc": [3, 23, 73, 224, 267, 276, 423, 479], "abd": 455, "abdulhamid": 455, "abl": [171, 392, 434, 455, 489], "abou": [473, 491, 493], "about": [1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 102, 164, 174, 175, 177, 210, 212, 224, 226, 238, 240, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493, 495], "abov": [484, 489, 491], "abstract": [2, 3, 4, 5, 22, 23, 72, 73, 174, 224, 252, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 283, 284, 287, 288, 291, 292, 295, 296, 299, 300, 303, 304, 307, 308, 311, 312, 315, 316, 317, 320, 321, 325, 326, 327, 339, 340, 343, 344, 394, 423, 479, 483], "abugrin": [0, 1, 432, 439, 442, 448, 449, 452, 454, 455, 461, 462, 463, 475, 480, 483, 484, 485, 486, 487, 488, 489, 491], "abujazia": 455, "academ": [454, 455], "acceler": [0, 25, 31, 34, 40, 43, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 173, 179, 208, 213, 223, 227, 237, 241, 251, 396, 401, 403, 408, 411, 422, 424, 429, 454, 455, 476, 479, 480, 481, 482, 491, 492, 493, 494], "accept": [431, 455, 484, 489], "access": [0, 23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 120, 170, 175, 177, 195, 203, 206, 210, 212, 217, 220, 221, 224, 226, 231, 234, 235, 238, 240, 245, 248, 249, 359, 368, 399, 406, 420, 427, 439, 449, 454, 455, 476, 481, 483, 484, 486, 487, 488, 489, 493], "accord": [0, 479], "account": [100, 434, 476], "accur": [335, 486], "accuraci": 460, "achiev": [0, 252, 454, 455, 461, 479], "across": [157, 158, 159, 160, 161, 162, 254, 255, 261, 262, 268, 269, 460], "action": 454, "activ": [171, 252, 392, 434, 445, 454, 457, 468, 478], "actual": [177, 212, 226, 240, 455, 484, 487, 489], "ad": [100, 171, 175, 185, 196, 205, 317, 370, 386, 392, 393, 440, 441, 450, 451, 457, 469, 474, 484, 486, 487, 489], "adapt": [460, 489], "add": [177, 196, 212, 226, 240, 369, 370, 371, 372, 373, 375, 386, 431, 434, 468, 476, 478, 486, 488, 490], "add_key_ev": [205, 393], "add_mesh": [196, 386], "add_text": [205, 393], "addit": [177, 196, 212, 226, 240, 386, 439, 442, 449, 452, 454, 455, 461, 468, 469, 476, 484, 489], "addition": [0, 327, 468, 476], "adjust": [171, 196, 205, 370, 374, 386, 392, 393], "advanc": [0, 454, 460, 484, 486], "advantag": [0, 485], "advic": 455, "affect": [196, 386, 489], "after": [256, 263, 270, 274, 317, 454, 455, 484, 486], "agil": [470, 472], "ai": [0, 109, 127, 129, 171, 196, 205, 370, 386, 392, 393, 439, 449, 460, 476], "aim": [0, 454, 455, 460], "al": [491, 493], "ali": [473, 491, 493], "align": [374, 457], "all": [0, 23, 27, 32, 36, 41, 45, 54, 58, 63, 67, 73, 77, 82, 86, 91, 95, 100, 102, 106, 111, 137, 143, 144, 145, 153, 157, 158, 159, 160, 161, 162, 165, 168, 169, 175, 181, 185, 192, 194, 197, 201, 204, 210, 216, 224, 230, 238, 244, 274, 331, 398, 405, 413, 426, 454, 455, 457, 483, 484, 486, 488, 489, 491], "allow": [2, 24, 28, 33, 37, 42, 47, 49, 55, 59, 64, 68, 74, 78, 83, 87, 92, 96, 101, 113, 126, 167, 176, 200, 211, 218, 225, 232, 239, 246, 356, 434, 442, 445, 452, 454, 468, 484, 485, 486, 487, 489], "almag": 455, "alongsid": 455, "alpha": [480, 481, 482], "alpha_c": [480, 481, 482], "alreadi": [430, 455], "also": [0, 164, 196, 336, 386, 454, 455, 468, 474, 476, 478, 480, 483, 484, 485, 486, 488, 489, 491], "although": 476, "alwai": [73, 82, 91, 100, 431, 434, 468, 490], "am": [455, 460, 461, 468], "ambit": 430, "an": [0, 3, 23, 73, 100, 106, 115, 120, 121, 137, 142, 143, 144, 145, 146, 153, 164, 168, 169, 171, 205, 224, 267, 274, 276, 277, 278, 279, 283, 284, 287, 288, 291, 292, 295, 296, 299, 300, 303, 304, 307, 308, 311, 312, 315, 316, 320, 321, 325, 326, 339, 340, 343, 344, 347, 360, 375, 390, 392, 393, 423, 440, 451, 454, 455, 468, 474, 476, 483, 484, 486, 487, 489, 493], "analysi": [454, 469], "analyst": [439, 449], "analyt": [0, 177, 212, 226, 240, 274, 275, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 430, 454, 460, 469, 483, 486, 489], "andonian": 455, "andr\u00e1": 455, "angl": [0, 31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "ani": [171, 185, 196, 205, 253, 386, 392, 393, 438, 454, 476, 487, 489], "anisotrop": 157, "annot": [376, 468], "announc": [436, 456, 469, 474, 476], "anoth": 493, "answer": [442, 452], "api": [171, 392, 454, 484, 486, 488], "appear": [196, 386, 484], "appli": [113, 126, 253, 439, 449, 455, 460, 469, 486, 489], "applic": [0, 454, 455, 460, 476, 479], "appreci": [455, 475], "approach": [317, 327, 454, 460, 476], "approv": 457, "ar": [0, 25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 103, 113, 126, 147, 152, 157, 160, 161, 162, 164, 168, 169, 172, 173, 175, 177, 179, 185, 192, 196, 197, 198, 199, 201, 207, 208, 212, 213, 222, 223, 226, 227, 236, 237, 240, 241, 250, 251, 252, 274, 279, 317, 332, 335, 336, 347, 359, 368, 381, 386, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 430, 434, 440, 441, 442, 445, 446, 450, 451, 452, 454, 455, 459, 460, 463, 465, 467, 468, 470, 472, 476, 478, 484, 485, 486, 487, 489, 491, 495], "arang": 489, "area": [31, 40, 53, 62, 71, 81, 90, 99, 107, 108, 109, 110, 127, 128, 129, 130, 173, 208, 223, 237, 251, 401, 408, 422, 429, 442, 452, 480, 481, 482, 491, 493, 494], "argu": 461, "arguabl": [442, 452], "argument": [25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 131, 137, 138, 142, 143, 144, 145, 153, 164, 171, 172, 173, 175, 179, 181, 185, 196, 197, 199, 204, 205, 207, 208, 213, 222, 223, 227, 236, 237, 241, 250, 251, 335, 336, 347, 359, 360, 375, 379, 386, 390, 392, 393, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 484, 486, 487, 491], "arifi": 455, "around": [171, 196, 205, 374, 386, 392, 393, 455], "arr": 361, "arrai": [23, 32, 41, 54, 63, 73, 82, 91, 100, 102, 106, 111, 113, 114, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 156, 164, 166, 168, 169, 175, 181, 187, 210, 224, 238, 254, 255, 256, 259, 260, 261, 262, 263, 266, 268, 269, 270, 273, 355, 356, 360, 376, 381, 483, 484, 486, 487, 489], "arrang": 487, "array_i": 355, "array_x": 355, "art": [317, 455], "artifici": [0, 454, 460], "ask": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "assign": [164, 169, 177, 195, 206, 212, 217, 221, 226, 231, 235, 240, 245, 249, 483, 484, 486, 489], "associ": 455, "atm": [493, 494], "attach": 484, "attack": 0, "attent": [454, 455, 483, 486], "attribut": [6, 10, 14, 18, 23, 25, 29, 30, 31, 32, 34, 38, 39, 40, 41, 43, 51, 52, 53, 54, 56, 60, 61, 62, 63, 65, 69, 70, 71, 73, 75, 79, 80, 81, 82, 84, 88, 89, 90, 91, 93, 97, 98, 99, 100, 103, 145, 153, 168, 170, 172, 173, 175, 179, 203, 207, 208, 210, 213, 220, 222, 223, 224, 227, 234, 236, 237, 238, 241, 248, 250, 251, 253, 260, 267, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 337, 341, 395, 396, 399, 400, 401, 402, 403, 406, 407, 408, 409, 411, 420, 421, 422, 423, 424, 427, 428, 429, 454, 486, 487], "august": 461, "author": [0, 432, 439, 442, 448, 449, 452, 454, 455, 461, 462, 463, 480, 483, 484, 485, 486, 487, 488, 489, 491], "autom": 454, "automat": [100, 102, 164, 489, 493], "avail": [0, 6, 10, 14, 18, 32, 54, 63, 82, 91, 171, 185, 195, 196, 205, 206, 210, 217, 221, 231, 235, 238, 245, 249, 274, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 335, 336, 337, 341, 347, 379, 386, 392, 393, 395, 402, 454, 476, 479, 483, 484, 486, 489], "avoid": 434, "ax": [108, 127, 128, 171, 196, 205, 370, 386, 392, 393], "axi": [254, 255, 261, 262, 268, 269, 378, 489], "ayoub": 455, "az": [110, 127, 130, 171, 196, 205, 370, 386, 392, 393], "azimuth": [171, 196, 205, 374, 380, 382, 386, 392, 393, 487], "aziz": [473, 493], "b": [41, 42, 46, 49, 455, 468, 473, 483, 484, 486, 489], "b1": [473, 493], "b2": [473, 493], "b_g": [480, 481, 482], "b_l": [480, 481, 482], "b_o": [480, 481, 482], "b_w": [480, 481, 482], "bachelor": 455, "back": [100, 169, 256, 263, 270, 484], "backend": [6, 10, 14, 18, 389, 454], "background": [0, 439, 449, 455, 484], "backlog": [468, 470, 472], "balanc": [329, 483, 484, 486, 489], "bar": [171, 196, 205, 377, 386, 392, 393, 493, 494], "base": [0, 2, 3, 6, 10, 14, 18, 22, 23, 25, 27, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 43, 45, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 142, 143, 144, 147, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 185, 194, 196, 199, 203, 204, 205, 207, 208, 210, 212, 213, 216, 220, 222, 223, 224, 226, 227, 230, 234, 236, 237, 238, 240, 241, 244, 248, 250, 251, 252, 253, 255, 259, 260, 262, 266, 267, 269, 273, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 330, 337, 341, 360, 378, 379, 384, 386, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 413, 420, 421, 422, 423, 424, 426, 427, 428, 429, 454, 457, 460, 476, 479, 484, 486, 487, 489], "base_cel": [196, 386], "bash": 478, "basic": [0, 279, 454, 479], "bat": 478, "bayoud": 455, "bbl": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "bdict": 198, "beauti": 455, "becaus": [175, 484, 489], "been": [455, 469, 476], "befor": [254, 255, 259, 261, 262, 266, 268, 269, 273, 279, 360, 442, 452, 483, 484, 486, 489], "behavior": [253, 442, 452, 484, 489], "behind": [0, 439, 449, 455, 485], "believ": [439, 449, 455], "belov": 476, "below": [279, 347, 430, 431, 445, 454, 469, 476, 478, 484, 486, 489, 490], "benchmark": [2, 454], "benefit": [439, 449, 454, 455, 476], "best": [0, 455, 476, 479], "beta": [454, 480, 481, 482], "beta_c": [480, 481, 482], "better": [0, 106, 137, 142, 143, 144, 145, 153, 177, 212, 226, 240, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 337, 341, 360, 445, 454, 479, 489], "between": [171, 196, 201, 205, 252, 355, 370, 384, 386, 392, 393, 454, 455, 461, 489], "beyond": [0, 489], "bhfp": [204, 484], "bicg": [335, 336, 347, 486], "bicgstab": [335, 336, 347, 486], "big": 455, "bigger": [442, 452, 455], "bin": 468, "birger": 455, "black": [439, 442, 449, 452, 454, 455, 484], "black_oil": 486, "blackoil": [430, 483, 484, 486, 489], "bless": 455, "blog": [433, 435], "blue": [171, 196, 205, 386, 392, 393, 484], "book": [442, 452, 455], "bool": [23, 27, 32, 36, 41, 45, 54, 58, 63, 67, 73, 77, 82, 86, 91, 95, 100, 102, 105, 111, 115, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 171, 175, 177, 181, 182, 183, 184, 185, 188, 194, 196, 205, 210, 212, 216, 224, 226, 230, 238, 240, 244, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 329, 332, 333, 335, 336, 337, 341, 360, 364, 365, 369, 370, 375, 386, 389, 390, 392, 393, 398, 405, 413, 426, 486], "boolean": [356, 357], "boost": 489, "boot": 445, "both": [0, 23, 25, 29, 30, 31, 32, 34, 38, 39, 40, 41, 43, 51, 52, 53, 54, 56, 60, 61, 62, 63, 65, 69, 70, 71, 73, 75, 79, 80, 81, 82, 84, 88, 89, 90, 91, 93, 97, 98, 99, 100, 103, 164, 170, 172, 173, 175, 179, 203, 207, 208, 210, 213, 220, 222, 223, 224, 227, 234, 236, 237, 238, 241, 248, 250, 251, 396, 399, 400, 401, 403, 406, 407, 408, 411, 420, 421, 422, 424, 427, 428, 429, 468, 476, 484, 489, 491], "bottom": [100, 204, 484, 487, 489], "bound": 359, "boundari": [0, 100, 102, 105, 106, 111, 113, 115, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 168, 169, 171, 181, 182, 183, 184, 185, 186, 188, 196, 197, 198, 199, 205, 209, 224, 317, 351, 354, 369, 370, 380, 382, 383, 386, 392, 393, 486, 487], "box": [439, 442, 449, 452, 454], "branch": [457, 468], "breakthrough": 0, "brew": [442, 452], "bring": [0, 439, 444, 449, 454, 468], "bug": [468, 476], "build": [131, 177, 212, 226, 240, 274, 455, 476, 477, 480, 481, 483, 485, 487], "built": [105, 135, 136, 327, 489], "b\u00e4nsch": 455, "c": [480, 481, 482, 483], "cach": [113, 126, 359], "cache_clear": 359, "cache_info": 359, "cache_replacement_polici": 359, "calcul": [102, 105, 135, 136, 164, 335, 486], "call": [359, 455, 461, 483, 486], "callback": [205, 393], "came": 455, "camera": [171, 196, 205, 374, 378, 386, 392, 393], "camp": 445, "can": [0, 3, 23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 120, 168, 170, 171, 175, 177, 185, 195, 196, 201, 203, 205, 206, 210, 212, 217, 220, 221, 224, 226, 231, 234, 235, 238, 240, 245, 248, 249, 260, 267, 276, 279, 336, 359, 386, 392, 393, 394, 399, 406, 420, 423, 427, 434, 439, 441, 442, 446, 449, 450, 452, 454, 455, 457, 468, 469, 478, 480, 483, 484, 486, 487, 488, 489, 491, 493], "capabl": 454, "capac": 479, "captur": 454, "carbon": 454, "card": [454, 495], "career": [439, 449], "carefulli": 454, "carri": 454, "cartesian": [192, 430, 487], "case": [73, 82, 91, 100, 102, 164, 168, 169, 171, 196, 205, 260, 279, 379, 386, 392, 393, 431, 476, 484, 489, 491], "categori": [461, 480, 491], "caus": [113, 115, 120, 121, 126, 196, 224, 386], "cbar": [171, 196, 205, 382, 386, 392, 393], "cc": 454, "cd": [468, 478], "cdir": 374, "cell": [100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 164, 168, 169, 171, 181, 182, 185, 188, 192, 196, 198, 199, 204, 205, 330, 331, 332, 370, 373, 386, 392, 393, 479, 483, 484, 489], "cell_b_id": 199, "cell_coord": 181, "cell_id": [181, 204, 330, 409, 414, 416, 484, 486, 489], "cells_id": [484, 487], "cells_pressur": [185, 483], "cells_rat": 185, "center": [114, 136, 171, 196, 205, 370, 373, 386, 392, 393], "central": [0, 171, 196, 205, 374, 386, 392, 393, 454], "ceoffici": 175, "cg": [335, 336, 347, 483, 486, 489], "challeng": [0, 437, 439, 449, 454, 455], "chang": [169, 175, 185, 201, 224, 439, 449, 468, 484, 493], "check": [0, 25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 102, 103, 106, 137, 142, 143, 144, 145, 153, 157, 158, 159, 160, 161, 162, 164, 172, 173, 175, 177, 179, 207, 208, 212, 213, 222, 223, 226, 227, 236, 237, 240, 241, 250, 251, 274, 329, 335, 347, 356, 357, 360, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 454, 468, 479, 484, 486, 489], "check_mb": [283, 335, 336, 483, 486], "checkout": 468, "chemistri": [439, 449], "choic": 476, "choos": [171, 196, 205, 379, 386, 392, 393, 484], "citat": [455, 475], "class": [2, 3, 6, 10, 14, 18, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 103, 120, 163, 165, 170, 172, 173, 174, 175, 179, 191, 194, 200, 203, 204, 207, 208, 210, 213, 215, 216, 218, 220, 222, 223, 224, 227, 229, 230, 232, 234, 236, 237, 238, 241, 243, 244, 246, 248, 250, 251, 252, 253, 257, 260, 264, 267, 271, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 368, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 455, 479, 484, 486, 489, 493], "class_unifi": 350, "classif": 461, "classifi": 461, "clean": [281, 455, 468], "cleans": 0, "clear": [359, 454, 490], "click": [447, 457], "clickabl": [454, 495], "clim": [196, 386], "clone": 468, "close": [439, 449, 454], "cloud": 454, "cm": [379, 493, 494], "cmap": [171, 196, 205, 379, 380, 382, 386, 392, 393, 484], "cmd": 478, "co_2": [442, 452, 454, 455], "code": [0, 437, 439, 449, 454, 455, 457, 469, 474, 484, 486, 489, 490], "coder": [439, 449], "coeffici": 131, "coffe": [442, 452], "colab": 484, "colab_id": 457, "collabor": [0, 434, 445, 454, 455, 458, 459, 464, 465, 466, 467, 474, 476, 495], "colleagu": 455, "collect": [468, 470, 472], "color": [171, 196, 205, 377, 379, 386, 387, 391, 392, 393, 484], "colormap": [171, 196, 205, 379, 386, 392, 393, 484], "column": [185, 252, 254, 255, 261, 262, 268, 269, 483, 484, 489], "com": [0, 366, 454, 468], "combin": [0, 147, 442, 452, 454, 455, 479, 484, 486, 489, 490], "come": [439, 442, 449, 452, 455, 476, 485, 486], "command": [468, 478], "comment": [435, 454], "commerci": [0, 439, 442, 449, 452, 454, 476], "commit": [454, 468, 476], "common": [196, 355, 386, 442, 452, 454], "commun": [0, 434, 437, 439, 441, 443, 444, 445, 447, 449, 450, 451, 454, 455, 460, 476], "comp": [24, 28, 33, 37, 41, 47, 49, 55, 59, 64, 68, 74, 78, 83, 87, 92, 96, 100, 167, 169, 200, 211, 218, 225, 232, 239, 246, 480, 481, 482, 483, 484, 487, 489], "comp_typ": [24, 33, 55, 64, 74, 83, 92, 211, 225, 239], "compani": [0, 437, 454, 455, 457, 474, 495], "compar": [454, 476, 483, 484, 486, 489], "compat": [120, 461], "compet": [442, 452, 476], "competit": 437, "compil": [195, 206, 217, 221, 231, 235, 245, 249, 274, 317, 483, 490], "complet": 100, "complex": [279, 442, 452, 460, 468], "compli": 484, "complic": [442, 452], "compon": [100, 454], "composit": [430, 469, 484], "comprehens": 0, "compress": [24, 28, 31, 33, 37, 40, 41, 47, 49, 53, 55, 59, 62, 64, 68, 71, 74, 78, 81, 83, 87, 90, 92, 96, 99, 100, 167, 169, 173, 200, 208, 211, 218, 223, 225, 232, 237, 239, 246, 251, 401, 408, 422, 429, 430, 479, 480, 481, 482, 491, 493, 494], "compressibility_typ": [24, 33, 55, 64, 74, 83, 92, 211, 225, 239], "comput": [0, 2, 177, 212, 226, 240, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 327, 328, 337, 341, 430, 439, 442, 449, 452, 454, 455, 460, 473, 479, 486, 489], "concaten": 489, "concept": [0, 455, 486], "concurr": [332, 430], "cond": [197, 198, 199, 484], "condit": [197, 198, 199, 224, 317, 434], "conduct": [460, 469, 474], "configur": [201, 377, 390, 484, 489], "confirm": 279, "consequ": 100, "consid": [279, 454, 461, 476, 489], "consist": [73, 82, 91, 100], "constant": [197, 199, 480, 481, 482, 484], "constrain": [409, 415, 416], "construct": [3, 6, 10, 14, 18, 23, 32, 54, 63, 73, 82, 91, 210, 224, 238, 253, 260, 267, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 337, 341, 484], "consult": 476, "contain": [102, 147, 185, 345, 348, 357, 454, 477, 481], "content": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "continu": [0, 196, 279, 386, 455, 474], "contrast": [317, 454], "contribut": [0, 439, 449, 457, 460, 474, 476], "contributor": 474, "control": [196, 386], "convent": [161, 430, 483, 484, 486, 488, 489], "convers": [25, 31, 34, 40, 43, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 173, 179, 208, 213, 223, 227, 237, 241, 251, 396, 401, 403, 408, 411, 422, 424, 429, 479, 480, 481, 482, 491, 492, 493, 494], "convert": [120, 356, 373, 469, 493], "coord": [102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 143, 148, 164, 166, 168, 169, 171, 181, 196, 205, 356, 370, 386, 392, 393, 487], "coordin": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 181], "copyright": 454, "core": 430, "corner": [146, 171, 380, 392, 484, 487], "correctli": 164, "correspond": [198, 274, 486, 489], "cost": [454, 476], "could": [455, 460, 476], "count": 484, "cours": 486, "cover": 454, "cp": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "cpo": [205, 393], "cprofil": 488, "cprofiler_": 364, "creat": [0, 41, 100, 120, 146, 175, 224, 328, 394, 454, 468, 478, 486, 489], "create_model": [483, 486, 489], "creation": 0, "creativ": 454, "credit": [455, 475], "cross": [107, 108, 109, 110, 127, 128, 129, 130], "csv": [185, 364, 365], "cumsum": 483, "cumtim": [364, 488], "cup": [442, 452], "current": [152, 185, 201, 364, 365, 454, 484, 487, 489], "curriculum": 476, "currsiz": 359, "custom": 454, "cut": 0, "cycl": 0, "d": [101, 104, 116, 332, 336, 369, 454, 476, 484], "d1p1": [279, 430, 469, 483], "d1p2": [279, 469], "d1p3": [279, 469], "d2p1": [279, 469], "d2p2": [279, 469], "d2p3": [279, 469], "d3p1": [279, 469], "d3p2": [279, 469], "d3p3": [279, 469], "dai": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 455, 484, 489, 491, 493, 494], "daili": [442, 452], "darci": [493, 494], "dark": [388, 442, 452, 484], "data": [0, 23, 32, 41, 54, 63, 73, 82, 91, 100, 102, 106, 164, 175, 185, 210, 224, 238, 252, 253, 260, 356, 357, 360, 439, 449, 454, 455, 476, 479], "datafram": [185, 364, 365, 489], "date": [175, 185, 432, 439, 442, 448, 449, 452, 454, 455, 461, 462, 480, 483, 484, 485, 486, 487, 488, 489, 491], "datefram": [484, 489], "dd": 454, "deal": [442, 452, 487], "debug": [23, 32, 41, 54, 63, 73, 82, 91, 100, 171, 175, 210, 224, 238, 392, 430], "decad": [442, 452], "decemb": 480, "decid": [175, 375, 455, 484, 489], "decor": [113, 126, 359, 364, 365, 366], "dedic": [431, 435, 441, 447, 450, 456, 457, 470, 474, 476, 478], "deep": [317, 318, 431, 454, 455, 468, 473], "deepli": [442, 452], "deeponet": [177, 212, 226, 240, 275, 317, 454, 469], "def": [205, 393, 483, 486, 488, 489], "default": [25, 27, 30, 31, 34, 36, 39, 40, 43, 45, 52, 53, 56, 58, 61, 62, 65, 67, 70, 71, 75, 77, 80, 81, 84, 86, 89, 90, 93, 95, 98, 99, 100, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 165, 168, 169, 172, 173, 177, 179, 185, 194, 201, 207, 208, 212, 213, 216, 222, 223, 226, 227, 230, 236, 237, 240, 241, 244, 250, 251, 254, 255, 261, 262, 268, 269, 274, 275, 328, 396, 398, 400, 401, 403, 405, 407, 408, 411, 413, 421, 422, 424, 426, 428, 429, 484, 486, 489, 493], "defaultdict": 486, "defin": [25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 72, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 103, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 153, 168, 169, 171, 172, 173, 175, 177, 179, 196, 204, 205, 207, 208, 212, 213, 222, 223, 226, 227, 236, 237, 240, 241, 250, 251, 381, 386, 392, 393, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 479, 480, 487, 489, 491], "definit": [25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 103, 172, 173, 175, 179, 207, 208, 213, 222, 223, 227, 236, 237, 241, 250, 251, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429], "degre": 455, "delai": 455, "delet": 434, "delight": 460, "demonstr": [0, 460], "dens": 332, "densiti": [31, 40, 41, 42, 49, 50, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 484, 491, 493, 494], "depart": [455, 476], "depend": [439, 449, 484, 491], "deploi": 454, "deprec": 468, "depth": [100, 169], "deriv": 485, "desc": [171, 196, 205, 380, 382, 386, 392, 393], "descal": [252, 489], "describ": [0, 479], "descript": [24, 33, 42, 55, 64, 74, 83, 92, 101, 176, 211, 225, 239, 369], "deserv": 461, "design": [2, 22, 72, 174, 252, 279, 317, 327, 394, 454, 455, 468], "desir": [113, 126, 254, 255, 261, 262, 268, 269, 483], "detail": [25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 103, 172, 173, 175, 179, 207, 208, 213, 222, 223, 227, 236, 237, 241, 250, 251, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 434, 442, 452, 454, 455, 485], "develop": [0, 1, 178, 439, 449, 454, 455, 460, 468, 474, 480, 481, 484, 489, 490, 493], "df": [483, 484], "diag_1": 133, "diag_2": 134, "diag_n": 183, "dict": [25, 31, 34, 40, 43, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 113, 126, 164, 173, 179, 198, 201, 208, 213, 223, 227, 237, 241, 251, 360, 376, 377, 396, 401, 403, 408, 411, 422, 424, 429, 483], "dict_kei": [480, 491], "dictionari": [198, 377, 484, 486, 489], "differ": [0, 2, 327, 328, 359, 430, 442, 452, 454, 455, 460, 461, 476, 479, 484, 486, 489], "differenti": [0, 460, 461, 473, 479], "difficult": [439, 449], "dim": [113, 126], "dimens": [72, 100, 101, 104, 147, 201, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 369, 489], "dimension": [138, 487, 489], "dimensionless": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "diment": 430, "dir": [107, 111, 116, 122, 127, 138, 145, 181, 364, 365, 486], "direct": [73, 82, 91, 100, 107, 113, 116, 122, 123, 124, 125, 126, 127, 138, 147, 148, 169, 171, 196, 205, 335, 336, 345, 347, 368, 369, 374, 378, 386, 392, 393, 430, 469, 479, 484, 486, 489], "directli": [0, 23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 170, 175, 203, 210, 220, 224, 234, 238, 248, 399, 406, 420, 427, 454, 468, 478, 486], "directori": 478, "disabl": [359, 488], "discret": [196, 327, 386], "discuss": [434, 440, 441, 443, 450, 451, 454, 455], "distinct": 359, "distribut": [171, 196, 205, 379, 386, 392, 393, 454, 484], "dive": 468, "divers": [0, 460], "do": [171, 392, 434, 439, 440, 449, 451, 455, 469, 476, 487], "doc": [171, 392, 486], "documen": 454, "document": [1, 171, 177, 195, 205, 206, 212, 217, 221, 226, 231, 235, 240, 245, 249, 274, 375, 389, 390, 392, 393, 434, 454, 457, 468, 469, 480, 483, 484, 486, 487, 488, 489], "doe": [253, 454, 486, 489], "domain": 317, "dot": 336, "doubl": [23, 32, 41, 54, 63, 73, 82, 91, 100, 175, 210, 224, 238, 483, 486, 489], "down": 169, "download": [468, 478], "dr": 455, "drawn": 455, "dream": 455, "drill": [442, 452], "driven": [440, 451, 476], "drop": 185, "drop_nan": 185, "drop_zero": 185, "dt": [175, 185, 483, 484, 486, 489], "dtype": [23, 32, 41, 54, 63, 73, 82, 91, 100, 102, 164, 175, 210, 224, 238, 479, 483, 486, 489], "due": [113, 126, 224, 335, 336, 347, 439, 449, 455, 486], "dummi": 430, "durat": [175, 484], "dure": 455, "duti": 476, "dx": [100, 117, 138, 139, 160, 162, 171, 196, 205, 370, 386, 392, 393, 483, 484, 486, 487, 489], "dy": [100, 118, 138, 140, 160, 162, 171, 196, 205, 370, 386, 392, 393, 483, 484, 486, 487, 489], "dz": [100, 119, 138, 141, 160, 162, 171, 196, 205, 370, 386, 392, 393, 483, 484, 486, 487, 489], "e": [0, 100, 102, 113, 115, 120, 121, 126, 148, 164, 171, 177, 196, 198, 201, 205, 212, 226, 240, 252, 253, 254, 255, 260, 261, 262, 268, 269, 274, 279, 317, 356, 357, 379, 386, 392, 393, 430, 434, 437, 439, 441, 442, 449, 450, 452, 454, 455, 460, 468, 473, 474, 476, 477, 480, 481, 482, 484, 486, 487, 489, 491, 493], "each": [73, 82, 91, 100, 175, 260, 274, 445, 484, 486, 489], "easi": [442, 452, 455, 468], "easier": [439, 449], "easili": [439, 449, 468, 493], "eberhard": 455, "eclips": 469, "ecosystem": [0, 454, 455, 478], "edg": 0, "educ": [0, 454, 476], "effect": [100, 479], "effici": [0, 252, 317, 430, 442, 452, 460, 461, 468], "either": [106, 161, 254, 261, 268, 489], "element": [327, 337, 479], "elev": [171, 196, 205, 374, 380, 382, 386, 392, 393], "elhajjaji": 455, "ellsaess": 455, "els": 483, "elsevi": [473, 491, 493], "emad": [0, 455], "emerg": 455, "emiss": [442, 452, 454, 455], "empow": [439, 449, 454], "empti": [458, 464, 466, 486], "en": 359, "enabl": 0, "encompass": 0, "encourag": [431, 437, 476, 490], "energi": [454, 476], "engag": [434, 437, 460], "engin": [0, 1, 440, 442, 451, 452, 454, 455, 468, 474, 475, 476, 479], "english": 455, "enhanc": [454, 455, 460, 468], "enough": [0, 455, 469, 476], "enthusiast": 0, "entir": [131, 430], "environ": [0, 468], "environment": 454, "eo": [454, 469], "eor": [454, 455], "equal": [100, 168, 169, 254, 255, 261, 262, 268, 269], "equat": [0, 177, 212, 226, 240, 327, 330, 331, 332, 345, 430, 454, 460, 461, 473, 479, 481, 485, 489, 495], "err": [480, 481, 482], "error": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 335, 336, 347, 401, 408, 422, 429, 476, 479, 480, 481, 482, 483, 484, 486, 489, 491, 493, 494], "error_threshold": 329, "especi": [0, 196, 386, 439, 449, 454, 455, 475, 476, 479, 489], "espresso": [442, 452], "essenti": [131, 442, 452, 474, 487], "establish": 279, "et": [491, 493], "etc": [177, 212, 226, 240, 275, 434, 439, 449, 454, 457, 484], "eval": 483, "evalu": [279, 454], "even": [196, 386, 442, 452, 476], "event": [435, 455], "everi": [485, 486], "everybodi": [439, 449], "everyon": [0, 442, 452, 454, 476], "exact": 279, "examin": 455, "exampl": [41, 279, 359, 439, 449, 454, 455, 483, 484, 491], "exce": [171, 196, 205, 379, 386, 392, 393], "excel": 468, "except": [171, 196, 204, 205, 386, 392, 393, 454], "exchang": 0, "excit": [439, 447, 449, 455], "exclud": [100, 487], "execut": [454, 478], "exist": 476, "exp": 483, "expand": 476, "expect": [454, 460, 468, 484, 489], "experi": [0, 430, 431, 476], "experienc": 455, "explain": 455, "explan": 490, "explicit": [146, 454], "explicitli": 486, "explicitstructuredgrid": 154, "export": 469, "express": [439, 449, 484], "extend": [0, 454, 455], "extens": [196, 386], "extract": 102, "extract_boundari": 164, "extract_cel": [196, 373, 386], "extrapol": 454, "extrem": 455, "f": [359, 377, 381, 483], "f_comp": 483, "face": [181, 439, 449, 476], "facilit": 0, "fact": [442, 452], "factor": [23, 29, 30, 31, 32, 38, 39, 40, 41, 46, 49, 51, 52, 53, 54, 60, 61, 62, 63, 69, 70, 71, 73, 79, 80, 81, 82, 88, 89, 90, 91, 97, 98, 99, 100, 111, 131, 170, 172, 173, 175, 203, 204, 207, 208, 210, 220, 222, 223, 224, 234, 236, 237, 238, 248, 250, 251, 399, 400, 401, 406, 407, 408, 420, 421, 422, 427, 428, 429, 479, 480, 481, 482, 484, 492, 494, 495], "fail": [274, 455, 486], "fals": [41, 73, 82, 91, 100, 102, 105, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 171, 175, 181, 182, 183, 184, 185, 190, 196, 205, 281, 283, 329, 331, 332, 333, 335, 336, 356, 357, 359, 364, 365, 375, 386, 390, 392, 393, 483, 484, 486, 487, 488, 489], "famili": 455, "familiar": [439, 449], "fancy_grid": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "far": [196, 386, 474], "farouq": [473, 491, 493], "fashion": 252, "faster": 100, "father": 455, "fau": [455, 460], "fdir": [147, 185, 369], "fdm": [177, 212, 226, 240, 274, 275, 327, 430, 479, 483, 484, 486, 489], "featur": [100, 254, 255, 260, 261, 262, 268, 269, 359, 454, 468, 469, 474, 476, 489], "feedback": [476, 484], "feel": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "fem": [177, 212, 226, 240, 275, 327, 469, 479, 486], "few": [454, 455], "fhd": 385, "field": [0, 23, 25, 29, 30, 31, 32, 34, 38, 39, 40, 41, 43, 51, 52, 53, 54, 56, 60, 61, 62, 63, 65, 69, 70, 71, 73, 75, 79, 80, 81, 82, 84, 88, 89, 90, 91, 93, 97, 98, 99, 100, 103, 170, 172, 173, 175, 179, 203, 207, 208, 210, 213, 220, 222, 223, 224, 227, 234, 236, 237, 238, 241, 248, 250, 251, 317, 396, 399, 400, 401, 403, 406, 407, 408, 411, 420, 421, 422, 424, 427, 428, 429, 442, 452, 454, 455, 460, 484, 487, 491, 492, 493, 494], "fight": 455, "file": [185, 196, 364, 365, 386, 457, 468, 483, 488], "file_nam": [196, 386, 484], "filenam": 488, "fill": [151, 156, 447, 457], "final": 455, "find": [279, 355, 454], "fine": 476, "finish": [469, 483, 484, 486, 489], "finit": [327, 328, 337, 341, 430, 479, 484, 489], "first": [171, 196, 386, 392, 434, 436, 448, 454, 455, 458, 464, 466, 484, 489], "fit": [255, 262, 269, 317, 486, 489], "fit_transform": 489, "five": [454, 490], "fix": [476, 493], "flat": 487, "flatten": [100, 102, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 156, 164, 168, 336, 355, 357, 360], "float": [28, 37, 41, 46, 47, 48, 49, 50, 59, 68, 78, 87, 96, 100, 105, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 122, 123, 124, 125, 167, 168, 169, 171, 196, 197, 199, 200, 204, 205, 218, 232, 246, 329, 370, 374, 379, 384, 386, 392, 393], "flood": 430, "florian": 455, "flow": [0, 31, 40, 53, 62, 71, 72, 73, 81, 82, 90, 91, 99, 100, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 156, 169, 173, 204, 208, 223, 224, 237, 251, 331, 332, 369, 378, 401, 408, 422, 429, 442, 452, 454, 455, 460, 479, 480, 481, 482, 484, 487, 489, 491, 493, 494], "flow_shap": 101, "fluid": [0, 32, 41, 54, 63, 169, 175, 200, 218, 224, 232, 246, 430, 439, 442, 449, 452, 454, 455, 460, 479, 483, 486, 489, 491, 493], "fmt": [102, 106, 113, 126, 137, 142, 143, 144, 145, 153, 355, 358, 360, 377, 484, 487], "focal": [171, 196, 205, 374, 386, 392, 393], "focus": [442, 452, 455, 460, 461], "folder": [468, 478], "follow": [24, 27, 33, 36, 42, 45, 55, 58, 64, 67, 74, 77, 83, 86, 92, 95, 101, 165, 176, 177, 185, 194, 195, 201, 206, 211, 212, 216, 217, 221, 225, 226, 230, 231, 235, 239, 240, 244, 245, 249, 275, 336, 398, 405, 413, 426, 434, 454, 455, 468, 470, 472, 474, 475, 476, 478, 480, 483, 484, 486, 487, 489, 491], "forc": 317, "fork": [468, 469], "form": [279, 445, 447, 455, 457, 484], "format": [27, 31, 36, 40, 41, 45, 46, 49, 53, 58, 62, 67, 71, 77, 81, 86, 90, 95, 99, 102, 106, 113, 126, 137, 142, 143, 144, 145, 153, 165, 173, 194, 201, 208, 216, 223, 230, 237, 244, 251, 355, 360, 377, 381, 398, 401, 405, 408, 413, 422, 426, 429, 431, 454, 479, 480, 481, 482, 484, 491, 493, 494], "formation_volume_factor": 42, "forum": 435, "forward": [441, 445, 450, 454, 455, 473], "foster": 455, "found": [0, 454, 478, 487], "fp": [196, 386], "fraction": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "frame": [196, 386, 470], "framework": [2, 454, 460, 473], "frankfurt": 455, "free": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "freeli": [0, 454], "friend": 455, "friendli": 454, "from": [0, 23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 102, 113, 120, 126, 137, 142, 143, 144, 145, 153, 164, 168, 169, 170, 175, 177, 192, 201, 203, 210, 212, 220, 224, 226, 234, 238, 240, 248, 260, 274, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 337, 341, 360, 369, 370, 371, 372, 373, 374, 378, 379, 390, 399, 406, 420, 427, 430, 439, 442, 449, 452, 454, 455, 468, 474, 476, 478, 479, 484, 486, 487, 488, 493], "front": [100, 169, 484], "frustrat": 455, "fshape": [101, 102, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 156, 164, 168, 352, 354, 362, 487], "fshpae": 479, "ft": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "full": [24, 33, 42, 55, 64, 74, 83, 92, 101, 176, 211, 225, 239], "fulli": [100, 169, 171, 196, 205, 370, 386, 392, 393, 454, 455], "fun": 455, "func": [366, 367, 488], "func_unifi": 350, "function": [24, 33, 42, 49, 55, 64, 74, 83, 92, 101, 102, 164, 171, 176, 177, 196, 205, 211, 212, 225, 226, 239, 240, 252, 317, 345, 349, 356, 359, 363, 368, 386, 392, 393, 454, 469, 474, 484, 486, 488, 489], "function_nam": [364, 365], "fundament": 461, "further": [454, 455], "furthermor": 455, "futur": [0, 279, 317, 445, 454, 468, 476, 484, 487, 493], "fvf": [42, 46], "fvfg": [480, 481, 482], "fvfl": [480, 481, 482], "fvfo": [480, 481, 482], "fvfw": [480, 481, 482], "fvm": [177, 212, 226, 240, 275, 327, 469, 479, 486], "g": [0, 42, 100, 102, 111, 113, 115, 120, 121, 126, 131, 148, 164, 169, 171, 177, 181, 196, 197, 198, 199, 201, 205, 212, 226, 240, 252, 260, 274, 279, 356, 379, 386, 392, 393, 434, 454, 455, 480, 481, 482, 486, 489, 491, 493, 494], "g_comp": 483, "ga": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 439, 442, 449, 452, 454, 455, 479, 480, 481, 482, 491, 493, 494], "gamma": [171, 196, 205, 379, 380, 382, 386, 392, 393, 480, 481, 482], "gamma_c": [480, 481, 482], "gamma_p": [480, 481, 482], "ganzer": 455, "gap": 455, "garden": [442, 452], "gcrotmk": [335, 336, 347, 486], "gener": [0, 443, 460, 468, 484], "geologi": [439, 449], "geometr": [111, 131], "geometri": [73, 484], "georg": 473, "germani": 455, "get": [153, 373, 376, 377, 378, 379, 381, 385, 439, 442, 449, 452, 454, 457, 476, 495], "get_boundari": 484, "get_cells_eq": 486, "get_cells_i": [196, 386], "get_cells_id": 487, "get_d": 101, "get_df": [483, 484, 486, 489], "get_dimens": 101, "get_flow_shap": 101, "get_fshap": 101, "get_matrices_symb": 486, "get_matrices_vect": 486, "get_pyvista_grid": 373, "get_window_s": 484, "getcent": 373, "gif": [196, 386], "gird": [73, 82, 91, 100, 152, 154, 188, 487], "gist": 366, "git": 468, "github": [1, 366, 434, 457, 468, 476], "give": [0, 455, 475, 476, 489], "given": [204, 454, 455, 484], "glad": 455, "global": [480, 491], "glossari": [25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 75, 80, 81, 84, 89, 90, 93, 98, 99, 100, 103, 172, 173, 175, 179, 207, 208, 213, 222, 223, 227, 236, 237, 241, 250, 251, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 495], "gmre": [335, 336, 347, 486], "go": [455, 475], "goal": [454, 455, 470, 472], "god": 455, "good": 476, "googl": 433, "gor": [480, 481, 482], "got": 455, "govern": 0, "gpu": [430, 454], "grad": [197, 199], "gradient": [197, 199], "grai": 484, "graph": [171, 196, 205, 386, 392, 393], "gravit": [25, 31, 34, 40, 43, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 173, 179, 208, 213, 223, 227, 237, 241, 251, 396, 401, 403, 408, 411, 422, 424, 429, 479, 480, 481, 482, 491, 492, 493, 494], "graviti": [25, 31, 34, 40, 42, 43, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 173, 179, 208, 213, 223, 227, 237, 241, 251, 396, 401, 403, 408, 411, 422, 424, 429, 479, 480, 481, 482, 491, 492, 493, 494], "great": [0, 439, 445, 449, 455], "green": 455, "gregori": 455, "grid": [82, 91, 100, 175, 185, 196, 200, 205, 218, 232, 246, 368, 370, 373, 378, 380, 386, 392, 393, 430, 479, 483, 486, 489, 490, 491, 493], "grid_anim": [196, 386, 484], "grid_pv": [196, 386], "groundbreak": 0, "grow": [359, 476], "growth": 454, "guid": [454, 468, 485], "guidelin": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 435, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "gymnast": 461, "h": [473, 491, 493], "ha": [260, 274, 434, 439, 449, 455, 471, 476, 486, 491, 493], "hackathon": [0, 437, 476], "hagemann": 455, "half": 332, "hand": [0, 454, 455, 489], "handl": 460, "happen": [442, 452], "happi": [431, 455, 490], "hard": 455, "hardwar": 454, "harm": 434, "hashabl": 359, "hashtag": 476, "have": [0, 196, 274, 386, 439, 440, 442, 449, 451, 452, 455, 460, 469, 470, 472, 474, 476, 484, 486, 489, 491], "hd": [385, 484], "head": 476, "hello": 434, "help": [195, 206, 217, 221, 231, 235, 245, 249, 442, 452, 455, 476, 483, 486, 490, 495], "helper": [102, 106, 137, 142, 143, 144, 145, 153, 164], "henc": [442, 452], "her": 455, "here": [433, 437, 438, 440, 441, 446, 450, 451, 454, 457, 469, 476, 484], "hero": 455, "heterogen": 158, "hi": 455, "hiesab": [0, 1, 454, 455, 475, 476], "hiesabx": 468, "high": [0, 335, 336, 347, 430, 454, 476, 486, 490], "higher": [104, 147, 196, 204, 386, 484], "highest": 0, "highli": [455, 475], "him": 455, "hint": 468, "histori": [430, 454], "hit": [359, 488], "hloc": 384, "hole": [204, 484, 489], "homogen": 159, "hope": 455, "horizont": [171, 196, 205, 254, 255, 261, 262, 268, 269, 374, 384, 386, 392, 393, 489], "host": [455, 457], "hostedtoolcach": 483, "hous": 455, "how": [455, 480, 483, 484, 485, 486, 487, 488, 489, 490], "howev": [0, 131, 161, 279, 434, 454, 455, 476, 489], "html": [171, 392, 486], "http": [171, 359, 366, 392, 468, 486], "huge": [454, 455], "human": 455, "i": [0, 2, 3, 6, 10, 14, 18, 23, 28, 32, 37, 47, 54, 59, 63, 68, 72, 73, 78, 82, 87, 91, 96, 100, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 137, 142, 143, 144, 145, 152, 153, 158, 159, 164, 167, 168, 169, 171, 175, 181, 185, 192, 195, 196, 200, 201, 204, 205, 206, 210, 217, 218, 221, 224, 231, 232, 235, 238, 245, 246, 249, 252, 253, 254, 255, 260, 261, 262, 267, 268, 269, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 325, 326, 327, 328, 335, 336, 337, 339, 340, 341, 343, 344, 347, 349, 356, 357, 359, 360, 363, 368, 370, 374, 375, 379, 386, 388, 389, 390, 392, 393, 395, 402, 423, 430, 431, 434, 435, 436, 437, 439, 441, 442, 447, 449, 450, 452, 454, 455, 456, 457, 458, 460, 461, 464, 466, 468, 470, 473, 474, 475, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 493], "ic_202401": [458, 464, 466], "ic_202501": 460, "icoord": [102, 120, 143, 148, 164, 171, 196, 205, 370, 386, 392, 393], "id": [102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 144, 148, 164, 166, 168, 169, 171, 181, 185, 192, 196, 198, 199, 204, 205, 330, 356, 370, 386, 392, 393, 457, 478, 483, 484], "id_b": 199, "idea": [434, 435, 476, 484, 486, 489], "ideal": 476, "ifmt": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "ignor": [100, 137, 142, 143, 144, 145, 153, 171, 185, 196, 204, 205, 375, 379, 386, 390, 392, 393], "ijk": [171, 392], "iloc": 483, "imag": [171, 196, 205, 375, 386, 389, 390, 392, 393, 484], "immedi": [454, 469], "immens": 455, "implement": [100, 169, 454, 455], "import": [41, 274, 433, 455, 469, 480, 485, 487, 491], "imposs": [279, 455], "improv": [0, 335, 348, 446, 454, 460, 479, 486], "in_data": [102, 164, 356, 357, 358, 360], "in_shap": 362, "includ": [0, 73, 82, 91, 100, 102, 105, 111, 115, 121, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 169, 171, 181, 182, 185, 188, 196, 205, 327, 370, 386, 392, 393, 430, 431, 437, 445, 454, 455, 460, 474, 476, 483, 487, 490], "inclus": 0, "increas": [100, 335, 336, 347, 484, 486], "inde": 455, "index": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426, 454], "indic": 378, "individu": [457, 474, 476, 489], "industri": [0, 439, 442, 449, 452, 454, 455], "infer": 260, "info": [171, 196, 205, 386, 392, 393, 483, 484, 486, 489], "inform": [2, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 102, 164, 171, 174, 175, 177, 196, 204, 205, 210, 212, 224, 226, 238, 240, 252, 274, 279, 317, 322, 327, 335, 347, 386, 392, 393, 394, 430, 454, 455, 460, 461, 468, 473, 484, 486, 489], "inherit": [2, 22, 72, 174, 252, 274, 279, 317, 327, 394], "initi": [175, 187, 332, 430, 484, 486, 489, 493], "inject": [204, 224, 489], "injector": 484, "inlin": [171, 205, 375, 390, 392, 393], "innov": [0, 430, 439, 449, 468], "input": [23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 102, 164, 170, 175, 203, 204, 210, 220, 224, 234, 238, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 273, 360, 399, 406, 420, 427, 484], "input_rang": [253, 260, 267], "insight": [0, 455, 476], "insist": 455, "inspir": [0, 479, 491, 493], "instal": 468, "instanc": [483, 486], "instanti": [3, 23, 73, 224, 267, 276, 423], "instead": [127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 156, 204, 260, 332, 434, 484], "int": [27, 36, 45, 58, 67, 77, 86, 95, 100, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 142, 149, 150, 165, 168, 169, 171, 175, 181, 192, 193, 194, 196, 197, 199, 204, 205, 216, 230, 244, 254, 255, 261, 262, 268, 269, 330, 335, 356, 369, 377, 379, 384, 386, 392, 393, 398, 405, 413, 426, 486], "int64": 486, "integ": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "integr": 460, "intellig": [0, 454], "intend": 468, "intens": 454, "intent": 476, "interact": [171, 205, 375, 390, 392, 393, 454, 476, 484], "interconnect": 479, "interest": [317, 437, 440, 441, 445, 450, 451, 455, 468, 469, 484, 486, 489], "interestingli": [484, 489], "interfac": 274, "intern": [0, 120, 331, 454, 476], "interpol": 454, "introduc": [430, 443, 454, 484, 486, 489], "inv": 336, "invers": [252, 256, 263, 270, 473, 489], "inverse_logarithmic_sc": 483, "inverse_transform": 489, "invest": 476, "investig": [279, 431, 442, 452, 455, 460], "involv": 473, "ioc": 476, "ior": 454, "iot": 454, "ipykernel_2794": 488, "ipynb": 431, "irregular": 160, "irregularcartesian": [430, 469, 484, 487], "is_homogen": 479, "is_isotrop": 479, "isbn": [473, 491, 493], "isin": [106, 137, 142, 143, 144, 145, 153, 360], "islam": [473, 491, 493], "isol": 454, "isolv": [283, 335, 336, 347, 483, 484, 486, 489], "isotrop": 161, "ispoint": [102, 164], "issu": [196, 386, 468, 476], "item": [106, 137, 142, 143, 144, 145, 153, 360], "iter": [106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 137, 142, 143, 144, 145, 153, 168, 169, 181, 335, 336, 345, 347, 356, 360, 430, 484, 486, 489], "its": [260, 274, 454, 455, 479, 484], "itself": [356, 455], "j": [107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 143, 168, 169, 181, 473, 491, 493], "jan": 455, "jax": [2, 433, 454, 469], "jitter": [196, 386], "jo": 455, "job": [439, 449], "joi": 455, "join": 447, "journal": 473, "juli": 462, "jupyt": [171, 205, 375, 389, 390, 392, 393, 490], "just": [131, 454, 461, 476, 484, 487, 489], "justic": 0, "k": [101, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 143, 168, 169, 181, 473, 480, 481, 482, 493, 494], "k_r": [480, 481, 482], "kaawan": [0, 455], "karajanov": 455, "karniadaki": 473, "kassem": [473, 491, 493], "keep": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 164, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 434, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "kei": [113, 126, 145, 153, 164, 168, 198, 201, 205, 376, 393, 480, 484, 491], "kerem": 455, "keyboardinterrupt": 483, "kg": [493, 494], "khazam": 455, "kid": 455, "kind": 454, "know": [445, 454], "knowledg": [0, 439, 442, 449, 452], "kpa": [493, 494], "kr": 469, "kwarg": [6, 10, 14, 18, 32, 54, 63, 82, 91, 171, 195, 196, 205, 206, 210, 217, 221, 231, 235, 238, 245, 249, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 337, 341, 380, 382, 386, 392, 393, 395, 402, 486], "kx": [100, 101, 123, 157, 161, 169, 483, 484, 486, 487, 489], "ky": [100, 101, 124, 157, 161, 169, 484, 487, 489], "kz": [100, 101, 125, 157, 161, 169, 484, 487, 489], "l": [480, 481, 482], "lab": [23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 170, 175, 203, 210, 220, 224, 234, 238, 248, 399, 406, 420, 427, 491, 492, 493, 494], "label": [171, 196, 205, 369, 370, 380, 382, 386, 392, 393, 473, 484, 487], "lack": [439, 449, 455], "larg": [0, 454, 489], "larger": [171, 196, 205, 379, 386, 392, 393], "last": [192, 455, 483, 489], "later": [436, 476], "latter": 175, "law": [317, 455], "layer": [196, 386, 487], "lbm": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "lead": 484, "learn": [0, 317, 430, 439, 449, 454, 455, 468, 473, 474, 479, 489, 490, 495], "least": [274, 359, 455], "least_recently_used_": 359, "leav": [442, 452], "lectur": [0, 455, 486], "led": [439, 449], "left": [100, 164, 169, 171, 196, 205, 379, 386, 392, 393, 484, 487], "len": [102, 113, 126, 164, 355, 356], "length": [31, 40, 53, 62, 71, 81, 90, 99, 100, 169, 173, 208, 223, 237, 251, 254, 255, 261, 262, 268, 269, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "leonhard": 455, "less": [171, 196, 205, 379, 386, 392, 393], "let": [486, 489], "level": [0, 442, 452, 455, 474, 476], "levent": 455, "lgmre": [335, 336, 347, 486], "lh": 330, "lib": 483, "librari": [1, 348, 430, 434, 442, 446, 452, 454, 455, 457, 468, 474, 475, 478, 479, 483, 484, 486, 488, 489], "life": 455, "light": [196, 386, 388, 484], "like": [100, 102, 164, 168, 169, 279, 356, 438, 441, 442, 446, 447, 450, 452, 455, 489], "limit": [196, 381, 386, 439, 449, 470, 489], "linalg": [336, 486], "line": [171, 196, 205, 365, 366, 384, 386, 392, 393, 478, 483, 484, 488], "linear": [327, 335, 345, 347, 430, 485, 486, 489], "lineno": 488, "link": 434, "linkedin": [455, 476], "linux": [468, 478], "liquid": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 480, 481, 482, 491, 493, 494], "list": [27, 36, 45, 58, 67, 77, 86, 95, 100, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 142, 143, 144, 145, 153, 165, 168, 169, 185, 194, 216, 230, 244, 279, 317, 327, 355, 356, 360, 373, 381, 384, 398, 405, 413, 426, 431, 433, 457, 469, 490], "load": [274, 486], "local": 484, "locat": [204, 384, 484], "lock": 434, "log": 483, "logarithmic_sc": 483, "long": [430, 476, 489], "look": [441, 445, 450, 454, 455, 459, 463, 465, 467, 469, 476, 495], "loss": [317, 486], "lot": [0, 445, 476, 484], "lower": [171, 392, 484, 487, 489], "lprofil": 488, "lprofiler_": 365, "lru": 359, "lucki": 455, "m": [455, 468, 473, 478, 484, 491, 493, 494], "mac": [468, 478], "machin": [0, 317, 430, 439, 449, 454, 455, 468, 479, 484, 489], "made": [0, 454], "mai": [73, 82, 91, 100, 373, 439, 442, 448, 449, 452, 454, 455, 469, 476, 478, 483, 484, 485, 486, 487, 488, 489], "main": [434, 439, 449, 455, 474, 476, 486], "mainli": [439, 440, 449, 451, 468], "maintain": [0, 433, 476], "major": 454, "make": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 196, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 386, 394, 395, 402, 409, 423, 430, 432, 433, 434, 436, 438, 439, 441, 442, 443, 444, 445, 448, 449, 450, 452, 454, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "manag": [0, 454], "mani": [177, 212, 226, 240, 439, 442, 446, 449, 452, 455], "manual": 489, "map": [24, 33, 42, 55, 64, 74, 83, 92, 101, 171, 176, 177, 196, 205, 211, 212, 225, 226, 239, 240, 379, 386, 392, 393, 484, 486], "markdown": 431, "master": 455, "match": [260, 430, 454, 493], "materi": [0, 329, 454, 455, 476, 483, 484, 486, 489], "mathbb": [481, 482], "mathemat": [0, 439, 442, 449, 452, 455, 460, 476, 477, 480, 481], "mathematician": 0, "mathephysin": [0, 479], "matplotlib": [171, 196, 205, 379, 386, 392, 393, 484], "matric": [332, 335, 336, 347, 430, 486], "matrix": [131, 151, 156, 175, 336], "max": [150, 260, 381, 483], "max_rang": 483, "maxim": 454, "maximum": [150, 332, 483], "maxsiz": 359, "maziar": 473, "mb": [335, 336, 347, 486], "md": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 431, 491, 493, 494], "me": 455, "mean": [0, 476, 484], "meat": 474, "mechan": [439, 449], "media": [442, 452, 454, 455], "meet": [434, 454, 457], "melt": 185, "member": 0, "mention": 468, "merci": 455, "mere": 0, "merg": 460, "mesh": [196, 371, 386], "meshgrid": 138, "method": [3, 6, 10, 14, 18, 23, 32, 41, 54, 63, 73, 82, 91, 100, 113, 120, 126, 168, 169, 175, 177, 195, 206, 210, 212, 217, 221, 224, 226, 231, 235, 238, 240, 245, 249, 253, 260, 267, 274, 275, 276, 277, 278, 280, 283, 284, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 311, 312, 313, 315, 316, 318, 320, 321, 322, 325, 326, 327, 328, 337, 339, 340, 341, 343, 344, 345, 368, 395, 402, 409, 423, 430, 479, 483, 484, 486, 487, 488, 489], "methodologi": [470, 472], "metric": [23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 170, 175, 203, 210, 220, 224, 234, 238, 248, 399, 406, 420, 427, 491, 492, 493, 494], "might": [196, 279, 317, 386, 439, 449, 455, 484, 489], "mimic": 253, "min": [260, 381, 483], "min_rang": 483, "mind": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "minimum": 483, "minmax": [201, 430, 489], "minmaxscal": [185, 201], "minr": [335, 336, 347, 486], "miss": [359, 455], "mission": [0, 455, 476], "mitig": [196, 386], "mix": [439, 449], "mkdir": 478, "ml": [439, 449], "mm": 454, "mode": [388, 484, 486, 489], "model": [131, 171, 175, 210, 238, 274, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 328, 337, 341, 368, 373, 382, 383, 386, 392, 393, 430, 454, 455, 460, 468, 477, 480, 481, 491, 493], "modern": [439, 449, 454], "modul": [1, 2, 3, 23, 73, 201, 224, 252, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 337, 341, 345, 348, 349, 363, 368, 370, 373, 378, 394, 423, 430, 454, 468, 483, 484, 486, 490, 493], "moham": 455, "mohsen": 455, "moment": 455, "monei": 476, "monopolist": 454, "more": [0, 25, 30, 31, 34, 39, 40, 41, 43, 52, 53, 56, 61, 62, 65, 70, 71, 73, 75, 80, 81, 82, 84, 89, 90, 91, 93, 98, 99, 100, 102, 103, 164, 172, 173, 175, 177, 179, 207, 208, 212, 213, 222, 223, 226, 227, 236, 237, 240, 241, 250, 251, 274, 279, 317, 335, 347, 396, 400, 401, 403, 407, 408, 411, 421, 422, 424, 428, 429, 439, 442, 445, 449, 452, 454, 455, 457, 460, 461, 468, 474, 476, 478, 484, 485, 486, 487, 489], "moreov": [442, 452], "most": [439, 442, 449, 452, 454, 455, 461, 468, 469, 474, 483, 484, 486, 489], "mostli": 317, "mother": 455, "motiv": 455, "movi": 484, "mpa": [493, 494], "msc": 455, "mu": [41, 42, 48, 49, 480, 481, 482, 483, 484, 486, 489], "much": [455, 460, 476], "multi": [113, 126], "multicel": [430, 469], "multiphas": [430, 469], "multipl": [0, 2, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 168, 169, 195, 217, 231, 245, 254, 255, 260, 261, 262, 268, 269, 277, 283, 287, 291, 295, 299, 303, 307, 311, 315, 320, 325, 332, 339, 343, 442, 452, 483, 484, 486, 489], "multithread": 454, "must": [100, 102, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 119, 122, 123, 124, 125, 137, 142, 143, 144, 145, 153, 164, 175, 201, 355, 357, 359, 360, 486, 489], "my": [455, 460, 461, 468], "my_cpos_callback": [205, 393], "my_new_featur": 468, "myrf": 478, "n": [281, 384, 483, 486, 488], "n_color": [171, 196, 205, 377, 379, 380, 382, 386, 392, 393], "n_max": 150, "n_w": 483, "nadja": 455, "nagler": 455, "nagmeddin": 455, "name": [3, 6, 10, 14, 18, 27, 36, 45, 58, 67, 77, 86, 95, 145, 153, 165, 168, 171, 185, 192, 194, 196, 201, 202, 205, 216, 219, 230, 233, 244, 247, 346, 347, 359, 364, 365, 377, 379, 386, 392, 393, 398, 405, 413, 426, 484, 486], "nan": [185, 484], "natur": [100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 144, 152, 168, 169, 181, 199, 204, 330, 484, 487], "navig": [468, 478], "ncall": [364, 488], "ndarrai": [102, 106, 111, 113, 115, 120, 121, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 151, 152, 156, 164, 181, 355, 356, 360, 376, 381], "need": [113, 126, 164, 373, 433, 434, 440, 451, 455, 468, 469, 476, 478, 483, 484, 489], "neg": [204, 484], "neighbor": [111, 113, 126], "neither": 169, "network": [0, 252, 317, 318, 322, 430, 454, 455, 460, 461, 473, 484, 486, 489], "neural": [0, 252, 317, 322, 430, 454, 455, 460, 461, 473, 484, 486, 489], "neuric": [0, 177, 212, 226, 240, 274, 275, 279, 318, 322, 430, 454, 460, 469, 483, 484, 486, 489], "nevertheless": 455, "new": [0, 435, 454, 455, 456, 468, 476, 478, 484, 486, 489], "newslett": 447, "next": [442, 452, 460], "noc": 476, "nomenclatur": 495, "noncommerci": 454, "none": [27, 36, 41, 45, 49, 58, 67, 77, 86, 95, 100, 102, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 133, 134, 143, 164, 165, 166, 168, 169, 171, 175, 181, 185, 192, 193, 194, 196, 201, 204, 205, 216, 230, 244, 253, 260, 267, 283, 335, 336, 347, 359, 369, 370, 371, 372, 373, 374, 386, 389, 390, 392, 393, 398, 405, 409, 413, 416, 426, 483, 484, 486, 489], "nonlinear": 473, "nontranspar": [171, 196, 205, 370, 386, 392, 393], "nor": 169, "normal": [439, 449, 476, 489], "note": [41, 100, 131, 175, 177, 196, 201, 205, 212, 226, 240, 260, 336, 366, 373, 386, 393, 434, 454, 468, 469, 474, 478, 484, 487, 489], "notebook": [171, 205, 375, 380, 382, 389, 390, 392, 393, 431, 484, 485, 487, 490], "notfullyimpl": [107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 122, 123, 124, 125, 168, 169], "noth": [171, 196, 205, 370, 386, 392, 393], "novemb": [432, 491], "now": [430, 455, 486, 489, 493], "np": [23, 32, 41, 54, 63, 73, 82, 91, 100, 175, 210, 224, 238, 336, 355, 356, 360, 376, 483, 484, 486, 489], "nstep": [283, 335, 483, 484, 486, 489], "number": [73, 82, 91, 100, 104, 142, 148, 149, 150, 152, 155, 171, 188, 196, 205, 254, 255, 261, 262, 268, 269, 332, 369, 377, 379, 384, 386, 392, 393, 454, 484, 486, 489], "numer": [0, 177, 212, 226, 240, 274, 275, 279, 317, 328, 337, 341, 345, 430, 454, 460, 461, 469, 483, 484, 485, 486, 489], "numpi": [2, 23, 32, 41, 54, 63, 73, 82, 91, 100, 102, 175, 210, 224, 238, 381, 454, 468, 469, 478, 483, 489], "nx": [100, 150, 155, 169, 483, 484, 486, 487, 489], "ny": [100, 150, 155, 169, 483, 484, 486, 487, 489], "nz": [100, 150, 155, 169, 483, 484, 486, 487, 489], "n\u00fcrnberg": 455, "object": [0, 3, 6, 10, 14, 18, 23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 154, 170, 171, 175, 177, 203, 210, 212, 220, 224, 226, 234, 238, 240, 248, 253, 260, 267, 274, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 337, 341, 369, 370, 371, 372, 373, 374, 378, 379, 390, 392, 395, 399, 402, 406, 409, 420, 423, 427, 454, 457, 474, 479, 483, 484, 486, 488, 489, 493], "obtain": [336, 489], "occasion": 468, "offer": [0, 2, 442, 452, 454, 455, 460, 476, 489], "offici": [457, 468, 478], "oil": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 439, 442, 449, 452, 454, 455, 479, 480, 481, 482, 491, 493, 494], "onc": [49, 195, 206, 217, 221, 231, 235, 245, 249, 274, 486], "one": [147, 185, 195, 206, 217, 221, 231, 235, 245, 249, 279, 442, 452, 454, 455, 468, 469, 474, 486, 489, 493], "ones": [151, 156], "ongo": 454, "onli": [0, 3, 23, 73, 82, 91, 100, 152, 164, 169, 171, 185, 224, 267, 274, 276, 335, 336, 347, 392, 423, 430, 454, 474, 484, 485, 486, 487, 489], "onlin": 0, "opac": [171, 196, 205, 370, 380, 382, 386, 392, 393], "open": [0, 171, 205, 375, 390, 392, 393, 440, 442, 451, 452, 454, 455, 476, 495], "openli": 455, "oper": [254, 255, 261, 262, 268, 269, 317, 318, 476, 478], "opinion": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "opportun": [0, 455], "opt": 483, "optim": [430, 454], "optimist": 279, "option": [23, 29, 32, 38, 41, 49, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 102, 105, 106, 111, 113, 115, 121, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 169, 170, 171, 175, 177, 181, 182, 185, 188, 192, 196, 199, 203, 204, 205, 210, 212, 220, 224, 226, 234, 238, 240, 248, 253, 260, 267, 275, 328, 329, 330, 332, 333, 335, 336, 347, 355, 360, 364, 365, 374, 377, 379, 385, 386, 388, 389, 390, 392, 393, 399, 406, 420, 427, 431, 478, 486, 487], "order": [100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 144, 148, 152, 168, 169, 181, 199, 204, 330, 479, 484, 487], "org": [171, 359, 392, 478, 486], "organ": [0, 437, 476], "orgtbl": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "origin": [256, 263, 270, 468, 489], "original_valu": 483, "original_x": 483, "other": [0, 2, 3, 23, 73, 82, 91, 100, 106, 161, 177, 204, 212, 224, 226, 240, 260, 267, 276, 279, 423, 437, 439, 445, 449, 454, 455, 468, 476, 479, 484, 486, 489], "otherwis": [157, 158, 159, 160, 161, 162, 356, 357, 439, 449], "our": [0, 431, 434, 436, 437, 439, 440, 441, 443, 445, 446, 447, 449, 450, 451, 454, 457, 468, 469, 470, 472, 476, 479, 483, 484, 486, 488, 489, 490], "ourselv": 476, "out": [454, 483], "outcom": [0, 454, 460], "outdat": 434, "output": [23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 102, 106, 113, 126, 137, 142, 143, 144, 145, 153, 170, 175, 185, 203, 210, 220, 224, 234, 238, 248, 253, 254, 255, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 272, 273, 355, 360, 364, 365, 399, 406, 420, 427, 489], "output_rang": [201, 253, 258, 260, 265, 267, 272, 281], "outsid": [171, 205, 375, 390, 392, 393, 439, 449], "over": [204, 434, 442, 452, 476], "overal": [0, 479], "own": [260, 274], "p": [185, 197, 199, 205, 393, 473, 480, 481, 482], "p0": 486, "p1": [473, 486, 489], "p2": [486, 489], "p3": [486, 489], "p4": 486, "packag": 483, "page": [441, 450, 454, 457, 470, 481], "panda": 478, "paper": [0, 454, 455, 474], "parallel": 454, "paramet": [3, 6, 10, 14, 18, 23, 27, 28, 29, 32, 36, 37, 38, 41, 45, 46, 47, 48, 49, 50, 51, 54, 58, 59, 60, 63, 67, 68, 69, 73, 77, 78, 79, 82, 86, 87, 88, 91, 95, 96, 97, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 165, 167, 168, 169, 170, 171, 175, 177, 181, 182, 185, 188, 192, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 210, 212, 216, 218, 220, 224, 226, 230, 232, 234, 238, 240, 244, 246, 248, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 329, 330, 332, 333, 335, 336, 337, 341, 347, 355, 356, 357, 360, 364, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 388, 389, 390, 392, 393, 398, 399, 405, 406, 413, 420, 426, 427, 486], "parent": [3, 23, 73, 224, 267, 276, 423, 455], "pari": 473, "part": [443, 445, 487, 489], "parti": 454, "partial": [0, 460, 473, 479], "partner": [0, 454], "partnership": 476, "pass": [113, 126, 171, 196, 205, 386, 392, 393], "passion": 455, "path": [455, 478], "patient": 455, "pattern": [2, 22, 72, 174, 252, 279, 317, 327, 394, 454, 490], "pavelpatrin": 366, "pbar": 483, "pd": 483, "pd0": 483, "pde": [0, 279, 317, 327, 460, 479, 489], "pdi0": 483, "pdin": 483, "pdn": 483, "pdsum": 483, "peopl": [439, 449, 455], "pep": 468, "pep0": 468, "pep20": 468, "pep257": 468, "pep484": 468, "pep8": 468, "per": [196, 386, 488], "percal": [364, 488], "perdikari": 473, "perfect": [455, 474], "perform": [106, 137, 142, 143, 144, 145, 153, 177, 212, 226, 240, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 335, 336, 337, 341, 347, 360, 442, 452, 454, 485, 486, 489], "perhap": [439, 442, 449, 452, 455], "perm": [480, 481, 482], "permeability_i": 101, "permeability_x": 101, "permeability_z": 101, "permeabl": [31, 40, 53, 62, 71, 81, 90, 99, 100, 101, 122, 123, 124, 125, 145, 169, 173, 208, 223, 237, 251, 401, 408, 422, 429, 469, 479, 480, 481, 482, 491, 493, 494], "person": 479, "peter": 455, "petroleum": [439, 442, 449, 452, 455, 473, 491, 493], "phase": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 401, 408, 422, 429, 430, 454, 479, 480, 481, 482, 490, 493, 494], "phd": [455, 460], "phenomen": 455, "phenomenon": [455, 479], "phi": [100, 101, 158, 159, 169, 480, 481, 482, 483, 484, 486, 487, 489], "physic": [0, 317, 322, 430, 439, 449, 454, 455, 460, 461, 473, 476, 479, 486], "physicist": 0, "pi": [175, 483, 484, 486, 489], "pinn": [177, 212, 226, 240, 275, 317, 430, 454, 460, 469], "pip": [454, 468, 478], "pipe": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "pixel": [171, 196, 205, 385, 386, 392, 393], "pl": [196, 205, 369, 370, 371, 372, 373, 374, 386, 390, 393], "place": [171, 205, 375, 390, 392, 393, 430, 442, 452], "plain": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "plan": [0, 279, 430, 437, 454, 476], "platform": [0, 439, 449, 454, 455, 476], "pleas": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 457, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "plot": [171, 205, 375, 390, 392, 393], "plotter": [171, 196, 205, 369, 370, 371, 372, 373, 374, 377, 379, 384, 386, 389, 390, 392, 393], "plt": 379, "point": [102, 148, 164, 171, 196, 205, 353, 357, 360, 374, 386, 392, 393, 434, 455, 486], "pool": 0, "popul": 168, "pore": 479, "poros": [31, 40, 53, 62, 71, 81, 90, 99, 100, 101, 158, 159, 169, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "porou": [442, 452, 454, 455], "posit": [204, 205, 393, 454, 484], "possibl": [0, 164, 197, 199, 434, 439, 449, 455, 468, 495], "postpon": 455, "poten": [480, 481, 482], "potenti": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "power": [0, 454, 479], "practic": [0, 455, 461, 479], "practition": 454, "precis": 0, "predict": [454, 460, 486], "prefer": 431, "prefix": 473, "prepar": 477, "preparatori": 455, "present": 437, "press": [197, 199, 480, 481, 482], "pressur": [31, 40, 53, 62, 71, 81, 90, 99, 173, 175, 185, 192, 193, 196, 197, 198, 199, 201, 204, 205, 208, 223, 224, 237, 251, 336, 377, 386, 393, 401, 408, 422, 429, 454, 469, 479, 480, 481, 482, 483, 484, 486, 489, 491, 493, 494], "pressures_arrai": 187, "presto": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "prevent": 486, "previou": 486, "principl": 468, "print": [23, 27, 32, 36, 41, 45, 54, 58, 63, 67, 73, 77, 82, 86, 91, 95, 100, 165, 175, 194, 195, 206, 210, 216, 217, 221, 224, 230, 231, 235, 238, 244, 245, 249, 364, 365, 398, 405, 413, 426, 480, 483, 484, 485, 486, 487, 488, 489, 491], "print_arrai": [283, 335, 336, 483, 486], "print_output": [364, 365, 488], "priorit": [470, 472], "prioriti": 204, "privat": 455, "problem": [0, 279, 335, 347, 437, 454, 460, 473, 476, 479, 486], "process": [224, 252, 442, 452, 454, 460], "produc": 484, "product": [0, 204, 224, 336, 430, 454, 474, 476, 486, 489], "prof": 455, "profession": [434, 463, 476, 479], "professor": 455, "profici": [439, 449], "profil": [363, 365, 488], "profm": 490, "program": [439, 449, 455], "progress": [0, 317, 455, 476], "project": [0, 445, 454, 455, 468, 474, 478, 481], "promot": 0, "prop": [27, 36, 45, 58, 67, 77, 86, 95, 145, 153, 165, 168, 171, 192, 194, 196, 205, 216, 230, 244, 377, 382, 383, 386, 392, 393, 398, 405, 413, 426, 484], "proper": [454, 455, 475], "properti": [27, 36, 45, 49, 58, 67, 73, 77, 86, 95, 145, 153, 157, 158, 159, 160, 161, 162, 165, 168, 169, 171, 185, 192, 193, 194, 196, 205, 216, 230, 244, 377, 386, 392, 393, 398, 405, 413, 426, 479, 481, 482, 484, 493, 494], "propos": 468, "protect": 455, "prove": 476, "provid": [0, 115, 120, 121, 252, 274, 279, 317, 327, 345, 349, 363, 368, 454, 455, 457, 469, 476, 484, 487, 489], "psi": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "psia": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 484, 489, 491, 493, 494], "pta": [454, 469], "public": 454, "publish": [442, 448, 452, 455], "pull": [468, 469, 470, 472, 474], "purpos": [131, 489], "pursuit": 0, "push": [0, 468], "pv": [369, 370, 371, 372, 373, 374], "pvt": [454, 469], "pwf": [204, 483, 484, 489], "pwf1": 489, "pwf182": 484, "pwf186": 484, "pwf202": 484, "pwf218": 484, "pwf222": 484, "pwf3": 489, "pwf4": 486, "py": [468, 483, 488], "pypi": [448, 454, 478], "pyplot": 379, "python": [1, 356, 439, 449, 454, 455, 468, 475, 478, 483], "python3": 483, "pytorch": [2, 454, 469], "pyvista": [73, 105, 120, 135, 136, 146, 154, 171, 196, 205, 478, 484], "q": [185, 197, 199, 204, 409, 416, 417, 480, 481, 482, 483, 486, 489], "q0": 486, "q1": 489, "q3": 489, "q4": 486, "q_g": [480, 481, 482], "q_l": [480, 481, 482], "q_o": [480, 481, 482], "q_w": [480, 481, 482], "qg": [480, 481, 482], "ql": [480, 481, 482], "qmr": [335, 336, 347, 486], "qo": [480, 481, 482], "qualit": [171, 196, 205, 379, 386, 392, 393], "qualiti": [0, 454, 476, 490], "quantifi": [442, 452], "quantum": [430, 454], "question": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "quick": 476, "quickli": 495, "qw": [480, 481, 482], "qw1": 489, "qw182": 484, "qw186": 484, "qw202": 484, "qw218": 484, "qw222": 484, "qw3": 489, "qw4": 486, "r": [31, 40, 53, 62, 71, 81, 90, 99, 173, 204, 208, 223, 237, 251, 401, 408, 409, 416, 418, 422, 429, 454, 473, 476, 483, 484, 486, 489, 491, 493, 494], "r_": [480, 481, 482], "rad": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "radial": [430, 469, 484, 487], "radiu": 204, "rai": 455, "rais": [28, 29, 37, 38, 47, 51, 59, 60, 68, 69, 78, 79, 87, 88, 96, 97, 102, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 145, 153, 164, 167, 168, 170, 171, 196, 200, 203, 205, 218, 220, 232, 234, 246, 248, 347, 360, 370, 385, 386, 388, 392, 393, 399, 406, 420, 427], "raissi": 473, "rami": 455, "rang": [0, 142, 253, 255, 256, 258, 259, 260, 262, 263, 265, 266, 267, 269, 270, 272, 273, 442, 452, 454, 455, 483, 488, 489], "rate": [31, 40, 53, 62, 71, 81, 90, 99, 173, 185, 192, 196, 197, 198, 199, 201, 204, 205, 208, 223, 237, 251, 386, 393, 401, 408, 422, 429, 454, 469, 479, 480, 481, 482, 484, 486, 489, 491, 493, 494], "rates_arrai": 187, "rather": 279, "ratio": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "re": 476, "reach": [442, 452, 454, 455, 474, 476], "reaction": 434, "read": [454, 455, 457, 484, 489], "reader": 485, "readi": [2, 439, 449, 454], "real": [454, 476], "realiti": [439, 449], "reason": [434, 439, 449, 455, 489], "recent": [359, 483], "recogn": [171, 196, 205, 370, 386, 392, 393], "recommend": [335, 336, 347, 454, 457, 478, 483, 484, 486, 488, 489], "recoveri": [454, 455], "redistribut": 0, "reduc": [442, 452, 454, 455], "refer": [0, 6, 10, 14, 18, 146, 154, 279, 335, 347, 454, 474, 483, 484, 486, 488, 489], "referenc": 454, "refin": 460, "reform": 360, "regardless": 457, "regist": [457, 476], "registr": 457, "regular": [162, 430, 487], "regularcartesian": [430, 483, 484, 486, 487, 489], "reinforc": [430, 454], "reiniti": 175, "rel": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 430, 454, 469, 479, 480, 481, 482, 491, 493, 494], "relat": [433, 454, 455, 460, 469], "releas": [0, 454, 469, 474], "relev": [73, 82, 91, 100, 169, 185, 335, 336, 347, 442, 452, 486], "relperm": [480, 481, 482], "remain": 489, "rememb": 469, "remov": [102, 164, 483, 484], "remove_boundari": 102, "render": [171, 205, 375, 389, 390, 392, 393], "repeat": 434, "repeatedli": 455, "replac": 483, "report": 476, "repositori": [0, 469], "repr": 483, "repres": [73, 224, 479, 480, 484, 489, 491], "reproduc": [439, 449, 455, 476], "request": [440, 451, 468, 469, 474], "requir": [0, 73, 82, 91, 100, 120, 146, 175, 254, 260, 261, 268, 317, 430, 454, 455, 457, 476, 478, 479, 484, 486, 489], "research": [0, 317, 439, 442, 449, 452, 454, 455, 460, 461, 474, 486, 489, 495], "reservoir": [0, 1, 175, 224, 440, 442, 451, 452, 454, 455, 468, 473, 474, 475, 485, 486, 489, 491, 493], "reservoirflow": [3, 6, 10, 14, 18, 23, 32, 41, 54, 63, 73, 82, 91, 100, 175, 210, 224, 238, 253, 260, 267, 274, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 337, 341, 395, 402, 409, 423, 434, 439, 440, 447, 448, 449, 451, 454, 455, 457, 460, 468, 474, 476, 478, 480, 485, 487, 490, 491, 493, 495], "reshap": [100, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 156, 168, 489], "resolut": [385, 460], "resourc": [455, 476], "respect": 454, "respons": 434, "restructuredtext": 431, "result": [274, 359, 455, 486], "retain": 489, "return": [3, 6, 10, 14, 18, 23, 25, 26, 30, 31, 32, 34, 35, 39, 40, 41, 43, 44, 52, 53, 54, 56, 57, 61, 62, 63, 65, 66, 70, 71, 73, 75, 76, 80, 81, 82, 84, 85, 89, 90, 91, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 175, 178, 179, 181, 182, 185, 187, 188, 191, 207, 208, 210, 213, 215, 222, 223, 224, 227, 229, 236, 237, 238, 241, 243, 250, 251, 253, 260, 267, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 330, 331, 332, 333, 337, 341, 347, 355, 356, 357, 360, 375, 376, 377, 378, 379, 381, 384, 385, 395, 396, 397, 400, 401, 402, 403, 404, 407, 408, 409, 411, 412, 421, 422, 423, 424, 425, 428, 429, 476, 483, 486, 488, 489], "revers": [454, 484], "revisit": [0, 479], "revolut": [439, 449], "rf": [41, 274, 373, 454, 480, 483, 484, 485, 486, 487, 488, 489, 491], "rh": 330, "rho": [41, 42, 49, 50, 480, 481, 482, 484, 489], "rich": [0, 442, 452, 455], "right": [100, 164, 169, 171, 196, 205, 379, 386, 392, 393, 484], "robust": 460, "rock": [73, 430, 479, 484], "role": [0, 476], "rossbach": 455, "rotat": [171, 196, 205, 374, 386, 392, 393], "round": 484, "row": [185, 254, 255, 261, 262, 268, 269], "rst": 431, "rta": [454, 469], "rubi": 455, "ruler": [171, 196, 205, 371, 386, 392, 393], "run": [175, 177, 212, 226, 240, 483], "run_config": 483, "saadat": 455, "sad": [439, 449], "sai": 489, "salvator": 455, "same": [0, 113, 126, 157, 158, 159, 160, 161, 162, 169, 185, 196, 197, 386, 484, 486, 489, 491], "sat": [480, 481, 482], "satisfact": [439, 449], "satur": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "save": [185, 196, 364, 365, 386], "save_gif": 484, "save_output": [364, 365, 488], "sc": 455, "scale": [184, 185, 186, 190, 201, 252, 253, 260, 281, 483, 484, 489], "scaled_valu": 483, "scaled_x": 483, "scaler": [102, 107, 108, 109, 110, 112, 122, 123, 124, 125, 148, 164, 201, 253, 260, 357, 430, 483, 490], "scaler_rang": 201, "scaler_typ": 201, "scalers_dict": [185, 201, 489], "scarc": [439, 449], "scene": 485, "scf": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 491, 493, 494], "schedul": 457, "school": 455, "scienc": [0, 439, 449, 454, 455, 473, 479, 491, 493, 495], "scientif": [0, 317, 327, 439, 449, 454, 455, 460], "scientist": [0, 439, 449, 474], "scipi": [335, 347, 454, 486], "scipy_spars": 486, "scope": [430, 457, 476], "screen": 455, "script": [468, 478], "scrum": [470, 472], "seamlessli": 455, "search": 454, "sec": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 488, 491, 493, 494], "second": [196, 386, 455, 483, 484, 486, 489], "section": [107, 108, 109, 110, 127, 128, 129, 130, 347, 431, 434, 435, 447, 456, 474, 476, 477, 481, 484, 490, 495], "see": [1, 171, 196, 205, 359, 374, 379, 386, 392, 393, 454, 479, 483, 484, 485, 486, 487, 489], "seek": [0, 476], "seem": 455, "seen": [486, 489], "select": [23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 168, 169, 170, 175, 185, 192, 203, 210, 220, 224, 234, 238, 248, 252, 399, 406, 420, 427, 440, 451, 484, 486, 489, 491], "self": [24, 33, 42, 55, 64, 74, 83, 92, 101, 176, 211, 225, 239, 483], "semant": 454, "seminar": 0, "sens": 454, "separ": 359, "servic": 457, "set": [28, 29, 37, 38, 46, 47, 48, 49, 50, 51, 59, 60, 68, 69, 73, 78, 79, 82, 87, 88, 91, 96, 97, 100, 102, 106, 113, 126, 137, 142, 143, 144, 145, 153, 164, 167, 168, 169, 170, 171, 185, 197, 198, 199, 200, 201, 203, 204, 205, 218, 220, 232, 234, 246, 248, 258, 260, 265, 272, 332, 356, 359, 360, 375, 388, 389, 390, 392, 393, 399, 406, 420, 427, 484, 487, 489, 493], "set_b": 42, "set_boundari": [483, 484, 486], "set_comp": [24, 33, 55, 64, 74, 83, 92, 211, 225, 239], "set_compress": [24, 33, 55, 64, 74, 83, 92, 211, 225, 239], "set_dens": 42, "set_descript": 483, "set_formation_volume_factor": 42, "set_fvf": 42, "set_mod": 484, "set_mu": 42, "set_prop": [42, 101], "set_properti": [42, 101], "set_rho": 42, "set_scal": [185, 489], "set_solut": [483, 486], "set_tran": 176, "set_transmiss": 176, "set_viscos": 42, "set_wel": [175, 483, 484, 486, 489], "settari": [473, 493], "setup": [468, 478], "sever": [348, 439, 449, 455, 476, 487], "shape": [72, 73, 82, 91, 100, 113, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152, 153, 156, 168, 169, 188, 476, 479, 483, 487], "share": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "sharealik": 454, "sherik": 455, "shift": [171, 196, 205, 379, 386, 392, 393], "short": 434, "shortli": 0, "should": [100, 113, 126, 131, 168, 169, 171, 196, 205, 379, 386, 392, 393, 433, 439, 449, 468], "shouldn": 433, "show": [27, 36, 45, 58, 67, 77, 86, 95, 165, 192, 194, 196, 216, 230, 244, 279, 368, 375, 386, 389, 390, 392, 393, 398, 405, 413, 426, 480, 485, 487, 488], "show_edg": [196, 386], "show_scalar_bar": [196, 386], "showindex": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "shown": [171, 185, 196, 201, 205, 386, 392, 393, 430, 484, 489], "side": [196, 386, 476], "signific": 0, "significantli": 460, "similar": [0, 476, 480, 490, 491], "similarli": 489, "simonyi": 455, "simpl": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426, 483, 484], "simpler": 279, "simul": [1, 175, 185, 196, 205, 224, 252, 335, 336, 386, 393, 439, 442, 449, 452, 454, 455, 468, 473, 474, 475, 483, 485, 491, 493], "simultan": [442, 452], "sin": 483, "sinc": [113, 126, 442, 452, 454, 455, 457, 468, 480, 484, 489, 491], "singl": [23, 32, 41, 54, 63, 73, 82, 91, 100, 121, 161, 175, 206, 210, 221, 224, 235, 238, 249, 274, 278, 284, 288, 292, 296, 300, 304, 308, 312, 316, 321, 326, 336, 340, 344, 430, 454, 486, 489, 490], "singlecel": 430, "singlephas": [430, 483, 484, 486, 489], "site": 483, "size": [171, 196, 205, 385, 386, 392, 393, 489], "skill": [439, 449], "skin": 204, "skip": 468, "slim": 430, "slower": 336, "small": [171, 392, 430, 489], "smaller": [28, 37, 47, 59, 68, 78, 87, 96, 167, 200, 218, 232, 246], "so": [0, 196, 386, 434, 439, 449, 457, 469, 476, 484, 486, 489], "societi": 0, "soft": [439, 449], "softwar": [442, 452, 454, 455, 470], "solut": [0, 31, 40, 53, 62, 71, 81, 90, 99, 173, 177, 188, 195, 196, 206, 208, 212, 217, 221, 223, 226, 231, 235, 237, 240, 245, 249, 251, 260, 275, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 386, 401, 408, 422, 429, 430, 442, 452, 454, 455, 460, 476, 480, 481, 482, 484, 486, 489, 491, 493, 494], "solv": [0, 175, 177, 195, 212, 217, 226, 231, 240, 245, 277, 283, 287, 291, 295, 299, 303, 307, 311, 315, 320, 325, 327, 335, 339, 343, 345, 347, 430, 437, 460, 468, 473, 476, 479, 483, 484, 485, 486, 489], "solver": [327, 335, 336, 430, 484, 486, 489], "some": [196, 260, 386, 434, 454, 476, 489], "someth": [432, 455, 468, 469], "sometim": 455, "soon": [439, 449, 469], "sort": 364, "sort_stat": 364, "sourc": [442, 452, 454, 455, 468, 476, 478], "space": [185, 201, 384, 441, 450, 460, 489], "spars": [131, 151, 156, 177, 182, 212, 226, 240, 275, 276, 280, 285, 289, 293, 297, 301, 305, 309, 313, 318, 322, 328, 332, 333, 335, 336, 337, 341, 347, 430, 483, 484, 486], "sparsiti": 175, "special": [0, 454, 455], "specialist": 454, "specif": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 204, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 458, 460, 461, 462, 464, 466, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "specifi": [102, 164, 185, 197, 199, 483, 484], "speed": [196, 386, 433], "spend": 455, "sphere": [171, 196, 205, 370, 386, 392, 393], "sponsor": [437, 476], "sponsorship": 0, "spot": [454, 490], "sprint": 470, "stabl": [171, 392, 454, 474, 476], "stack": [439, 449, 454], "stai": [439, 449], "standard": [0, 454, 455, 468, 479], "star": 476, "start": [175, 196, 386, 430, 454, 455, 468, 469, 471, 476, 483, 484, 486, 487, 488, 489, 495], "start_dat": [175, 185, 484, 486, 489], "startup": 0, "state": [317, 454, 455], "static": [171, 205, 375, 380, 382, 389, 390, 392, 393, 484, 485, 487], "statist": [359, 439, 449], "statu": 454, "stb": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 484, 489, 491, 493, 494], "std": [493, 494], "step": [175, 185, 188, 192, 468, 478, 483, 486, 489], "stick": [454, 468, 469, 483, 484, 486, 488, 489], "still": [161, 171, 196, 386, 392, 430, 439, 446, 449, 454, 455, 458, 464, 466, 474, 475, 477, 489], "storag": [454, 455], "store": [442, 452], "str": [3, 6, 10, 14, 18, 23, 26, 27, 29, 30, 32, 35, 36, 38, 39, 41, 44, 45, 51, 52, 54, 57, 58, 60, 61, 63, 66, 67, 69, 70, 73, 76, 77, 79, 80, 82, 85, 86, 88, 89, 91, 94, 95, 97, 98, 100, 102, 106, 107, 113, 116, 122, 126, 127, 137, 138, 142, 143, 144, 145, 147, 152, 153, 163, 164, 165, 168, 170, 171, 172, 175, 177, 185, 191, 192, 193, 194, 196, 197, 199, 203, 205, 207, 210, 212, 215, 216, 220, 222, 224, 226, 229, 230, 234, 236, 238, 240, 243, 244, 248, 250, 257, 264, 271, 275, 335, 336, 347, 355, 360, 364, 369, 370, 372, 374, 376, 377, 378, 379, 381, 385, 386, 388, 392, 393, 397, 398, 399, 400, 404, 405, 406, 407, 412, 413, 420, 421, 425, 426, 427, 428, 484, 486], "strateg": 0, "strategi": 454, "strength": 454, "string": [145, 153, 168, 201, 369, 377, 378], "strive": 0, "strong": 445, "structur": 146, "student": [0, 439, 442, 449, 452, 454, 455, 474, 476], "studi": [0, 454, 455, 457, 460], "style": 468, "stype": [177, 212, 226, 240, 275, 483, 484, 486, 489], "submodul": [274, 276, 430, 491], "subscrib": 447, "subsurfac": 454, "success": [252, 457, 474], "suggest": [434, 443], "sum": 488, "sum_numb": 488, "supervis": 455, "supervisor": 455, "support": [0, 115, 120, 121, 152, 430, 454, 455, 469, 475, 484, 487, 495], "sure": [434, 478], "surfac": [442, 452], "switch": 486, "symbol": [430, 480, 481, 482, 484, 485, 489], "system": [0, 177, 212, 226, 240, 327, 345, 347, 430, 454, 460, 478, 484, 485, 489, 491, 493], "szabado": 455, "t": [3, 23, 73, 176, 181, 224, 260, 267, 276, 423, 433, 455, 476, 480, 481, 482, 489], "tab10": [171, 196, 205, 379, 386, 392, 393, 484], "tab20": [171, 196, 205, 379, 386, 392, 393], "tabl": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 254, 255, 261, 262, 268, 269, 364, 398, 405, 413, 426], "tablefmt": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "tackl": [0, 454, 460], "tag": 457, "take": [439, 442, 449, 452, 455], "taken": 454, "task": [469, 470, 472], "tdpi": 483, "teach": 454, "teacher": 455, "team": [434, 457, 464, 476], "technic": [431, 437, 454, 455], "techniqu": [0, 454, 460], "technolog": 0, "technologi": 0, "temp": [480, 481, 482], "temperatur": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 454, 479, 480, 481, 482, 491, 493, 494], "tensorflow": [2, 454, 469], "term": [430, 457, 480], "termin": 478, "terminologi": 461, "test": [131, 171, 392, 454, 469, 484], "text": [205, 377, 384, 393], "tfqmr": [335, 336, 347, 486], "than": [28, 37, 47, 59, 68, 78, 87, 96, 100, 104, 147, 167, 171, 196, 200, 205, 218, 232, 246, 379, 386, 392, 393, 455, 484], "thank": [434, 455], "thei": [0, 434, 439, 449, 455, 484, 489], "them": [0, 439, 449, 476, 483, 484, 486, 489], "theoret": 0, "therefor": [171, 392, 434, 439, 449, 454, 455, 489], "thermal": [430, 469, 484], "thermodynam": [439, 449], "theses": 0, "thesi": 476, "theta": [480, 481, 482], "thi": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 24, 29, 32, 33, 38, 41, 42, 49, 51, 54, 55, 60, 63, 64, 69, 72, 73, 74, 79, 82, 83, 88, 91, 92, 97, 100, 101, 102, 113, 120, 126, 131, 137, 142, 143, 144, 145, 153, 157, 158, 159, 160, 161, 162, 164, 168, 169, 170, 171, 174, 175, 176, 177, 185, 195, 196, 203, 204, 205, 206, 210, 211, 212, 217, 220, 221, 224, 225, 226, 231, 234, 235, 238, 239, 240, 245, 248, 249, 252, 253, 260, 267, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 287, 288, 289, 291, 292, 293, 295, 296, 297, 299, 300, 301, 303, 304, 305, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 325, 326, 327, 328, 337, 339, 340, 341, 343, 344, 345, 348, 349, 356, 363, 368, 370, 375, 379, 386, 390, 392, 393, 394, 395, 399, 402, 406, 409, 420, 423, 427, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 460, 461, 462, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 495], "thing": [442, 446, 452, 455, 468], "think": [439, 449], "third": 454, "those": [439, 449, 455, 490], "thread": [283, 331, 332, 333, 335, 336, 430, 483, 486], "three": [197, 199, 274], "threephas": [430, 469], "thrive": 0, "through": [106, 137, 142, 143, 144, 145, 153, 360, 479], "throughout": [0, 434, 454, 483, 484, 486, 488, 489], "time": [31, 40, 53, 62, 71, 81, 90, 99, 173, 175, 185, 188, 192, 201, 208, 223, 237, 251, 401, 408, 422, 429, 454, 455, 470, 472, 476, 479, 480, 481, 482, 486, 488, 489, 491, 493, 494], "timeit": 488, "timer": 488, "timestep": [195, 206, 217, 221, 231, 235, 245, 249, 277, 278, 283, 284, 287, 288, 291, 292, 295, 296, 299, 300, 303, 304, 307, 308, 311, 312, 315, 316, 320, 321, 325, 326, 339, 340, 343, 344, 483, 484, 486, 489], "titl": [171, 196, 205, 372, 380, 382, 386, 392, 393], "tmp": 488, "tnavig": 469, "todai": [175, 439, 449, 455], "togeth": [0, 442, 452, 476, 483, 484, 486, 489], "tomak": 455, "took": [455, 488], "tool": [0, 2, 430, 439, 449, 454, 455, 474, 476, 477, 478, 479, 485], "top": [100, 101, 169, 171, 196, 205, 386, 392, 393, 470, 472, 484], "topic": [0, 279, 433, 435, 442, 444, 452, 454, 455, 468, 474, 476, 486, 489], "total": [105, 142, 149, 171, 196, 200, 205, 218, 232, 246, 379, 386, 392, 393, 487, 488], "tottim": [364, 488], "touch": [442, 452], "tpu": [430, 454], "traceback": 483, "track": [175, 457, 489], "train": [0, 252, 317, 439, 445, 449, 454, 476, 486, 489], "tran": [480, 481, 482], "transact": 0, "transform": [252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 272, 489], "transfrom": 489, "transient": [454, 469], "translat": 0, "transmiss": [25, 31, 34, 40, 43, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 173, 176, 179, 181, 208, 213, 223, 227, 237, 241, 251, 396, 401, 403, 408, 411, 422, 424, 429, 479, 480, 481, 482, 491, 492, 493, 494], "transmit": 479, "transpar": [171, 196, 205, 370, 386, 392, 393], "treat": 359, "true": [27, 36, 45, 58, 67, 73, 77, 82, 86, 91, 95, 100, 102, 105, 111, 115, 121, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 171, 177, 182, 184, 185, 188, 194, 196, 205, 212, 216, 226, 230, 240, 244, 275, 281, 283, 328, 335, 336, 347, 356, 357, 359, 364, 365, 373, 375, 386, 389, 390, 392, 393, 398, 405, 413, 426, 455, 483, 484, 485, 486, 487, 488, 489], "try": [0, 171, 392, 454, 468, 489], "tstep": [192, 193, 336, 483], "tube": 430, "tupl": [73, 82, 91, 100, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 142, 143, 144, 145, 148, 153, 155, 164, 168, 169, 171, 181, 187, 188, 196, 198, 201, 205, 253, 258, 260, 265, 267, 272, 330, 355, 356, 357, 359, 360, 381, 384, 385, 386, 392, 393, 484], "tutori": [0, 431, 454, 480, 483, 484, 485, 486, 487, 488, 489, 495], "two": [274, 355, 468, 484, 486, 489], "twophas": [430, 469], "type": [2, 3, 6, 10, 14, 18, 22, 23, 25, 26, 30, 31, 32, 34, 35, 39, 40, 41, 43, 44, 52, 53, 54, 56, 57, 61, 62, 63, 65, 66, 70, 71, 72, 73, 75, 76, 80, 81, 82, 84, 85, 89, 90, 91, 93, 94, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 175, 177, 178, 179, 181, 182, 185, 187, 188, 191, 207, 208, 210, 212, 213, 215, 222, 223, 224, 226, 227, 229, 236, 237, 238, 240, 241, 243, 250, 251, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 330, 332, 333, 337, 341, 347, 355, 356, 357, 359, 360, 375, 376, 377, 378, 379, 381, 384, 385, 394, 395, 396, 397, 400, 401, 402, 403, 404, 407, 408, 409, 411, 412, 421, 422, 423, 424, 425, 428, 429, 457, 468, 479, 486], "typeerror": [113, 115, 120, 121, 126], "u": [437, 442, 445, 452, 454, 469, 480, 481, 482], "ultim": 0, "undefin": [106, 113, 126, 484], "under": [178, 185, 201, 274, 454, 461, 468, 474, 476, 477, 483, 484, 486, 487, 488, 489], "underground": [442, 452, 454, 455], "underli": 359, "understand": [0, 442, 452, 455, 460, 479, 483, 490], "understood": [455, 468], "unemploi": [439, 449], "unfortun": [439, 442, 449, 452], "unhash": [113, 115, 120, 121, 126], "unifi": [0, 73, 82, 91, 100, 260, 274], "unind": 484, "uniqu": 455, "unit": [23, 25, 29, 32, 34, 38, 41, 43, 51, 54, 56, 60, 63, 65, 69, 73, 75, 79, 82, 84, 88, 91, 93, 97, 100, 103, 170, 175, 179, 185, 203, 210, 213, 220, 224, 227, 234, 238, 241, 248, 396, 399, 403, 406, 411, 420, 424, 427, 469, 480, 484, 487, 488, 489, 495], "univers": [0, 454, 455, 457, 474], "unknown": [29, 38, 51, 60, 69, 79, 88, 97, 102, 113, 126, 153, 168, 170, 203, 220, 234, 248, 347, 360, 385, 388, 399, 406, 420, 427], "unlik": [454, 461], "unnecessari": 434, "unrel": 434, "unstabl": 260, "until": [195, 206, 217, 221, 231, 235, 245, 249, 442, 452, 454, 455, 484, 486], "up": [169, 476], "upcom": [454, 455], "updat": [0, 23, 29, 32, 38, 41, 49, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 170, 175, 203, 210, 220, 224, 234, 238, 248, 336, 399, 406, 420, 427, 457, 468, 478, 489], "update_scal": 489, "upgrad": [468, 476, 478], "upon": 457, "upper": 487, "us": [0, 2, 3, 23, 29, 32, 38, 41, 51, 54, 60, 63, 69, 73, 79, 82, 88, 91, 97, 100, 105, 106, 113, 120, 126, 135, 136, 137, 142, 143, 144, 145, 153, 161, 168, 169, 170, 171, 175, 177, 185, 195, 196, 198, 201, 203, 204, 205, 206, 210, 212, 217, 220, 221, 224, 226, 231, 234, 235, 238, 240, 245, 248, 249, 252, 253, 254, 255, 258, 260, 261, 262, 265, 267, 268, 269, 272, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 332, 335, 336, 337, 341, 347, 348, 349, 359, 360, 363, 368, 373, 375, 381, 386, 388, 389, 390, 392, 393, 394, 399, 406, 420, 423, 427, 430, 431, 433, 434, 454, 455, 457, 460, 468, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "usag": 483, "user": [431, 434, 454, 483, 484, 486, 488, 489, 490], "usual": [279, 317, 336, 454], "util": [0, 102, 106, 137, 142, 143, 144, 145, 153, 164, 484, 488], "v": [112, 135, 171, 196, 197, 199, 205, 254, 255, 259, 261, 262, 266, 268, 269, 273, 370, 386, 392, 393, 480, 481, 482], "v0": [430, 454, 456], "vahe": 455, "vale": [168, 169], "valu": [100, 102, 106, 113, 126, 145, 148, 151, 153, 156, 164, 166, 168, 169, 171, 185, 192, 196, 197, 198, 199, 204, 205, 254, 255, 256, 259, 261, 262, 263, 266, 268, 269, 270, 273, 364, 375, 376, 379, 381, 385, 386, 389, 390, 392, 393, 483, 484, 489, 493], "valuabl": 0, "valueerror": [28, 29, 37, 38, 47, 51, 59, 60, 68, 69, 78, 79, 87, 88, 96, 97, 102, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 145, 153, 164, 167, 168, 170, 171, 196, 200, 203, 205, 218, 220, 232, 234, 246, 248, 347, 360, 370, 385, 386, 388, 392, 393, 399, 406, 420, 427], "variabl": 478, "variant": 460, "vbar": [256, 263, 270], "vector": [182, 254, 261, 268, 283, 335, 336, 430, 483, 484, 486, 489], "veloc": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "venv": [468, 478], "verbos": [23, 32, 41, 54, 63, 73, 82, 91, 100, 175, 210, 224, 238, 329, 483, 486], "veri": [279, 317, 430, 439, 442, 449, 452, 454, 455, 476, 489], "version": [171, 392, 448, 455, 456, 474], "vertic": [171, 196, 205, 254, 255, 261, 262, 268, 269, 374, 384, 386, 392, 393, 489], "vibrant": 0, "view": 359, "virtual": 468, "viscos": [31, 40, 41, 42, 48, 49, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 484, 491, 493, 494], "vision": 0, "visual": [73, 100, 171, 196, 205, 368, 386, 392, 393], "vloc": 384, "volum": [25, 31, 34, 40, 41, 43, 46, 49, 53, 56, 62, 65, 71, 75, 81, 84, 90, 93, 99, 103, 105, 112, 135, 173, 179, 208, 213, 223, 227, 237, 241, 251, 327, 341, 396, 401, 403, 408, 411, 422, 424, 429, 454, 479, 480, 481, 482, 484, 491, 492, 493, 494], "volumetr": [31, 40, 53, 62, 71, 81, 90, 99, 173, 208, 223, 237, 251, 401, 408, 422, 429, 479, 480, 481, 482, 491, 493, 494], "vt": 105, "w": 373, "wa": [102, 113, 126, 164, 169, 204, 274, 442, 448, 452, 454, 455, 483, 484, 486, 489, 491, 493], "wai": [442, 452, 455, 476, 487], "walkthrough": 437, "want": [442, 445, 452, 468, 474, 484, 487, 489], "warieth": 455, "warn": [102, 113, 115, 120, 121, 126, 164], "water": [442, 452, 480, 481, 482], "we": [0, 279, 431, 433, 434, 437, 439, 440, 441, 445, 446, 449, 450, 451, 454, 455, 457, 459, 463, 465, 467, 468, 469, 470, 472, 475, 476, 478, 483, 484, 485, 486, 487, 488, 489, 490, 495], "websit": [0, 1, 454, 478], "welcom": [439, 443, 449], "well": [175, 185, 196, 204, 205, 224, 373, 382, 386, 393, 395, 402, 409, 430, 442, 452, 454, 486, 489], "well_id": 483, "wells_id": 483, "wells_pressur": 185, "wells_rat": 185, "were": [113, 126, 201, 442, 452, 484], "what": [0, 434, 442, 452, 484, 486], "wheeler": 455, "when": [73, 82, 91, 100, 102, 106, 113, 126, 137, 142, 143, 144, 145, 153, 171, 185, 196, 205, 260, 335, 336, 347, 360, 375, 379, 386, 390, 392, 393, 439, 442, 449, 452, 455, 476, 484, 485, 486, 489, 493], "where": [0, 161, 164, 171, 196, 198, 205, 279, 317, 327, 370, 381, 386, 392, 393, 434, 454, 455, 461, 483, 484, 486, 488, 489], "which": [0, 120, 152, 168, 171, 175, 177, 185, 196, 200, 205, 212, 218, 226, 232, 240, 246, 252, 274, 279, 327, 374, 386, 392, 393, 439, 441, 449, 450, 454, 455, 460, 461, 476, 483, 484, 486, 487, 489, 490, 491], "while": [185, 201, 335, 336, 347, 439, 449, 480, 486, 489], "who": [0, 439, 449, 454, 455, 468, 474, 476, 479, 495], "whole": [442, 452], "why": [433, 439, 440, 449, 451, 455, 460], "wide": [0, 442, 452, 455], "wider": 454, "widget": 375, "wife": 455, "wiki": 359, "wikipedia": 359, "willing": [454, 495], "window": [171, 196, 205, 375, 385, 386, 390, 392, 393, 468, 478], "window_s": [171, 196, 205, 380, 382, 386, 392, 393, 484], "wise": 252, "within": [0, 317, 430, 441, 450, 454, 457, 460, 470], "withing": 454, "without": [131, 185, 253, 359, 454, 484, 487], "women": 455, "wonder": 455, "word": 161, "work": [279, 364, 365, 430, 439, 445, 449, 454, 455, 457, 460, 468, 469, 475, 476, 486], "worker": 332, "workshop": 0, "workspac": 457, "world": [455, 476], "worldwid": 0, "would": [279, 441, 442, 445, 446, 450, 452, 455, 489], "write": [431, 434, 455, 475], "written": 455, "x": [100, 107, 113, 116, 122, 123, 126, 127, 138, 145, 147, 148, 155, 169, 185, 356, 483, 484, 489], "x64": 483, "xd_valu": 483, "xdpi": 483, "xyz": [185, 378], "xz": 374, "y": [100, 107, 113, 116, 122, 124, 126, 127, 138, 145, 147, 148, 155, 169, 185, 484], "ye": 430, "year": [454, 455], "yet": [469, 471, 476], "you": [0, 171, 196, 205, 317, 373, 386, 392, 393, 433, 434, 438, 440, 441, 442, 445, 446, 447, 450, 451, 452, 454, 455, 457, 468, 469, 476, 478, 483, 484, 487, 489, 495], "your": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 171, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 392, 394, 395, 402, 409, 423, 430, 431, 432, 433, 434, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 457, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493], "yourself": [443, 454], "yousef": 455, "yyyi": 454, "z": [100, 101, 107, 113, 116, 122, 125, 126, 127, 138, 145, 147, 148, 155, 169, 185, 480, 481, 482, 484], "zakariya": [0, 1, 432, 439, 442, 448, 449, 452, 454, 455, 461, 462, 463, 475, 480, 483, 484, 485, 486, 487, 488, 489, 491], "zero": [28, 37, 47, 59, 68, 78, 87, 96, 156, 167, 185, 200, 204, 218, 232, 246, 484], "zoom": [171, 196, 205, 374, 380, 382, 386, 392, 393], "zorica": 455, "zujic": 455}, "titles": ["About Us", "API", "backends", "Backend", "reservoirflow.backends.Backend.ones", "reservoirflow.backends.Backend.transpose", "JAX", "reservoirflow.backends.JAX.name", "reservoirflow.backends.JAX.ones", "reservoirflow.backends.JAX.transpose", "NumPy", "reservoirflow.backends.NumPy.name", "reservoirflow.backends.NumPy.ones", "reservoirflow.backends.NumPy.transpose", "PyTorch", "reservoirflow.backends.PyTorch.name", "reservoirflow.backends.PyTorch.ones", "reservoirflow.backends.PyTorch.transpose", "TensorFlow", "reservoirflow.backends.TensorFlow.name", "reservoirflow.backends.TensorFlow.ones", "reservoirflow.backends.TensorFlow.transpose", "fluids", "Fluid", "reservoirflow.fluids.Fluid.allow_synonyms", "reservoirflow.fluids.Fluid.factors", "reservoirflow.fluids.Fluid.name", "reservoirflow.fluids.Fluid.report", "reservoirflow.fluids.Fluid.set_comp", "reservoirflow.fluids.Fluid.set_units", "reservoirflow.fluids.Fluid.unit", "reservoirflow.fluids.Fluid.units", "MultiPhase", "reservoirflow.fluids.MultiPhase.allow_synonyms", "reservoirflow.fluids.MultiPhase.factors", "reservoirflow.fluids.MultiPhase.name", "reservoirflow.fluids.MultiPhase.report", "reservoirflow.fluids.MultiPhase.set_comp", "reservoirflow.fluids.MultiPhase.set_units", "reservoirflow.fluids.MultiPhase.unit", "reservoirflow.fluids.MultiPhase.units", "SinglePhase", "reservoirflow.fluids.SinglePhase.allow_synonyms", "reservoirflow.fluids.SinglePhase.factors", "reservoirflow.fluids.SinglePhase.name", "reservoirflow.fluids.SinglePhase.report", "reservoirflow.fluids.SinglePhase.set_B", "reservoirflow.fluids.SinglePhase.set_comp", "reservoirflow.fluids.SinglePhase.set_mu", "reservoirflow.fluids.SinglePhase.set_props", "reservoirflow.fluids.SinglePhase.set_rho", "reservoirflow.fluids.SinglePhase.set_units", "reservoirflow.fluids.SinglePhase.unit", "reservoirflow.fluids.SinglePhase.units", "ThreePhase", "reservoirflow.fluids.ThreePhase.allow_synonyms", "reservoirflow.fluids.ThreePhase.factors", "reservoirflow.fluids.ThreePhase.name", "reservoirflow.fluids.ThreePhase.report", "reservoirflow.fluids.ThreePhase.set_comp", "reservoirflow.fluids.ThreePhase.set_units", "reservoirflow.fluids.ThreePhase.unit", "reservoirflow.fluids.ThreePhase.units", "TwoPhase", "reservoirflow.fluids.TwoPhase.allow_synonyms", "reservoirflow.fluids.TwoPhase.factors", "reservoirflow.fluids.TwoPhase.name", "reservoirflow.fluids.TwoPhase.report", "reservoirflow.fluids.TwoPhase.set_comp", "reservoirflow.fluids.TwoPhase.set_units", "reservoirflow.fluids.TwoPhase.unit", "reservoirflow.fluids.TwoPhase.units", "grids", "Grid", "reservoirflow.grids.Grid.allow_synonyms", "reservoirflow.grids.Grid.factors", "reservoirflow.grids.Grid.name", "reservoirflow.grids.Grid.report", "reservoirflow.grids.Grid.set_comp", "reservoirflow.grids.Grid.set_units", "reservoirflow.grids.Grid.unit", "reservoirflow.grids.Grid.units", "IrregularCartesian", "reservoirflow.grids.IrregularCartesian.allow_synonyms", "reservoirflow.grids.IrregularCartesian.factors", "reservoirflow.grids.IrregularCartesian.name", "reservoirflow.grids.IrregularCartesian.report", "reservoirflow.grids.IrregularCartesian.set_comp", "reservoirflow.grids.IrregularCartesian.set_units", "reservoirflow.grids.IrregularCartesian.unit", "reservoirflow.grids.IrregularCartesian.units", "Radial", "reservoirflow.grids.Radial.allow_synonyms", "reservoirflow.grids.Radial.factors", "reservoirflow.grids.Radial.name", "reservoirflow.grids.Radial.report", "reservoirflow.grids.Radial.set_comp", "reservoirflow.grids.Radial.set_units", "reservoirflow.grids.Radial.unit", "reservoirflow.grids.Radial.units", "RegularCartesian", "reservoirflow.grids.RegularCartesian.allow_synonyms", "reservoirflow.grids.RegularCartesian.extract_boundaries", "reservoirflow.grids.RegularCartesian.factors", "reservoirflow.grids.RegularCartesian.get_D", "reservoirflow.grids.RegularCartesian.get_Vt", "reservoirflow.grids.RegularCartesian.get_boundaries", "reservoirflow.grids.RegularCartesian.get_cell_A", "reservoirflow.grids.RegularCartesian.get_cell_Ax", "reservoirflow.grids.RegularCartesian.get_cell_Ay", "reservoirflow.grids.RegularCartesian.get_cell_Az", "reservoirflow.grids.RegularCartesian.get_cell_G", "reservoirflow.grids.RegularCartesian.get_cell_V", "reservoirflow.grids.RegularCartesian.get_cell_boundaries", "reservoirflow.grids.RegularCartesian.get_cell_center", "reservoirflow.grids.RegularCartesian.get_cell_coords", "reservoirflow.grids.RegularCartesian.get_cell_d", "reservoirflow.grids.RegularCartesian.get_cell_dx", "reservoirflow.grids.RegularCartesian.get_cell_dy", "reservoirflow.grids.RegularCartesian.get_cell_dz", "reservoirflow.grids.RegularCartesian.get_cell_icoords", "reservoirflow.grids.RegularCartesian.get_cell_id", "reservoirflow.grids.RegularCartesian.get_cell_k", "reservoirflow.grids.RegularCartesian.get_cell_kx", "reservoirflow.grids.RegularCartesian.get_cell_ky", "reservoirflow.grids.RegularCartesian.get_cell_kz", "reservoirflow.grids.RegularCartesian.get_cell_neighbors", "reservoirflow.grids.RegularCartesian.get_cells_A", "reservoirflow.grids.RegularCartesian.get_cells_Ax", "reservoirflow.grids.RegularCartesian.get_cells_Ay", "reservoirflow.grids.RegularCartesian.get_cells_Az", "reservoirflow.grids.RegularCartesian.get_cells_G", "reservoirflow.grids.RegularCartesian.get_cells_G_diag_1", "reservoirflow.grids.RegularCartesian.get_cells_G_diag_2", "reservoirflow.grids.RegularCartesian.get_cells_G_diag_3", "reservoirflow.grids.RegularCartesian.get_cells_V", "reservoirflow.grids.RegularCartesian.get_cells_center", "reservoirflow.grids.RegularCartesian.get_cells_coords", "reservoirflow.grids.RegularCartesian.get_cells_d", "reservoirflow.grids.RegularCartesian.get_cells_dx", "reservoirflow.grids.RegularCartesian.get_cells_dy", "reservoirflow.grids.RegularCartesian.get_cells_dz", "reservoirflow.grids.RegularCartesian.get_cells_i", "reservoirflow.grids.RegularCartesian.get_cells_icoords", "reservoirflow.grids.RegularCartesian.get_cells_id", "reservoirflow.grids.RegularCartesian.get_cells_k", "reservoirflow.grids.RegularCartesian.get_corners", "reservoirflow.grids.RegularCartesian.get_fdir", "reservoirflow.grids.RegularCartesian.get_fshape", "reservoirflow.grids.RegularCartesian.get_n", "reservoirflow.grids.RegularCartesian.get_n_max", "reservoirflow.grids.RegularCartesian.get_ones", "reservoirflow.grids.RegularCartesian.get_order", "reservoirflow.grids.RegularCartesian.get_prop", "reservoirflow.grids.RegularCartesian.get_pyvista_grid", "reservoirflow.grids.RegularCartesian.get_shape", "reservoirflow.grids.RegularCartesian.get_zeros", "reservoirflow.grids.RegularCartesian.is_anisotropic", "reservoirflow.grids.RegularCartesian.is_heterogeneous", "reservoirflow.grids.RegularCartesian.is_homogeneous", "reservoirflow.grids.RegularCartesian.is_irregular", "reservoirflow.grids.RegularCartesian.is_isotropic", "reservoirflow.grids.RegularCartesian.is_regular", "reservoirflow.grids.RegularCartesian.name", "reservoirflow.grids.RegularCartesian.remove_boundaries", "reservoirflow.grids.RegularCartesian.report", "reservoirflow.grids.RegularCartesian.set_cell_value", "reservoirflow.grids.RegularCartesian.set_comp", "reservoirflow.grids.RegularCartesian.set_prop", "reservoirflow.grids.RegularCartesian.set_props", "reservoirflow.grids.RegularCartesian.set_units", "reservoirflow.grids.RegularCartesian.show", "reservoirflow.grids.RegularCartesian.unit", "reservoirflow.grids.RegularCartesian.units", "models", "BlackOil", "reservoirflow.models.BlackOil.allow_synonyms", "reservoirflow.models.BlackOil.compile", "reservoirflow.models.BlackOil.copy", "reservoirflow.models.BlackOil.factors", "reservoirflow.models.BlackOil.get_alpha", "reservoirflow.models.BlackOil.get_cell_trans", "reservoirflow.models.BlackOil.get_cells_trans", "reservoirflow.models.BlackOil.get_cells_trans_diag", "reservoirflow.models.BlackOil.get_centers", "reservoirflow.models.BlackOil.get_df", "reservoirflow.models.BlackOil.get_domain", "reservoirflow.models.BlackOil.get_init_arrays", "reservoirflow.models.BlackOil.get_shape", "reservoirflow.models.BlackOil.get_solutions", "reservoirflow.models.BlackOil.get_time", "reservoirflow.models.BlackOil.name", "reservoirflow.models.BlackOil.plot", "reservoirflow.models.BlackOil.plot_grid", "reservoirflow.models.BlackOil.report", "reservoirflow.models.BlackOil.run", "reservoirflow.models.BlackOil.save_gif", "reservoirflow.models.BlackOil.set_all_boundaries", "reservoirflow.models.BlackOil.set_boundaries", "reservoirflow.models.BlackOil.set_boundary", "reservoirflow.models.BlackOil.set_comp", "reservoirflow.models.BlackOil.set_scalers", "reservoirflow.models.BlackOil.set_solution", "reservoirflow.models.BlackOil.set_units", "reservoirflow.models.BlackOil.set_well", "reservoirflow.models.BlackOil.show", "reservoirflow.models.BlackOil.solve", "reservoirflow.models.BlackOil.unit", "reservoirflow.models.BlackOil.units", "reservoirflow.models.BlackOil.update_scalers", "Compositional", "reservoirflow.models.Compositional.allow_synonyms", "reservoirflow.models.Compositional.compile", "reservoirflow.models.Compositional.factors", "reservoirflow.models.Compositional.get_solutions", "reservoirflow.models.Compositional.name", "reservoirflow.models.Compositional.report", "reservoirflow.models.Compositional.run", "reservoirflow.models.Compositional.set_comp", "reservoirflow.models.Compositional.set_solution", "reservoirflow.models.Compositional.set_units", "reservoirflow.models.Compositional.solve", "reservoirflow.models.Compositional.unit", "reservoirflow.models.Compositional.units", "Model", "reservoirflow.models.Model.allow_synonyms", "reservoirflow.models.Model.compile", "reservoirflow.models.Model.factors", "reservoirflow.models.Model.get_solutions", "reservoirflow.models.Model.name", "reservoirflow.models.Model.report", "reservoirflow.models.Model.run", "reservoirflow.models.Model.set_comp", "reservoirflow.models.Model.set_solution", "reservoirflow.models.Model.set_units", "reservoirflow.models.Model.solve", "reservoirflow.models.Model.unit", "reservoirflow.models.Model.units", "Thermal", "reservoirflow.models.Thermal.allow_synonyms", "reservoirflow.models.Thermal.compile", "reservoirflow.models.Thermal.factors", "reservoirflow.models.Thermal.get_solutions", "reservoirflow.models.Thermal.name", "reservoirflow.models.Thermal.report", "reservoirflow.models.Thermal.run", "reservoirflow.models.Thermal.set_comp", "reservoirflow.models.Thermal.set_solution", "reservoirflow.models.Thermal.set_units", "reservoirflow.models.Thermal.solve", "reservoirflow.models.Thermal.unit", "reservoirflow.models.Thermal.units", "scalers", "Dummy", "reservoirflow.scalers.Dummy.fit", "reservoirflow.scalers.Dummy.fit_transform", "reservoirflow.scalers.Dummy.inverse_transform", "reservoirflow.scalers.Dummy.name", "reservoirflow.scalers.Dummy.set_output_range", "reservoirflow.scalers.Dummy.transform", "MinMax", "reservoirflow.scalers.MinMax.fit", "reservoirflow.scalers.MinMax.fit_transform", "reservoirflow.scalers.MinMax.inverse_transform", "reservoirflow.scalers.MinMax.name", "reservoirflow.scalers.MinMax.set_output_range", "reservoirflow.scalers.MinMax.transform", "Scaler", "reservoirflow.scalers.Scaler.fit", "reservoirflow.scalers.Scaler.fit_transform", "reservoirflow.scalers.Scaler.inverse_transform", "reservoirflow.scalers.Scaler.name", "reservoirflow.scalers.Scaler.set_output_range", "reservoirflow.scalers.Scaler.transform", "solutions", "Compiler", "Solution", "reservoirflow.solutions.Solution.run", "reservoirflow.solutions.Solution.solve", "analytical", "D1P1", "reservoirflow.solutions.analytical.D1P1.calc_solution", "reservoirflow.solutions.analytical.D1P1.name", "reservoirflow.solutions.analytical.D1P1.run", "reservoirflow.solutions.analytical.D1P1.solve", "D1P2", "reservoirflow.solutions.analytical.D1P2.name", "reservoirflow.solutions.analytical.D1P2.run", "reservoirflow.solutions.analytical.D1P2.solve", "D1P3", "reservoirflow.solutions.analytical.D1P3.name", "reservoirflow.solutions.analytical.D1P3.run", "reservoirflow.solutions.analytical.D1P3.solve", "D2P1", "reservoirflow.solutions.analytical.D2P1.name", "reservoirflow.solutions.analytical.D2P1.run", "reservoirflow.solutions.analytical.D2P1.solve", "D2P2", "reservoirflow.solutions.analytical.D2P2.name", "reservoirflow.solutions.analytical.D2P2.run", "reservoirflow.solutions.analytical.D2P2.solve", "D2P3", "reservoirflow.solutions.analytical.D2P3.name", "reservoirflow.solutions.analytical.D2P3.run", "reservoirflow.solutions.analytical.D2P3.solve", "D3P1", "reservoirflow.solutions.analytical.D3P1.name", "reservoirflow.solutions.analytical.D3P1.run", "reservoirflow.solutions.analytical.D3P1.solve", "D3P2", "reservoirflow.solutions.analytical.D3P2.name", "reservoirflow.solutions.analytical.D3P2.run", "reservoirflow.solutions.analytical.D3P2.solve", "D3P3", "reservoirflow.solutions.analytical.D3P3.name", "reservoirflow.solutions.analytical.D3P3.run", "reservoirflow.solutions.analytical.D3P3.solve", "neurical", "DeepONet", "reservoirflow.solutions.neurical.DeepONet.name", "reservoirflow.solutions.neurical.DeepONet.run", "reservoirflow.solutions.neurical.DeepONet.solve", "PINN", "reservoirflow.solutions.neurical.PINN.fit", "reservoirflow.solutions.neurical.PINN.name", "reservoirflow.solutions.neurical.PINN.run", "reservoirflow.solutions.neurical.PINN.solve", "numerical", "FDM", "reservoirflow.solutions.numerical.FDM.check_MB", "reservoirflow.solutions.numerical.FDM.get_cell_eq", "reservoirflow.solutions.numerical.FDM.get_cells_eq", "reservoirflow.solutions.numerical.FDM.get_matrices_symb", "reservoirflow.solutions.numerical.FDM.get_matrices_vect", "reservoirflow.solutions.numerical.FDM.name", "reservoirflow.solutions.numerical.FDM.run", "reservoirflow.solutions.numerical.FDM.solve", "FEM", "reservoirflow.solutions.numerical.FEM.name", "reservoirflow.solutions.numerical.FEM.run", "reservoirflow.solutions.numerical.FEM.solve", "FVM", "reservoirflow.solutions.numerical.FVM.name", "reservoirflow.solutions.numerical.FVM.run", "reservoirflow.solutions.numerical.FVM.solve", "solvers", "reservoirflow.solutions.numerical.solvers.get_dsolver", "reservoirflow.solutions.numerical.solvers.get_isolver", "utils", "helpers", "reservoirflow.utils.helpers.fshape_warn", "reservoirflow.utils.helpers.get_boundary_str", "reservoirflow.utils.helpers.get_fshape_str", "reservoirflow.utils.helpers.get_points_str", "reservoirflow.utils.helpers.get_verbose_str", "reservoirflow.utils.helpers.intersection", "reservoirflow.utils.helpers.isin", "reservoirflow.utils.helpers.ispoints", "reservoirflow.utils.helpers.issametype", "reservoirflow.utils.helpers.lru_cache", "reservoirflow.utils.helpers.reformat", "reservoirflow.utils.helpers.remove_diag", "reservoirflow.utils.helpers.shape_error", "profme", "reservoirflow.utils.profme.cProfiler", "reservoirflow.utils.profme.lProfiler", "reservoirflow.utils.profme.profile", "reservoirflow.utils.profme.timeit", "pyvista", "reservoirflow.utils.pyvista.add_desc", "reservoirflow.utils.pyvista.add_grid_labels", "reservoirflow.utils.pyvista.add_ruler", "reservoirflow.utils.pyvista.add_title", "reservoirflow.utils.pyvista.add_wells", "reservoirflow.utils.pyvista.align_camera", "reservoirflow.utils.pyvista.decide_widget", "reservoirflow.utils.pyvista.get_annotations", "reservoirflow.utils.pyvista.get_cbar_dict", "reservoirflow.utils.pyvista.get_cdir", "reservoirflow.utils.pyvista.get_colormap", "reservoirflow.utils.pyvista.get_grid_plotter", "reservoirflow.utils.pyvista.get_limits_fmt", "reservoirflow.utils.pyvista.get_model_plotter", "reservoirflow.utils.pyvista.get_model_values", "reservoirflow.utils.pyvista.get_text_locs", "reservoirflow.utils.pyvista.get_window_size", "reservoirflow.utils.pyvista.save_gif", "reservoirflow.utils.pyvista.set_background_color", "reservoirflow.utils.pyvista.set_mode", "reservoirflow.utils.pyvista.set_plotter_backend", "reservoirflow.utils.pyvista.set_plotter_config", "reservoirflow.utils.pyvista.set_text_color", "reservoirflow.utils.pyvista.show_grid", "reservoirflow.utils.pyvista.show_model", "wells", "Directional", "reservoirflow.wells.Directional.factors", "reservoirflow.wells.Directional.name", "reservoirflow.wells.Directional.report", "reservoirflow.wells.Directional.set_units", "reservoirflow.wells.Directional.unit", "reservoirflow.wells.Directional.units", "MultiCell", "reservoirflow.wells.MultiCell.factors", "reservoirflow.wells.MultiCell.name", "reservoirflow.wells.MultiCell.report", "reservoirflow.wells.MultiCell.set_units", "reservoirflow.wells.MultiCell.unit", "reservoirflow.wells.MultiCell.units", "SingleCell", "reservoirflow.wells.SingleCell.allow_synonyms", "reservoirflow.wells.SingleCell.factors", "reservoirflow.wells.SingleCell.name", "reservoirflow.wells.SingleCell.report", "reservoirflow.wells.SingleCell.set_cell_id", "reservoirflow.wells.SingleCell.set_constrain", "reservoirflow.wells.SingleCell.set_props", "reservoirflow.wells.SingleCell.set_q", "reservoirflow.wells.SingleCell.set_r", "reservoirflow.wells.SingleCell.set_s", "reservoirflow.wells.SingleCell.set_units", "reservoirflow.wells.SingleCell.unit", "reservoirflow.wells.SingleCell.units", "Well", "reservoirflow.wells.Well.factors", "reservoirflow.wells.Well.name", "reservoirflow.wells.Well.report", "reservoirflow.wells.Well.set_units", "reservoirflow.wells.Well.unit", "reservoirflow.wells.Well.units", "Capabilities", "Blog \ud83d\uddd2", "blog01 \ud83d\udcdd", "External \ud83c\udf10", "Commenting Guidelines \u2696", "Community", "Event 001 \ud83d\udcc6", "Events \ud83d\udcc5", "Ask a Question \u2753", "Are You a Reservoir Engineer? \ud83d\ude0e\ud83d\udee2", "Community Topics \ud83d\udc4f", "Request a Topic \ud83e\udd1a", "Why do we need ReservoirFlow? \ud83e\udd37\u200d\u2642\ufe0f", "Forum \ud83d\udd25", "General Discussion \ud83d\udcad", "Introduce Yourself \ud83d\udc4b", "Make a Suggestion \ud83d\udca1", "News \ud83d\udd14", "Newsletter 1 \ud83d\udcf0", "Are You a Reservoir Engineer? \ud83d\ude0e\ud83d\udee2", "Request a Topic \ud83e\udd1a", "Topics \ud83d\udc4f", "Why do we need ReservoirFlow? \ud83e\udd37\u200d\u2642\ufe0f", "&lt;no title&gt;", "Home", "Release Note v0.1.0", "Release Notes", "Collaboration \ud83e\udd1d", "Company 1 <span class=\"sd-sphinx-override sd-badge sd-outline-secondary sd-text-secondary\">Sponsor</span>", "Companies \ud83d\udcbc", "Zakariya Abugrin <span class=\"sd-sphinx-override sd-badge sd-outline-secondary sd-text-secondary\">Author</span>", "PINNs are Neurical Solutions \ud83d\udd8b\ufe0f", "Scaling Differential Equations", "Individuals \ud83d\udcaa", "tcolab_0001 \u270f", "Teams \ud83d\udc6f", "University 1 <span class=\"sd-sphinx-override sd-badge sd-outline-secondary sd-text-secondary\">Sponsor</span>", "Universities \ud83c\udf93", "Contribution \ud83e\uddba", "Backlog \ud83d\udccb", "Development \ud83d\udc68\u200d\ud83d\udcbb", "Sprint 0001 \u26f3", "Sprints \ud83c\udfaf", "References \ud83d\udce6", "R&amp;D", "ReservoirFlow Paper \ud83d\udcc4", "Support Us", "Equations \ud83e\uddfe", "Getting Started \ud83d\udc24", "Glossary \ud83d\udcc7", "Access Nomenclature", "Nomenclature \ud83c\udff7", "&lt;no title&gt;", "Different Solutions for 1-Dimensional-1-Phase Problem", "Five Spot Pattern Single Phase", "Learn Scientific Computing", "Understand Compiling", "Understand <code class=\"docutils literal notranslate\"><span class=\"pre\">grids</span></code> Module", "Understand <code class=\"docutils literal notranslate\"><span class=\"pre\">profme</span></code> Module", "Understand <code class=\"docutils literal notranslate\"><span class=\"pre\">scalers</span></code> Module", "Tutorials \ud83d\udc68\u200d\ud83c\udfeb", "Access Units and Factors", "&lt;no title&gt;", "Units &amp; Factors \ud83d\udcd0", "&lt;no title&gt;", "User Guide"], "titleterms": {"0": 455, "0001": 471, "001": 436, "1": [448, 455, 458, 466, 483], "1d": 487, "3d": 484, "40": 484, "about": 0, "abugrin": 460, "access": [480, 491], "add": 484, "add_desc": 369, "add_grid_label": 370, "add_rul": 371, "add_titl": 372, "add_wel": 373, "align_camera": 374, "allow_synonym": [24, 33, 42, 55, 64, 74, 83, 92, 101, 176, 211, 225, 239, 410], "also": [481, 493], "analyt": [279, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 312, 314, 315, 316], "api": 1, "ar": [439, 449, 461], "ask": 438, "author": 460, "backend": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 469], "backlog": 469, "blackoil": [175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "blog": 431, "blog01": 432, "book": 473, "boundari": 484, "build": [486, 489], "calc_solut": 281, "can": 476, "capabl": 430, "cartesian": 484, "cell": 487, "check_mb": 329, "cite": 475, "code": 468, "collabor": [457, 463], "comment": [0, 1, 2, 3, 6, 10, 14, 18, 22, 23, 32, 41, 54, 63, 72, 73, 82, 91, 100, 174, 175, 210, 224, 238, 252, 253, 260, 267, 274, 275, 276, 279, 280, 285, 289, 293, 297, 301, 305, 309, 313, 317, 318, 322, 327, 328, 337, 341, 345, 348, 349, 363, 368, 394, 395, 402, 409, 423, 430, 432, 433, 434, 436, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 452, 455, 458, 460, 461, 462, 464, 466, 468, 469, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493], "commun": [435, 440], "compani": [458, 459, 476], "compil": [177, 212, 226, 240, 275, 484, 486, 489], "composit": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "compress": 484, "comput": 485, "condit": 484, "conduct": 468, "contact": 454, "content": [435, 454, 474, 495], "contribut": 468, "contributor": 455, "convent": 454, "copi": 178, "cprofil": 364, "creat": [483, 484, 487], "current": 469, "custom": 489, "d": 474, "d1p1": [280, 281, 282, 283, 284], "d1p2": [285, 286, 287, 288], "d1p3": [289, 290, 291, 292], "d2p1": [293, 294, 295, 296], "d2p2": [297, 298, 299, 300], "d2p3": [301, 302, 303, 304], "d3p1": [305, 306, 307, 308], "d3p2": [309, 310, 311, 312], "d3p3": [313, 314, 315, 316], "data": 489, "datafram": 484, "decide_widget": 375, "dedic": 455, "deeponet": [318, 319, 320, 321], "defin": 484, "definit": 479, "develop": [470, 476], "dictionari": [480, 491], "differ": 483, "differenti": 462, "dimension": 483, "direct": [395, 396, 397, 398, 399, 400, 401], "disclaim": 454, "discuss": 444, "do": [442, 452], "dummi": [253, 254, 255, 256, 257, 258, 259], "engin": [439, 449], "environ": 478, "equat": [462, 477], "event": [436, 437], "exampl": 489, "extern": 433, "extra": [435, 474, 495], "extract_boundari": 102, "factor": [25, 34, 43, 56, 65, 75, 84, 93, 103, 179, 213, 227, 241, 396, 403, 411, 424, 491, 493], "fdm": [328, 329, 330, 331, 332, 333, 334, 335, 336], "fem": [337, 338, 339, 340], "fit": [254, 261, 268, 323], "fit_transform": [255, 262, 269], "five": 484, "fluid": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 469, 484], "forum": 443, "frame": 489, "fshape_warn": 350, "fund": 476, "fvm": [341, 342, 343, 344], "gener": [444, 479], "get": 478, "get_alpha": 180, "get_annot": 376, "get_boundari": 106, "get_boundary_str": 351, "get_cbar_dict": 377, "get_cdir": 378, "get_cell_a": 107, "get_cell_ai": 109, "get_cell_ax": 108, "get_cell_az": 110, "get_cell_boundari": 113, "get_cell_cent": 114, "get_cell_coord": 115, "get_cell_d": 116, "get_cell_di": 118, "get_cell_dx": 117, "get_cell_dz": 119, "get_cell_eq": 330, "get_cell_g": 111, "get_cell_icoord": 120, "get_cell_id": 121, "get_cell_k": 122, "get_cell_ki": 124, "get_cell_kx": 123, "get_cell_kz": 125, "get_cell_neighbor": 126, "get_cell_tran": 181, "get_cell_v": 112, "get_cells_a": 127, "get_cells_ai": 129, "get_cells_ax": 128, "get_cells_az": 130, "get_cells_cent": 136, "get_cells_coord": 137, "get_cells_d": 138, "get_cells_di": 140, "get_cells_dx": 139, "get_cells_dz": 141, "get_cells_eq": 331, "get_cells_g": 131, "get_cells_g_diag_1": 132, "get_cells_g_diag_2": 133, "get_cells_g_diag_3": 134, "get_cells_i": 142, "get_cells_icoord": 143, "get_cells_id": 144, "get_cells_k": 145, "get_cells_tran": 182, "get_cells_trans_diag": 183, "get_cells_v": 135, "get_cent": 184, "get_colormap": 379, "get_corn": 146, "get_d": 104, "get_df": 185, "get_domain": 186, "get_dsolv": 346, "get_fdir": 147, "get_fshap": 148, "get_fshape_str": 352, "get_grid_plott": 380, "get_init_arrai": 187, "get_isolv": 347, "get_limits_fmt": 381, "get_matrices_symb": 332, "get_matrices_vect": 333, "get_model_plott": 382, "get_model_valu": 383, "get_n": 149, "get_n_max": 150, "get_on": 151, "get_ord": 152, "get_points_str": 353, "get_prop": 153, "get_pyvista_grid": 154, "get_shap": [155, 188], "get_solut": [189, 214, 228, 242], "get_text_loc": 384, "get_tim": 190, "get_verbose_str": 354, "get_vt": 105, "get_window_s": 385, "get_zero": 156, "gif": 484, "glossari": 479, "grid": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 469, 484, 487], "guid": 495, "guidelin": 434, "helper": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "home": 454, "how": 476, "i": 476, "id": 487, "import": [454, 483, 484, 486, 488, 489], "improv": 469, "indic": 454, "individu": 463, "inject": 484, "instal": [454, 478], "intersect": 355, "introduc": 445, "introduct": [462, 483, 484, 485, 486, 487, 488, 489], "inverse_transform": [256, 263, 270], "irregularcartesian": [82, 83, 84, 85, 86, 87, 88, 89, 90], "is_anisotrop": 157, "is_heterogen": 158, "is_homogen": 159, "is_irregular": 160, "is_isotrop": 161, "is_regular": 162, "isin": 356, "ispoint": 357, "issametyp": 358, "jax": [6, 7, 8, 9], "learn": 485, "licens": 454, "load": 468, "lprofil": 365, "lru_cach": 359, "make": 446, "mathemat": 479, "minmax": [260, 261, 262, 263, 264, 265, 266], "model": [174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 469, 483, 484, 486, 487, 489], "modul": [469, 487, 488, 489], "multicel": [402, 403, 404, 405, 406, 407, 408], "multiphas": [32, 33, 34, 35, 36, 37, 38, 39, 40], "name": [7, 11, 15, 19, 26, 35, 44, 57, 66, 76, 85, 94, 163, 191, 215, 229, 243, 257, 264, 271, 282, 286, 290, 294, 298, 302, 306, 310, 314, 319, 324, 334, 338, 342, 397, 404, 412, 425], "need": [442, 452], "neuric": [317, 319, 320, 321, 323, 324, 325, 326, 461], "new": [447, 469], "newslett": 448, "nomenclatur": [480, 481], "note": [455, 456], "numer": [327, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 347], "numpi": [10, 11, 12, 13], "ones": [4, 8, 12, 16, 20], "panda": [484, 489], "paper": [473, 475], "pattern": 484, "perform": 433, "phase": [483, 484], "philosophi": 0, "pinn": [322, 323, 324, 325, 326, 461], "plot": 192, "plot_grid": 193, "prerequisit": 483, "problem": 483, "product": 484, "profil": 366, "profm": [363, 364, 365, 366, 367, 488], "project": 476, "python": 479, "pytorch": [14, 15, 16, 17], "pyvista": [368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "question": 438, "r": 474, "radial": [91, 92, 93, 94, 95, 96, 97, 98, 99], "refer": [473, 491, 493], "reformat": 360, "regular": 484, "regularcartesian": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "releas": [455, 456], "remove_boundari": 164, "remove_diag": 361, "report": [27, 36, 45, 58, 67, 77, 86, 95, 165, 194, 216, 230, 244, 398, 405, 413, 426], "repositori": 468, "request": [441, 450], "research": 476, "reservoir": [439, 449, 484], "reservoirflow": [0, 1, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 277, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 312, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 442, 452, 469, 475, 479, 483, 484, 486, 488, 489], "result": [484, 489], "run": [195, 217, 231, 245, 277, 283, 287, 291, 295, 299, 303, 307, 311, 315, 320, 325, 335, 339, 343, 484, 486, 489], "save": 484, "save_gif": [196, 386], "scale": 462, "scaler": [252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 489], "scientif": 485, "see": [481, 493], "set_": 419, "set_all_boundari": 197, "set_b": 46, "set_background_color": 387, "set_boundari": [198, 199], "set_cell_id": 414, "set_cell_valu": 166, "set_comp": [28, 37, 47, 59, 68, 78, 87, 96, 167, 200, 218, 232, 246], "set_constrain": 415, "set_mod": 388, "set_mu": 48, "set_output_rang": [258, 265, 272], "set_plotter_backend": 389, "set_plotter_config": 390, "set_prop": [49, 168, 169, 416], "set_q": 417, "set_r": 418, "set_rho": 50, "set_scal": 201, "set_solut": [202, 219, 233, 247], "set_text_color": 391, "set_unit": [29, 38, 51, 60, 69, 79, 88, 97, 170, 203, 220, 234, 248, 399, 406, 420, 427], "set_wel": 204, "shape_error": 362, "show": [171, 205, 484, 489], "show_grid": 392, "show_model": 393, "simpl": 489, "simul": [484, 486, 489], "singl": 484, "singlecel": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "singlephas": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "solut": [274, 276, 277, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 294, 295, 296, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 312, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 347, 461, 469, 483], "solv": [206, 221, 235, 249, 278, 284, 288, 292, 296, 300, 304, 308, 312, 316, 321, 326, 336, 340, 344], "solver": [345, 346, 347], "sponsor": [454, 458, 466, 495], "sponsorship": 476, "spot": 484, "sprint": [471, 472], "start": 478, "step": 484, "suggest": 446, "support": 476, "tabl": [454, 481], "tcolab_0001": 464, "team": [0, 465], "tensorflow": [18, 19, 20, 21], "thermal": [238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "thi": 476, "threephas": [54, 55, 56, 57, 58, 59, 60, 61, 62], "time": 484, "timeit": 367, "todo": 100, "topic": [440, 441, 450, 451], "transform": [259, 266, 273], "transpos": [5, 9, 13, 17, 21], "tutori": 490, "twophas": [63, 64, 65, 66, 67, 68, 69, 70, 71], "u": [0, 476], "understand": [486, 487, 488, 489], "unit": [30, 31, 39, 40, 52, 53, 61, 62, 70, 71, 80, 81, 89, 90, 98, 99, 172, 173, 207, 208, 222, 223, 236, 237, 250, 251, 400, 401, 407, 408, 421, 422, 428, 429, 491, 493], "univers": [466, 467, 476], "update_scal": 209, "user": [476, 495], "util": [348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 469], "v0": 455, "version": 454, "virtual": 478, "visual": 484, "we": [442, 452], "well": [394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 469, 484], "why": [442, 452], "you": [439, 449], "yourself": 445, "zakariya": 460}})